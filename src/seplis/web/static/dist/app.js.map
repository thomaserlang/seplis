{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/seplis/web/static/app/api.jsx","webpack://exports/./src/seplis/web/static/app/utils.jsx","webpack://exports/./src/seplis/web/static/app/components/Search.jsx","webpack://exports/./src/seplis/web/static/app/components/player/PlayNext.jsx","webpack://exports/./src/seplis/web/static/app/components/player/VolumeBar.jsx","webpack://exports/./src/seplis/web/static/app/components/player/AudioSubBar.jsx","webpack://exports/./src/seplis/web/static/app/components/player/Slider.jsx","webpack://exports/./src/seplis/web/static/app/components/Loader.jsx","webpack://exports/./src/seplis/web/static/app/components/player/Player.jsx","webpack://exports/./src/seplis/web/static/app/components/player/Chromecast.jsx","webpack://exports/./src/seplis/web/static/app/components/player/ChromecastIcon.jsx","webpack://exports/./src/seplis/web/static/app/events.jsx","webpack://exports/./src/seplis/web/static/app/components/player/ChromecastBar.jsx","webpack://exports/./src/seplis/web/static/app/components/Navbar.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/FanButton.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/UserRating.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/ShowNav.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/WatchedButton.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/EpisodeListItem.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/NextToWatch.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/LatestEpisodesSideBar.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/EpisodeLastWatched.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Main.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/SelectSeasonEpisode.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/WatchedProgression.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/SelectSeason.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/SeasonList.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Seasons.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Stats.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Info.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/EditAlternativeTitles.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/EditFields.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Edit.jsx","webpack://exports/./src/seplis/web/static/app/components/Pagination.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Images.jsx","webpack://exports/./src/seplis/web/static/app/views/show/NewImage.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Show.jsx","webpack://exports/./src/seplis/web/static/app/views/show/New.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/List.jsx","webpack://exports/./src/seplis/web/static/app/components/ListMode.jsx","webpack://exports/./src/seplis/web/static/app/components/SelectGenres.jsx","webpack://exports/./src/seplis/web/static/app/views/Following.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/RecentlyAired.jsx","webpack://exports/./src/seplis/web/static/app/views/RecentlyAired.jsx","webpack://exports/./src/seplis/web/static/app/views/ShowsWatched.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/Countdown.jsx","webpack://exports/./src/seplis/web/static/app/views/Countdown.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/EpisodesToWatch.jsx","webpack://exports/./src/seplis/web/static/app/views/EpisodesToWatch.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/Watched.jsx","webpack://exports/./src/seplis/web/static/app/views/Main.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/AirDates.jsx","webpack://exports/./src/seplis/web/static/app/views/AirDates.jsx","webpack://exports/./src/seplis/web/static/app/views/Account.jsx","webpack://exports/./src/seplis/web/static/app/views/Password.jsx","webpack://exports/./src/seplis/web/static/app/views/PlayServers.jsx","webpack://exports/./src/seplis/web/static/app/views/PlayServer.jsx","webpack://exports/./src/seplis/web/static/app/views/UserShowsStats.jsx","webpack://exports/./src/seplis/web/static/app/views/index.jsx","webpack://exports/./src/seplis/web/static/app/views/SignIn.jsx","webpack://exports/./src/seplis/web/static/app/views/SignOut.jsx","webpack://exports/./src/seplis/web/static/app/views/CreateUser.jsx","webpack://exports/./src/seplis/web/static/app/views/show/PlayEpisode.jsx","webpack://exports/./src/seplis/web/static/app/components/RenderError.jsx","webpack://exports/./src/seplis/web/static/app/views/ResetPassword.jsx","webpack://exports/./src/seplis/web/static/app/index.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","handleError","error","status","responseJSON","code","localStorage","removeItem","location","href","request","url","options","query","$","param","method","localRequest","FormData","JSON","stringify","startsWith","seplisBaseUrl","indexOf","headers","Accept","access_token","getItem","Authorization","ajax","contentType","isAuthed","requireAuthed","getUserId","getUserLevel","pad","str","max","toString","episodeNumber","show","episode","episode_type","number","season","air_date","episodeTitle","title","guid","s4","Math","floor","random","substring","secondsToTime","secs","hours","minutes","seconds","dateInDays","dt","Date","days","abs","getTime","divmod","pluralize","join","secondsToPretty","showTotalHours","months","years","totalHours","round","h","num","word","a","b","locationQuery","querystring","parse","search","Search","props","onInputChanged","inputChanged","onKeyDown","keyDown","onMouseOver","mouseOver","onMouseOut","mouseOut","onSubmit","submit","onClick","click","state","results","selectedResultId","requesting","onDocumentClick","documentClick","document","addEventListener","this","removeEventListener","e","form","contains","target","setState","abort","trim","title_suggest","per_page","fields","done","suggestNode","scrollTop","setNextSelectedId","keyCode","parseInt","getAttribute","val","disableScroll","id","height","getElementById","offsetHeight","g","preventDefault","className","ref","type","placeholder","onChange","style","display","map","data-id","resultClassName","src","poster_image","premiered","React","Component","propTypes","PropTypes","string","description","PlayNext","onNextClick","nextClick","func","VolumeBar","onSliderMouseMove","sliderMouseMove","onSliderClick","sliderClick","onIconClick","iconClick","percent","muted","volume","icon","event","buttons","stopPropagation","scrubber","querySelector","y","clientY","offsetTop","setItem","onMouseMove","bottom","ClassNames","fa","renderBar","metadata","onAudioChange","onSubtitleChange","bool","AudioSubBar","audio","subtitles","parseMetadata","onAudioClick","audioClick","onSubtitleClick","subtitleClick","undefined","streams","stream","lang","tags","language","index","codec_type","includes","codec_name","data-data","cls","audioSubtitlesElem","renderSubtitles","renderAudio","renderAudioSubtitles","duration","isRequired","onReturnCurrentTime","onNewTime","Slider","x","getEventXOffset","norm","slider","offsetWidth","newTime","trunc","currentTime","hoverTime","drag","mouseMove","timerGetCurrentTime","getCurrentTime","clearTimeout","setTimeout","match","originalEvent","touches","changedTouches","offsetLeft","elem","isNaN","offsetParent","clientX","left","onMouseLeave","mouseLeave","onTouchStart","onTouchMove","touchMove","onTouchCancel","onTouchEnd","touchEnd","renderHoverTime","width","progressPercent","hcenter","Loader","loader","defaultProps","playServerUrl","playId","session","startTime","info","nextInfo","backToInfo","currentInfo","audio_lang","subtitle_lang","onTimeUpdate","Player","onPlayPauseClick","playPauseClick","format","pingTimer","hls","onFullscreenClick","fullscreenClick","onVolumeChange","volumeChange","audioChange","subtitleChange","hideControlsTimer","onSliderReturnCurrentTime","sliderReturnCurrentTime","onSliderNewTime","sliderNewTime","playing","time","fullscreen","showControls","subtitle","loading","video","timeupdateEvent","pauseEvent","playEvent","fullscreenchangeEvent","playError","playWaiting","playClick","loadedEvent","setPingTimer","loadStream","getPlayUrl","onmousemove","ontouchmove","onkeypress","keypress","onbeforeunload","beforeUnload","Hls","isSupported","load","play","destroy","bufferTimer","clearInterval","startLevel","manifestLoadingTimeOut","debug","loadSource","attachMedia","on","Events","MANIFEST_PARSED","ERROR","hlsError","console","warn","fatal","ErrorTypes","NETWORK_ERROR","log","startLoad","MEDIA_ERROR","swapAudioCodec","handleMediaError","recoverMediaError","paused","setHideControlsTimer","timeout","pause","fullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","currentTarget","MEDIA_ERR_DECODE","seekable","end","cancelPlayUrl","then","Promise","resolve","reject","fail","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","enterFullscreen","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","webkitEnterFullscreen","changeVideoState","visibility","showControlsVisibility","renderPlayNext","playPause","getCurrentTimeText","getDurationText","preload","autoPlay","controls","renderControlsTop","renderControlsBottom","renderLoading","getPlayServer","playServers","selected","play_url","play_id","playServer","always","message","events","ANY_CHANGED","AVAILABLE","IS_CONNECTED","PLAYER_STATE","CURRENT_TIME","Chromecast","loaded","onInit","initialized","initCast","loadCastScript","initList","isAvailable","sessionRequest","chrome","cast","SessionRequest","seplisChromecastAppId","apiConfig","ApiConfig","sessionListener","receiverListener","AutoJoinPolicy","ORIGIN_SCOPED","initialize","script","createElement","head","appendChild","requestSession","mediaSession","receiver","friendlyName","getEstimatedTime","success","playerState","showId","isConnected","alert","all","position","v","customData","token","apiUrl","playUrl","media","LoadRequest","_playEpisodeMediaInfo","getSession","loadMedia","mediaListener","mediaInfo","MediaInfo","TvShowMediaMetadata","seriesTitle","originalAirdate","metadataType","MetadataType","TV_SHOW","images","eventListener","setInterval","dispatchEvent","addMediaListener","addUpdateListener","sessionUpdateListener","SessionStatus","CONNECTED","mediaSessionUpdateListener","field","_dispatchEvent","forEach","f","ChromecastIcon","connected","available","onConnected","onDeviceAvailable","deviceAvailable","onCastInit","castIconClick","trigger_episode_watched_status","show_id","episode_number","Event","ChromecastBar","deviceName","changingTime","clickPlayNextEpisode","playNextEpisode","castStateChanged","removeMessageListener","receiveCastInfo","subAudioSubSave","playEpisode","playOrPause","playerStateChanged","connectedChanged","currentTimeChanged","getFriendlyName","addMessageListener","namespace","getMediaSession","getPlayNextEpisode","sendMessage","nextEpisode","items","getPlayNextInfo","renderPlayControl","getDuration","playNext","renderFinished","renderPlaying","renderReadyToPlay","Navbar","data-toggle","to","renderMain","renderAirDates","renderShowDropdown","renderChromecast","renderCreateUser","renderSignIn","renderUserMenu","following","FanButton","blur","btnClass","btn","aria-label","rating","UserRating","getRating","handleChange","textAlignLast","Array","fill","ShowNav","activeClassName","borderBottom","exact","renderRating","renderSettings","watched","WatchedButton","setWatchedState","onWatchedIncr","onWatchedDecr","onWatchedClick","times","watchedApiEndpoint","replace","role","dropdown","watching","renderDropdown","displaySeason","EpisodeListItem","onPlayClick","color","renderEpisodeNumber","renderAirDate","user_watched","NextToWatch","eventGet","hidden","numberOfEpisodes","LatestEpisodesSideBar","episodes","getEpisodes","dateUTC","Fecha","q","sort","air_datetime","item","renderCountdown","EpisodeLastWatched","Main","renderNextToWatch","seasons","array","selectedNumber","SelectSeasonEpisode","rows","from","label","renderSeason","WatchedProgression","showForm","fromNumber","toNumber","saving","dropdownButtonClick","selectChange","formSubmit","getNextToWatch","fromN","toN","reload","disabled","renderForm","selectedSeason","SelectSeason","onSeasonChange","SeasonList","seasonNumber","seasonEpisodeNumbers","total","append","seasonNum","Seasons","seasonChange","setQuerySeason","prevProps","qs","setSeason","history","pathname","Stats","userStats","getUserStats","stats","totalEpisodes","episodes_watched","episodes_watched_minutes","episodeCount","countEpisodes","renderUserStats","runtime","Info","statusToText","genres","desc","text","renderGeneral","renderDescription","arrayOf","EditAlternativeTitles","select2","defaultValue","multiple","externals","importerTypes","EditFields","onImporterSelected","importerSelected","onInputChange","showexternals","importers","alternative_titles","external","lookupExternals","required","renderExternals","renderImporter","Edit","confirm","deleting","deleteSuccess","unflatten","Serialize","hash","deleteClick","renderError","renderSuccess","renderDelete","jqXHR","onPageChange","Pagination","parseJqXHR","pageChange","nextProps","page","pages","getResponseHeader","renderOptions","Images","setBrowserPath","poster_image_id","textStatus","image","pi","image-id","setDefault","renderNewImageButton","alt","renderSetDefault","NewImage","fd","selectedFile","files","onFileChange","onUpload","Show","seplis_tv_show","path","render","endsWith","renderShow","renderShowImporting","New","extra","shows","mobile_xscroll","listMode","List","dataset","showid","renderEpisode","user_watching","row","watched_at","trClick","data-showid","renderUserWatching","user_rating","renderUserWatchingHeader","renderListItem","lm","renderGrid","renderList","onModeChange","ListMode","fas","modeChange","data-type","renderButton","SelectGenres","selectedGenre","Following","getShows","forceUpdate","genre","userId","expand","totalCount","listModeChange","genreChange","sortChange","perPage","RecentlyAired","getData","getRecentlyAired","renderItem","getItems","ShowsWatched","Countdown","getCountdown","EpisodesToWatch","getEpisodesToWatch","Watched","getWatched","visChange","visibilitychange","failed","recentlyWatched","countdown","episodesToWatch","weekdays","date","getDay","d1","d2","now","ceil","renderWeekday","renderHeaderDate","AirDates","Account","Password","password","newPassword","focus","errors","renderFieldError","PlayServers","getPlayServers","body","renderPlayServers","render2","PlayServer","onDelete","onGiveAccess","onRemoveUserAccess","secret","users","redirect","params","serverId","getUsersWithAccess","incLoading","username","u","verticalAlign","renderGiveAccessForm","renderUsers","renderDeleteButton","renderUsersWithAccess","UserShowsStats","getStats","fan_of","shows_watched","shows_finished","Index","component","ShowNew","SignIn","email","onSignIn","onDataChange","client_id","seplisClientId","grant_type","saveUserIdAndRedirect","user","level","autoFocus","paddingLeft","fontSize","SignOut","CreateUser","signin","withRouter","PlayEpisode","loadingPlayServers","loadingShow","loadingEpisode","loadingNextEpisode","loadingLang","loadingStartTime","playServerError","timeUpdate","lastPos","markedAsWatched","getShow","getEpisode","getNextEpisode","getLanguage","getStartTime","obj","saveSub","getCurrentInfo","renderAirs","margin","marginTop","renderPlayServerErrorMessage","renderPlayServerError","loadCast","getInfo","getBackToInfo","RenderError","ResetPassword","submitEmail","submitReset","renderSendForm","renderSendSuccess","renderResetForm","renderResetSuccess","renderReset","renderSend","ReactDOM"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpexports\"] = window[\"webpackJsonpexports\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([68,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import $ from 'jquery';\n\nfunction handleError(error) {\n    if (error.status === 401) {\n        if (error.responseJSON.code === 1009) {\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('user_id');\n            localStorage.removeItem('accessLevel');\n            location.href = '/sign-in';\n        }\n    }\n}\n\nexport function request(url, options = {}) {\n    let query = $.param(options.query || '', true);\n    let method = options.method || (options.data ? 'POST':'GET');\n    let data = options.data;\n    let localRequest = options.localRequest || false;\n\n    if ((typeof(data) !== 'undefined') && (method !== 'GET') && !(data instanceof FormData)) {\n        data = JSON.stringify(data);\n    }\n    \n    if ((!url.startsWith('http')) && (!localRequest)) {\n        url = seplisBaseUrl + url;\n    }\n\n    if (query) {\n        if (url.indexOf('?') === -1) {\n            url += '?' + query;\n        } else {\n            url += '&' + query;\n        }\n    }\n\n    let headers = {\n        Accept: 'application/json; charset=utf-8',\n    }\n    if (url.startsWith(seplisBaseUrl)) {\n        let access_token = localStorage.getItem('access_token');\n        if (access_token)\n            headers.Authorization = `Bearer ${access_token}`;\n    }\n\n    return $.ajax({\n        url: url,\n        method: method,\n        data: data,\n        contentType: 'application/json',\n        headers: headers,\n        'error': handleError,\n    })\n}\n\nfunction getCookie(name) {\n    var r = document.cookie.match(\"\\\\b\" + name + \"=([^;]*)\\\\b\");\n    return r ? r[1] : null;\n}","import querystring from 'query-string'\n\nexport function isAuthed() {\n    return (localStorage.getItem('access_token') !== null);\n}\n\nexport function requireAuthed() {\n    if (!isAuthed()) {\n        location.href = '/sign-in';\n        throw 'Not authed!';\n    }\n    return true;\n}\n\nexport function getUserId() {\n    requireAuthed();\n    return localStorage.getItem('user_id') || 0;\n}\n\nexport function getUserLevel() {\n    return localStorage.getItem('user_level') || null;\n}\n\nexport function pad(str, max) {\n  str = str.toString();\n  return str.length < max ? pad(\"0\" + str, max) : str;\n}\n\nexport function episodeNumber(show, episode) {\n    switch (show.episode_type) {\n        case 1: return`Episode ${episode.number}`; break;\n        case 2: return`S${pad(episode.season,2)} · E${pad(episode.episode, 2)} (${episode.number})`; break;\n        case 3: return`Airdate: ${episode.air_date}`; break;\n    }\n}\n\nexport function episodeTitle(show, episode) {\n    switch (show.episode_type) {\n        case 1: return`${episode.number}: ${episode.title}`; break;\n        case 2: return`S${pad(episode.season,2)}E${pad(episode.episode, 2)}: ${episode.title}`; break;\n        case 3: return`${episode.air_date}: ${episode.title}`; break;\n    }\n}\n\nexport function guid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n}\n\nexport function secondsToTime(secs) {\n    let hours = Math.floor(secs / 3600);\n    let minutes = Math.floor((secs - (hours * 3600)) / 60);\n    let seconds = Math.floor(secs - (hours * 3600) - (minutes * 60));\n\n    if (hours < 10) \n        hours = \"0\"+hours;\n    if (minutes < 10) \n        minutes = \"0\"+minutes;\n    if (seconds < 10)\n        seconds = \"0\"+seconds;\n    return (hours>0?hours+':':'')+minutes+':'+seconds;\n}\n\nexport function dateInDays(dt) {\n    if (typeof(dt) == \"string\") {\n        dt = new Date(dt);\n    }\n    let seconds = Math.abs(dt-new Date().getTime())/1000;\n    let minutes, hours, days;\n    let l = [];\n    [minutes, seconds] = divmod(seconds, 60);\n    [hours, minutes] = divmod(minutes, 60);\n    [days, hours] = divmod(hours, 24);\n    if (days > 0) l.push(pluralize(days, 'day'));\n    if (hours > 0) l.push(pluralize(hours, 'hour'));\n    if ((minutes > 0) && (hours < 1) && (days < 1)) \n        l.push(pluralize(minutes, 'minute'));\n    return l.join(' ');\n}\n\nexport function secondsToPretty(seconds, showTotalHours) {\n    let totalHours = Math.round((((seconds/60)/60)*10))/10;\n    if (seconds < 60) return pluralize(seconds, 'second');\n    let minutes, hours, days, months, years;\n    [minutes, seconds] = divmod(seconds, 60);\n    [hours, minutes] = divmod(minutes, 60);\n    [days, hours] = divmod(hours, 24);\n    [months, days] = divmod(days, 30.42);\n    [years, months] = divmod(months, 12);\n    let l = [];\n    if (years > 0) l.push(pluralize(Math.round(years), 'year'));\n    if (months > 0) l.push(pluralize(Math.round(months), 'month'));\n    if (days > 0) l.push(pluralize(Math.round(days), 'day'));\n    if (hours > 0) l.push(pluralize(Math.round(hours), 'hour'));\n    if (minutes > 0) l.push(pluralize(Math.round(minutes), 'minute'));\n    let r = l.join(', ');\n    if ((showTotalHours) && (totalHours >= 24)) {\n        let h = pluralize(totalHours, 'hour');\n        r = r + ` (${h})`;\n    }\n    return r;\n}\n\nexport function pluralize(num, word) {\n    if (num != 1) word = word + 's';\n    return `${num} ${word}`\n}\n\nexport function divmod(a, b) {\n    return [Math.floor(a / b), a % b];\n}\n\nexport function locationQuery() {\n    return querystring.parse(location.search)\n}","import React from 'react';\nimport {request} from 'api';\n\nimport './Search.scss';\n\nconst KEY_UP = 38;\nconst KEY_DOWN = 40;\nconst KEY_ENTER = 13;\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onInputChanged = this.inputChanged.bind(this);\n        this.onKeyDown = this.keyDown.bind(this);\n        this.onMouseOver = this.mouseOver.bind(this);\n        this.onMouseOut = this.mouseOut.bind(this);\n        this.onSubmit = this.submit.bind(this);\n        this.onClick = this.click.bind(this);\n        this.state = {\n            results: [],\n            show: false,\n            selectedResultId: null,\n        }\n        this.requesting = null;\n        this.selectedResultId = null;\n        this.onDocumentClick = this.documentClick.bind(this);\n    }\n\n    componentDidMount() {        \n        document.addEventListener('click', this.onDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onDocumentClick);\n    }\n\n    documentClick(e) {\n        if (!this.form.contains(e.target)) {\n            this.setState({show: false});\n        }\n    }\n\n    inputChanged(e) {\n        if (this.requesting)\n            this.requesting.abort();\n        let val = e.target.value.trim();\n        if (val == '') {\n            this.setState({\n                results: [],\n                show: false,\n                selectedResultId: null,\n            });\n            return;\n        }\n        this.requesting = request('/1/shows', {\n            query: {\n                title_suggest: e.target.value.trim(),\n                per_page: 10,\n                fields: 'title,premiered,poster_image',\n            }\n        }).done(data => {\n            this.suggestNode.scrollTop = 0;\n            this.setState({\n                results: data,\n                show: true,\n                selectedResultId: null,\n            });\n            this.setNextSelectedId(0);\n        });\n    }\n\n    keyDown(e) {\n        switch (e.keyCode) {\n            case KEY_UP:\n                this.setNextSelectedId(-1);\n                break;\n            case KEY_DOWN: \n                this.setNextSelectedId(1);\n                break;\n            case KEY_ENTER:\n                if (this.state.selectedResultId)\n                    location.href = `/show/${this.state.selectedResultId}`;\n                break;\n        }\n    }\n\n    mouseOver(e) {\n        this.state.selectedResultId = parseInt(e.target.getAttribute('data-id'));\n        this.setNextSelectedId(0, true);\n    }\n\n    mouseOut(e) {\n        this.setState({selectedResultId: null});\n    }\n\n    setNextSelectedId(val, disableScroll) {\n        if (this.state.results.length == 0)\n            return;\n        let i = -1;\n        if (this.state.selectedResultId) {\n            i = 0;\n            for (let result of this.state.results) {\n                if (result.id == this.state.selectedResultId) {\n                    break;\n                }\n                i++;\n            }\n        }\n        i = i + val;\n        if (i < 0)\n            i = 0;\n        if (i > (this.state.results.length - 1))\n            i = this.state.results.length - 1;\n        let id = this.state.results[i].id;\n        this.setState({\n            selectedResultId: id,\n        });\n        if (disableScroll) \n            return;\n        let height = document.getElementById('sresult-'+id).offsetHeight;\n        if (((i+1) * height) > this.suggestNode.offsetHeight) {\n            let p = Math.floor(this.suggestNode.offsetHeight / height);\n            let g = (i-p+1);\n            let l = this.suggestNode.offsetHeight % height;\n            this.suggestNode.scrollTop = (g*height)+l;\n        } else {\n            this.suggestNode.scrollTop = 0;\n        }\n    }\n\n    submit(e) {\n        e.preventDefault();\n    }\n\n    click(e) {\n        if (this.state.selectedResultId)\n            location.href = `/show/${this.state.selectedResultId}`;\n    }\n\n    resultClassName(result) {\n        let className = 'result';\n        if (result.id == this.state.selectedResultId)\n            className += ' selected';\n        return className;\n    }\n\n    render() {\n        return (\n            <form \n                id=\"search\" \n                className=\"form-inline\" \n                onSubmit={this.onSubmit}                \n                ref={(ref) => this.form = ref}\n            >\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    placeholder=\"Search\" \n                    onChange={this.onInputChanged}\n                    onKeyDown={this.onKeyDown}\n                />\n                <div \n                    className=\"suggest\"\n                    ref={(ref) => this.suggestNode = ref}\n                    style={{display:this.state.show?'block':'none'}}\n                >\n                    {this.state.results.map(r => (\n                        <div \n                            key={r.id}\n                            id={`sresult-${r.id}`}\n                            data-id={r.id}\n                            href={`/show/${r.id}`} \n                            className={this.resultClassName(r)}\n                            onMouseOver={this.onMouseOver}\n                            onMouseOut={this.onMouseOut}\n                            onClick={this.onClick}\n                        >\n                            <div className=\"img\">\n                                <img \n                                    src={r.poster_image!=null?r.poster_image.url + '@SY100':''} \n                                />\n                            </div>\n                            <div className=\"title\">\n                                {r.title} ({r.premiered?r.premiered.substring(0, 4):''})\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    url: PropTypes.string,\n}\n\nclass PlayNext extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onNextClick = this.nextClick.bind(this);\n    }\n\n    nextClick(e) {\n        location.href = this.props.url;\n    }\n\n    render() {\n        return (\n            <a \n                className=\"fas fa-step-forward\"\n                title={this.props.title}\n                href={this.props.url}\n            />\n        )\n    }\n\n}\nPlayNext.propTypes = propTypes;\n\nexport default PlayNext;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\n\nimport './VolumeBar.scss'\n\nconst propTypes = {\n    onChange: PropTypes.func,\n}\n\nclass VolumeBar extends React.Component {\n\n    constructor(props) {\n        super(props)        \n        this.onSliderMouseMove = this.sliderMouseMove.bind(this)\n        this.onSliderClick = this.sliderClick.bind(this)\n        this.onIconClick = this.iconClick.bind(this)\n\n        this.state = {\n            percent: (localStorage.getItem('volume') || 1)*100,\n            show: false,\n            muted: false,\n        }\n        this.onDocumentClick = this.documentClick.bind(this)\n    }\n\n    componentDidMount() {\n        let volume = localStorage.getItem('volume') || 1\n        if (this.props.onChange)\n            this.props.onChange(volume)\n        document.addEventListener('click', this.onDocumentClick)\n        document.addEventListener('ontouchstart', this.onDocumentClick)\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onDocumentClick)\n        document.removeEventListener('ontouchstart', this.onDocumentClick)\n    }\n    \n    documentClick(e) {\n        if (!this.icon.contains(e.target)) {\n            this.setState({show: false})\n        }\n    }\n\n    sliderMouseMove(event) {\n        if (event.buttons != 1) return\n        this.onSliderClick(event)\n    }\n\n    sliderClick(event) {\n        event.preventDefault()\n        event.stopPropagation()\n        let scrubber = event.target.querySelector('.scrubber')\n        let y = event.clientY\n        y -= event.target.offsetTop + scrubber.offsetTop\n        y = scrubber.offsetHeight - y\n        if (y > scrubber.offsetHeight)\n            y = scrubber.offsetHeight\n        if (y < 0)\n            y = 0\n        let norm = 1 / scrubber.offsetHeight\n        let volume = norm*y\n        if (volume < 0)\n            volume = 0\n        this.setState({percent: volume*100})\n        if (this.props.onChange)\n            this.props.onChange(volume)\n        localStorage.setItem('volume', volume)\n    }\n\n    iconClick(event) {\n        this.setState({show: !this.state.show})\n    }\n\n    renderBar() {\n        if (!this.state.show) return\n        return (\n            <div \n                className=\"volume-slider\"\n                onMouseMove={this.onSliderMouseMove}\n                onClick={this.onSliderClick}\n            >\n                <div className=\"scrubber\">\n                    <div \n                        className=\"scrubber-percentage\" \n                        style={{height: this.state.percent+'%'}}\n                    />\n                    <div \n                        className=\"scrubber-head\"\n                        style={{bottom: this.state.percent+'%'}}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        let volume = ClassNames({\n            fa: true,\n            'fa-volume-up': (this.state.percent >= 50) && !this.state.muted,\n            'fa-volume-down': (this.state.percent < 50) && \n                (this.state.percent >= 1) && !this.state.muted,\n            'fa-volume-off': (this.state.percent < 1) || this.state.muted,\n        })\n        return (\n            <span \n                className={volume} \n                onClick={this.onIconClick}\n                ref={(ref) => this.icon = ref}\n            >\n                {this.renderBar()}\n            </span>\n        )\n    }\n\n}\nVolumeBar.propTypes = propTypes\n\nexport default VolumeBar","import React from 'react'\nimport ClassNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport './AudioSubBar.scss'\n\nconst propTypes = {\n    metadata: PropTypes.object,\n    onAudioChange: PropTypes.func,\n    onSubtitleChange: PropTypes.func,\n    bottom: PropTypes.bool,\n}\n\nclass AudioSubBar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            show: false,\n        }\n        this.audio = []\n        this.subtitles = []\n        this.parseMetadata()\n\n        this.onClick = this.click.bind(this)\n\n        this.onAudioClick = this.audioClick.bind(this)\n        this.onSubtitleClick = this.subtitleClick.bind(this)\n        this.onDocumentClick = this.documentClick.bind(this)\n    }\n\n    componentDidMount() {    \n        document.addEventListener('click', this.onDocumentClick)\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onDocumentClick)\n    }\n    \n    documentClick(e) {\n        if (this.icon == undefined) \n            return\n        if (!this.icon.contains(e.target))\n            this.setState({show: false})\n    }\n\n    parseMetadata() {\n        for (let stream of this.props.metadata.streams) {\n            if (!('tags' in stream))\n                continue\n            let lang = null\n            if ('title' in stream.tags)\n                lang = stream.tags.title\n            if ('language' in stream.tags)\n                lang =  stream.tags.language\n            if (!lang)\n                continue\n            let s = {\n                language: lang,\n                title: stream.tags.title || lang,\n                index: stream.index,\n            }\n            if (stream.codec_type == 'subtitle') { \n                let notSupported = [\n                    'dvd_subtitle',\n                    'hdmv_pgs_subtitle',\n                ]\n                if (notSupported.includes(stream.codec_name))\n                    continue\n                this.subtitles.push(s)\n            } else if (stream.codec_type == 'audio') {\n                this.audio.push(s)\n            }\n        }\n    }\n\n    click(event) {\n        this.setState({show: !this.state.show})\n    }\n\n    subtitleClick(event) {\n        event.preventDefault()\n        this.setState({show: false})\n        if (this.props.onSubtitleChange)\n            this.props.onSubtitleChange(\n                event.target.getAttribute('data-data')\n            )\n    }\n\n    audioClick(event) {\n        event.preventDefault()\n        this.setState({show: false})\n        if (this.props.onAudioChange)\n            this.props.onAudioChange(\n                event.target.getAttribute('data-data')\n            )\n    }\n\n    renderSubtitles() {\n        if (this.subtitles.length == 0)\n            return\n        return (\n            <span>\n                <p className=\"title\">Subtitles</p>\n                <p><a href=\"#\" onClick={this.onSubtitleClick} data-data=\"\">None</a></p>\n                {this.subtitles.map(l => (\n                    <p key={l.index}>\n                        <a \n                            href=\"#\" \n                            onClick={this.onSubtitleClick}\n                            data-data={`${l.language}:${l.index}`}\n                        >\n                            {l.title}\n                        </a>\n                    </p>\n                ))}\n            </span>\n        )\n    }\n\n    renderAudio() {\n        if (this.audio.length <= 1)\n            return\n        return (\n            <span>\n                <p className=\"title\">Audio</p>\n                {this.audio.map(l => (\n                    <p key={l.index}>                        \n                        <a \n                            href=\"#\" \n                            onClick={this.onAudioClick}\n                            data-data={`${l.language}:${l.index}`}\n                        >\n                            {l.title}\n                        </a>\n                    </p>\n                ))}\n            </span>\n        )\n    }\n\n    renderAudioSubtitles() {\n        if (!this.state.show)\n            return null\n        let cls = ClassNames({\n            'audio-subtitles': true,\n            'audio-subtitles-bottom': this.props.bottom,\n        })\n        return (\n            <div \n                className={cls} \n                ref={(ref) => this.audioSubtitlesElem = ref}\n            >\n                {this.renderSubtitles()}\n                {this.renderAudio()}\n            </div>\n        )\n    }\n\n    render() {\n        if ((this.audio.length <= 1) && (this.subtitles.length == 0))\n            return null\n        return (\n            <span\n                ref={(ref) => this.icon = ref}\n            >\n                <span className=\"fas fa-closed-captioning\" onClick={this.onClick} />\n                {this.renderAudioSubtitles()}\n            </span>\n        )\n    }\n}\nAudioSubBar.propTypes = propTypes\n\nexport default AudioSubBar\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {secondsToTime} from 'utils'\n\nimport './Slider.scss'\n\nconst propTypes = {\n    duration: PropTypes.number.isRequired,\n    onReturnCurrentTime: PropTypes.func.isRequired,\n    onNewTime: PropTypes.func.isRequired,\n}\n\nclass Slider extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentTime: 0,\n            hoverTime: null,\n            drag: false,\n        }\n        this.timerGetCurrentTime = null\n    }\n\n    componentDidMount() {\n        this.getCurrentTime()\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timerGetCurrentTime)\n        this.timerGetCurrentTime = null\n    }\n\n    sliderClick = (event) => {\n        let x = this.getEventXOffset(event)\n        let norm = this.props.duration / this.slider.offsetWidth\n        var newTime = Math.trunc(norm*x)\n        this.setState({\n            currentTime: newTime,\n            hoverTime: null,\n            drag: false,\n        })\n        this.props.onNewTime(newTime)\n    }\n\n    mouseMove = (event) => {\n        let x = this.getEventXOffset(event)\n        let norm = this.props.duration / this.slider.offsetWidth\n        let newTime = Math.trunc(norm*x)\n        if (newTime > this.props.duration)\n            newTime = this.props.duration\n        this.setState({\n            hoverTime: newTime,\n            drag: event.buttons == 1,\n        })\n    }\n\n    touchMove = (event) => {\n        this.mouseMove(event)\n        this.setState({\n            drag: true,\n        })\n    }\n\n    mouseLeave = (event) => {\n        this.setState({\n            hoverTime: null,\n            drag: false,\n        })\n    }\n\n    touchEnd = (event) => {\n        this.props.onNewTime(this.state.hoverTime)\n        this.setState({\n            currentTime: this.state.hoverTime,\n            hoverTime: null,\n            drag: false,\n        })\n    }\n\n    getCurrentTime() {\n        this.setState({\n            currentTime: this.props.onReturnCurrentTime(),\n        })\n        this.timerGetCurrentTime = setTimeout(() => {\n            this.getCurrentTime()\n        }, 1000)\n    }\n\n    progressPercent() {\n        let t = this.state.currentTime\n        if ((this.state.hoverTime !== null) && this.state.drag)\n            t = this.state.hoverTime\n        return ((t / this.props.duration) * 100).toString() + '%'\n    }\n\n    getEventXOffset(event) {\n        if (event.type.match('^touch')) {\n            if (event.originalEvent)\n                event = event.originalEvent\n            event = event.touches[0] || event.changedTouches[0]\n        }\n        \n        var offsetLeft = 0\n        var elem = this.slider\n        do {\n            if (!isNaN(elem.offsetLeft)) {\n                offsetLeft += elem.offsetLeft\n            }\n        } while(elem = elem.offsetParent)\n\n        let x = event.clientX - offsetLeft\n        if (x > this.slider.offsetWidth)\n            x = this.slider.offsetWidth\n        if (x < -1) \n            return 0\n        return x+1\n    }\n\n    renderHoverTime() {\n        if (this.state.hoverTime === null)\n            return null\n        return <div \n            className=\"hover-time\" \n            style={{left: ((this.state.hoverTime / this.props.duration) * 100).toString() + '%'}}\n        >\n            <div className=\"hover-time-box\">\n                {secondsToTime(parseInt(this.state.hoverTime))}\n            </div>\n        </div>\n    }\n\n    render() {\n        return (\n            <div \n                className=\"player-slider-wrapper\" \n                onClick={this.sliderClick}\n                onMouseMove={this.mouseMove}\n                onMouseLeave={this.mouseLeave}\n                onTouchStart={this.mouseMove}\n                onTouchMove={this.touchMove}\n                onTouchCancel={this.mouseLeave}\n                onTouchEnd={this.touchEnd}\n            >\n                {this.renderHoverTime()}\n                <div \n                    className=\"slider\"\n                    ref={(ref) => this.slider = ref}\n                >\n                    <div \n                        className=\"progress\" \n                        style={{width: this.progressPercent()}}\n                    >\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nSlider.propTypes = propTypes\n\nexport default Slider","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nimport './Loader.scss';\n\nconst propTypes = {\n    hcenter: PropTypes.bool,\n}\n\nconst defaultProps = {\n    hcenter: false,\n}\n\nclass Loader extends React.Component {\n\n    render() {        \n        let cls = ClassNames({\n            loader: true,\n            'loader-hcenter': this.props.hcenter,\n        });\n        return (\n            <div className={cls}></div>\n        )\n    }\n\n}\nLoader.propTypes = propTypes;\nLoader.defaultProps = defaultProps;\n\nexport default Loader;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\nimport {request} from 'api'\nimport PlayNext from './PlayNext'\nimport VolumeBar from './VolumeBar'\nimport AudioSubBar from './AudioSubBar.jsx'\nimport Slider from './Slider.jsx'\nimport ChromecastIcon from './ChromecastIcon'\nimport Loader from 'seplis/components/Loader'\nimport {secondsToTime} from 'utils'\nimport './Player.scss'\n\nconst propTypes = {\n    playServerUrl: PropTypes.string,\n    playId: PropTypes.string,\n    session: PropTypes.string,\n    startTime: PropTypes.number,\n    metadata: PropTypes.object,\n    info: PropTypes.object,\n    nextInfo: PropTypes.object,\n    backToInfo: PropTypes.object,\n    currentInfo: PropTypes.object,\n    onAudioChange: PropTypes.func,\n    onSubtitleChange: PropTypes.func,\n    audio_lang: PropTypes.string,\n    subtitle_lang: PropTypes.string,\n    onTimeUpdate: PropTypes.func,\n}\n\nconst defaultProps = {\n    startTime: 0,\n    info: null,\n    nextInfo: null,\n}\n\nclass Player extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.onPlayPauseClick = this.playPauseClick.bind(this)\n        this.duration = parseInt(props.metadata.format.duration)\n        this.pingTimer = null\n        this.hls = null\n        this.onFullscreenClick = this.fullscreenClick.bind(this)\n        this.onVolumeChange = this.volumeChange.bind(this)\n\n        this.onAudioChange = this.audioChange.bind(this)\n        this.onSubtitleChange = this.subtitleChange.bind(this)\n\n        this.volume = 1\n        this.hideControlsTimer = null\n\n        this.onSliderReturnCurrentTime = this.sliderReturnCurrentTime.bind(this)\n        this.onSliderNewTime = this.sliderNewTime.bind(this)\n\n        this.state = {\n            playing: false,\n            time: this.props.startTime,\n            startTime: this.props.startTime,\n            session: props.session,\n            fullscreen: false,\n            showControls: true,\n            audio: this.props.audio_lang,\n            subtitle: this.props.subtitle_lang,\n            loading: false,\n        }\n    }\n\n    componentDidMount() {      \n        document.title = `${this.props.currentInfo.title} | SEPLIS`\n\n        this.video.addEventListener('timeupdate', this.timeupdateEvent.bind(this))\n        this.video.addEventListener('pause', this.pauseEvent.bind(this))\n        this.video.addEventListener('play', this.playEvent.bind(this))\n        \n        document.addEventListener('fullscreenchange', this.fullscreenchangeEvent.bind(this))\n        document.addEventListener('webkitfullscreenchange', this.fullscreenchangeEvent.bind(this))\n        this.video.addEventListener('webkitendfullscreen', this.fullscreenchangeEvent.bind(this))\n        this.video.addEventListener('webkitenterfullscreen', this.fullscreenchangeEvent.bind(this))\n        document.addEventListener('mozfullscreenchange', this.fullscreenchangeEvent.bind(this))\n        document.addEventListener('msfullscreenchange', this.fullscreenchangeEvent.bind(this))\n        \n        this.video.addEventListener('error', this.playError.bind(this))\n        this.video.addEventListener('waiting', this.playWaiting.bind(this))\n        this.video.addEventListener('click', this.playClick.bind(this))\n        this.video.addEventListener('touchstart', this.playClick.bind(this))\n        this.video.addEventListener('loadeddata', this.loadedEvent.bind(this))\n        this.setPingTimer()\n        this.video.volume = this.volume\n        \n        this.loadStream(this.getPlayUrl())\n\n        document.onmousemove = this.mouseMove.bind(this)\n        document.ontouchmove = this.mouseMove.bind(this)\n        document.onkeypress = this.keypress.bind(this)\n        document.onbeforeunload = this.beforeUnload.bind(this)\n    }\n\n    loadedEvent(e) {\n        this.setState({loading: false})\n    }\n\n    loadStream(url) {\n        this.setState({loading: true})\n        if (!Hls.isSupported()) {\n            this.video.src = url\n            this.video.load()\n            this.video.play()\n            return\n        }\n\n        if (this.hls) {\n            this.hls.destroy()\n            if (this.hls.bufferTimer) {\n                clearInterval(this.hls.bufferTimer)\n                this.hls.bufferTimer = undefined\n            }\n            this.hls = null\n        }\n        this.hls = new Hls({\n            startLevel: 0,            \n            manifestLoadingTimeOut: 30000,\n            debug: false,\n        })\n        this.hls.loadSource(url)\n        this.hls.attachMedia(this.video)\n        this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n            this.video.play()\n        })\n        this.hls.on(Hls.Events.ERROR, this.hlsError.bind(this))\n    }\n\n    hlsError(event, data) {\n        console.warn(data)\n        if (data.fatal) {\n            switch(data.type) {\n                case Hls.ErrorTypes.NETWORK_ERROR:\n                    console.log('hls.js fatal network error encountered, try to recover')\n                    this.hls.startLoad()\n                    break\n                case Hls.ErrorTypes.MEDIA_ERROR:\n                    console.log('hls.js fatal media error encountered, try to recover')\n                    this.hls.swapAudioCodec()\n                    this.handleMediaError()\n                    break\n                default:\n                    console.log('hls.js could not recover')\n                    this.hls.destroy()\n                    break\n            }\n        }\n    }\n\n    handleMediaError() {\n        this.setState({loading: true})\n        this.hls.recoverMediaError()\n        this.video.play()\n    }\n\n    keypress(e) {\n        if (e.code == 'Space')\n            this.playPauseClick()\n    }\n\n    playClick(e) {\n        e.preventDefault()\n        if (this.video.paused || this.state.loading)\n            return\n        this.setState({showControls: !this.state.showControls})\n        this.setHideControlsTimer()\n    }\n\n    setPingTimer() {\n        clearTimeout(this.pingTimer)\n        this.pingTimer = setTimeout(() => {\n            request(this.getPlayUrl()+'&action=ping')\n            this.setPingTimer()\n        }, 2000)\n    }\n\n    setHideControlsTimer(timeout) {\n        if (timeout == undefined)\n            timeout = 3000\n        clearTimeout(this.hideControlsTimer)\n        this.hideControlsTimer = setTimeout(() => {\n            if (this.video.paused || this.state.loading)\n                return\n            this.setState({\n                showControls: false,\n            })\n        }, timeout)\n    }\n\n    mouseMove(e) {\n        this.setState({\n            showControls: true,\n        })\n        this.setHideControlsTimer()\n    }\n\n    getPlayUrl() {\n        let s = `${this.props.playServerUrl}/play`+\n            `?play_id=${this.props.playId}`+\n            `&session=${this.props.session}`+\n            `&start_time=${this.state.startTime}`+\n            `&subtitle_lang=${this.state.subtitle || ''}`+\n            `&audio_lang=${this.state.audio || ''}`\n        return s\n    }\n\n    playPauseClick() {\n        if (this.video.paused) {\n            this.video.play()\n            this.setHideControlsTimer(2000)\n        }\n        else {\n            this.video.pause()\n        }\n    }\n\n    fullscreenchangeEvent() {\n        this.setState({\n            fullscreen: !!(document.fullScreen || \n                           document.webkitIsFullScreen || \n                           document.mozFullScreen || \n                           document.msFullscreenElement || \n                           document.fullscreenElement),\n        })\n    }\n\n    pauseEvent() {\n        this.setState({\n            playing: false,\n            showControls: true,\n        })\n    }\n\n    playEvent() {\n        this.setState({\n            playing: true,\n            loading: true,\n        })\n        this.setHideControlsTimer()\n    }\n\n    playError(e) {\n        this.setState({loading: false})\n        console.warn(e.currentTarget.error)\n        if (e.currentTarget.error.code == e.currentTarget.error.MEDIA_ERR_DECODE) {\n            this.handleMediaError()\n        }\n    }\n\n    playWaiting() {\n        this.setState({loading: true})\n    }\n\n    timeupdateEvent(e) {\n        if (!this.video.paused) {\n            this.setState({loading: false})\n            let time = this.video.currentTime\n            if (this.video.seekable.length <= 1 || this.video.seekable.end(0) <= 1)\n                time += this.state.startTime\n            this.setState({\n                time: time,\n                playing: true,\n            }, () => {\n                if (this.props.onTimeUpdate)\n                    this.props.onTimeUpdate(this.state.time)\n            })\n            if (!this.hideControlsTimer) {\n                this.setHideControlsTimer()\n            }\n        }\n    }\n\n    changeVideoState(state) {\n        state['loading'] = true\n        this.setState(state)\n        this.cancelPlayUrl().then(() => {\n            this.loadStream(this.getPlayUrl())\n            this.setPingTimer()\n        })\n    }\n\n    beforeUnload() {\n        this.cancelPlayUrl()\n    }\n\n    cancelPlayUrl() {\n        return new Promise((resolve, reject) => {\n            request(\n                this.getPlayUrl()+'&action=cancel'\n            ).done(() => {\n                resolve()\n            }).fail(e => {\n                reject(e)\n            })\n        })\n    }\n\n    fullscreenClick(event) {\n        if (!this.state.fullscreen) {\n            let elem = document.getElementById('player')\n            if (elem.enterFullscreen) {\n                elem.enterFullscreen()\n            } else if (elem.requestFullScreen) {\n                elem.requestFullScreen()\n            } else if (elem.mozRequestFullScreen) {\n                elem.mozRequestFullScreen()\n            } else if (elem.webkitRequestFullScreen) {\n                elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)\n            } else if (elem.webkitEnterFullscreen) {\n                elem.webkitEnterFullscreen()\n            } else if (this.video.webkitEnterFullscreen) {\n                this.video.webkitEnterFullscreen()\n            }\n        } else {\n            if (document.cancelFullScreen) {\n                document.cancelFullScreen()\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen()\n            } else if (document.webkitCancelFullScreen) {\n                document.webkitCancelFullScreen()\n            }\n        }\n        this.setState({fullscreen: !this.state.fullscreen})\n    }\n\n    getDurationText() {\n        return secondsToTime(parseInt(this.duration))\n    }\n\n    getCurrentTimeText() {\n        return secondsToTime(parseInt(this.state.time))\n    }\n\n    renderPlayNext() {\n        if (!this.props.nextInfo) return\n        return (\n            <PlayNext\n                title={this.props.nextInfo.title}\n                url={this.props.nextInfo.url}\n            />    \n        )\n    }\n\n    volumeChange(volume) {\n        this.volume = volume\n        if (this.video)\n            this.video.volume = volume\n    }\n\n    audioChange(lang) {\n        if (this.props.onAudioChange)\n            this.props.onAudioChange(lang)\n        this.changeVideoState({\n            audio: lang,\n            startTime: this.state.time,\n        })\n    }\n\n    subtitleChange(lang) {\n        if (this.props.onSubtitleChange)\n            this.props.onSubtitleChange(lang)\n        this.changeVideoState({\n            subtitle: lang,\n            startTime: this.state.time,\n        })\n    }\n\n    sliderNewTime(newTime) {\n        this.video.pause()        \n        clearTimeout(this.hideControlsTimer)\n        this.hideControlsTimer = null\n        this.changeVideoState({\n            time: newTime,\n            startTime: newTime,\n        })\n    }\n\n    sliderReturnCurrentTime() {\n        return this.state.time\n    }\n\n    showControlsVisibility() {\n        return this.state.showControls?'visible':'hidden'\n    }\n\n    renderControlsTop() {\n        return (\n            <div \n                className=\"controls controls-top\" \n                style={{visibility: this.showControlsVisibility()}}\n            >\n                <div className=\"control\">\n                    <a \n                        className=\"fas fa-times\" \n                        href={this.props.backToInfo.url}\n                        title={this.props.backToInfo.title}\n                    />\n                </div>\n                <div className=\"control-text control-text-title\">\n                    {this.props.currentInfo.title}\n                </div>\n                <div className=\"control-spacer\" />\n                <div className=\"control\">\n                    <ChromecastIcon />\n                </div>\n                <div className=\"control\">\n                    <AudioSubBar \n                        metadata={this.props.metadata} \n                        onAudioChange={this.onAudioChange}\n                        onSubtitleChange={this.onSubtitleChange}\n                    />\n                </div>\n                <div className=\"control\">\n                    <VolumeBar onChange={this.onVolumeChange} />\n                </div>\n                <div className=\"control\">\n                    {this.renderPlayNext()}\n                </div>\n            </div>\n        )\n    }\n\n    renderControlsBottom() {\n        let playPause = ClassNames({\n            fa: true,\n            'fa-pause': this.state.playing,\n            'fa-play': !this.state.playing,\n        })\n        let fullscreen = ClassNames({\n            fa: true,\n            'fa-expand': this.state.fullscreen,\n            'fa-arrows-alt': !this.state.fullscreen,\n        })\n        return (\n            <div \n                className=\"controls\" \n                style={{visibility: this.showControlsVisibility()}}\n            >\n                <div className=\"control\">\n                    <span \n                        className={playPause}\n                        onClick={this.onPlayPauseClick}\n                    >\n                    </span>\n                </div>\n                <div className=\"control-text\">\n                    {this.getCurrentTimeText()}\n                </div>\n                <Slider \n                    duration={this.duration}\n                    onReturnCurrentTime={this.onSliderReturnCurrentTime}\n                    onNewTime={this.onSliderNewTime}\n                />\n                <div className=\"control-text\" title=\"Timeleft\">\n                    {this.getDurationText()}\n                </div>\n                <div className=\"control\">\n                    <span \n                        className={fullscreen}\n                        onClick={this.onFullscreenClick}\n                    >\n                    </span>\n                </div>\n            </div>\n        )\n    }\n\n    renderLoading() {\n        if (!this.state.loading)\n            return null\n        return <Loader hcenter={true} />\n    }\n\n    render() {\n        return (\n            <div id=\"player\">  \n                <div className=\"overlay\">\n                    <video \n                        className=\"video\" \n                        preload=\"none\" \n                        autoPlay={false}\n                        controls={false}\n                        ref={(ref) => this.video = ref}\n                    />\n                    {this.renderControlsTop()}\n                    {this.renderControlsBottom()}\n                    {this.renderLoading()}\n                </div>\n            </div>\n        )\n    }\n}\nPlayer.propTypes = propTypes\nPlayer.defaultProps = defaultProps\nexport default Player\n\nexport function getPlayServer(url) {\n    /* `url` must be a url to the play servers. \n        Example: /1/shows/1/episodes/1/play-servers.\n        Returns a promise.\n    */\n    return new Promise((resolve, reject) => {\n        request(\n            url\n        ).done(playServers => {\n            var selected = false\n            var i = 0\n            if (playServers.length == 0) {\n                reject({code: 1, message: 'No play servers.'})\n                return\n            }\n            for (var s of playServers) {\n                i += 1\n                request(s.play_url+'/metadata', {\n                    query: {\n                        play_id: s.play_id,\n                    }\n                }).done(metadata => {\n                    if (selected) \n                        return\n                    selected = true\n                    resolve({\n                        playServer: s, \n                        metadata: metadata,\n                    })\n                }).always(() => {\n                    i -= 1\n                    if ((i == 0) && (selected == false)) {\n                        reject({code: 2, message: 'This episode is not on any of your play servers.'})\n                    }\n                })\n            }\n        }).fail((e) => {\n            reject(e)\n        })\n    })\n}","import {getPlayServer} from './Player'\nimport {request} from 'api'\nimport {guid} from 'utils'\n\nvar events = {\n    ANY_CHANGED: 'anyChanged',\n    AVAILABLE: 'isAvailable',\n    IS_CONNECTED: 'isConnected',\n    PLAYER_STATE: 'playerState',\n    CURRENT_TIME: 'currentTime',\n}\n\nclass Chromecast {\n \n    constructor() {\n        this.loaded = false\n    }\n\n    load(onInit) {\n        this.onInit = onInit\n        if (!Chromecast.initialized) {\n            this.loadCastScript()\n        } else {\n            this.initCast(true)\n        }\n    }\n \n    loadCastScript() {\n        Chromecast.initList.push(this)\n        if (Chromecast.loaded)\n            return\n        Chromecast.loaded = true\n        window['__onGCastApiAvailable'] = (isAvailable) => {\n            // Temp fix for cast not reconnecting randomly\n            setTimeout(() => {\n                let sessionRequest = new chrome.cast.SessionRequest(\n                    seplisChromecastAppId\n                )\n                let apiConfig = new chrome.cast.ApiConfig(\n                    sessionRequest,\n                    sessionListener,\n                    receiverListener,\n                    chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n                )\n                chrome.cast.initialize(apiConfig, () => {\n                    Chromecast.initialized = true\n                    for (let obj of Chromecast.initList) {\n                        obj.initCast(isAvailable)\n                    }\n                })\n            }, 500)\n        }\n        let script = document.createElement('script')\n        script.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js'\n        document.head.appendChild(script)\n    }\n \n    initCast(isAvailable) {\n        this.loaded = isAvailable\n        if (!isAvailable) \n            return\n        if (this.onInit)\n            this.onInit(this)\n    }\n\n    requestSession() {\n        chrome.cast.requestSession(sessionListener)\n    }\n\n    isConnected() {\n        if (!Chromecast.session)\n            return false\n        return Chromecast.session.status == 'connected'\n    }\n\n    getSession() {\n        return Chromecast.session\n    }\n\n    getMediaSession() {\n        return Chromecast.mediaSession\n    }\n\n    getFriendlyName() {\n        return Chromecast.session.receiver.friendlyName\n    }\n\n    getCurrentTime() {\n        return Chromecast.mediaSession.getEstimatedTime()\n    }\n\n    playOrPause(success, error) {\n        if (Chromecast.mediaSession.playerState == 'PLAYING')\n            this.pause(success, error)\n        else\n            this.play(success, error)\n    }    \n\n    play(success, error) {\n        Chromecast.mediaSession.play(null, success, error)\n    }\n\n    pause(success, error) {\n        Chromecast.mediaSession.pause(null, success, error)\n    }\n\n    playEpisode(showId, episodeNumber, startTime) {\n        return new Promise((resolve, reject) => {\n            if (!this.isConnected()) {\n                alert('Not connected to a cast device.')\n                reject()\n                return\n            }\n            let url =`/1/shows/${showId}/episodes/${episodeNumber}/play-servers`\n            Promise.all([\n                getPlayServer(url),\n                request('/1/progress-token'),\n                request(`/1/shows/${showId}`),\n                request(`/1/shows/${showId}/episodes/${episodeNumber}`),\n                request(`/1/shows/${showId}/episodes/${episodeNumber}/watched`),\n                request(`/1/shows/${showId}/user-subtitle-lang`),\n            ]).then(result => {\n                if (!startTime) {\n                    if (result[4])\n                        startTime = result[4].position\n                    else\n                        startTime = 0\n                }\n                let streams = []\n                for (let v of result[0]['metadata']['streams']) {\n                    let d = {\n                        index: v.index,\n                        codec_name: v.codec_name,\n                        codec_type: v.codec_type,\n                        tags: {},                   \n                    }\n                    if (v.tags) {\n                        d.tags.language = v.tags.language\n                        d.tags.title = v.tags.title\n                    }\n                    streams.push(d)\n                }\n                let customData = {\n                    play: result[0]['playServer'],\n                    metadata: {\n                        format: {\n                            duration: result[0]['metadata']['format']['duration'],\n                        },\n                        streams: streams,\n                    },\n                    token: result[1]['token'],\n                    type: 'episode',\n                    show: {\n                        id: result[2]['id'],\n                        title: result[2]['title'],\n                        episode_type: result[2]['episode_type'],\n                    },\n                    episode: {\n                        number: result[3]['number'],\n                        title: result[3]['title'],\n                        season: result[3]['season'],\n                        episode: result[3]['episode'],\n                    },\n                    startTime: startTime,\n                    apiUrl: seplisBaseUrl,\n                }\n                let playUrl = result[0].playServer.play_url+'/play'+\n                    '?play_id='+result[0].playServer.play_id\n                playUrl += `&session=${guid()}`\n                playUrl += `&device=chromecast`\n                if (startTime)\n                    playUrl += `&start_time=${startTime}`\n                if (result[5]) {\n                    playUrl += `&subtitle_lang=${result[5].subtitle_lang || ''}`\n                    playUrl += `&audio_lang=${result[5].audio_lang || ''}`\n                }\n                let request = new chrome.cast.media.LoadRequest(\n                    this._playEpisodeMediaInfo(playUrl, result[2], result[3]),\n                )\n                request.customData = customData\n                this.getSession().loadMedia(\n                    request,\n                    mediaSession => { \n                        mediaListener(mediaSession)\n                        resolve(mediaSession) \n                    },\n                    e => { \n                        reject(e) \n                    }, Chromecast\n                )\n            }).catch(e => {\n                reject(e)\n            })\n        })\n    }\n\n    _playEpisodeMediaInfo(url, show, episode) {\n        var mediaInfo = new chrome.cast.media.MediaInfo(url)\n        mediaInfo.metadata = new chrome.cast.media.TvShowMediaMetadata()\n        mediaInfo.metadata.seriesTitle = show.title\n        mediaInfo.metadata.title = episode.title\n        mediaInfo.metadata.episode = episode.episode || episode.number\n        mediaInfo.metadata.season = episode.season\n        mediaInfo.metadata.originalAirdate = episode.air_date\n        mediaInfo.metadata.metadataType = chrome.cast.media.MetadataType.TV_SHOW\n        mediaInfo.metadata.images = [\n            {url:show.poster_image!=null?show.poster_image.url + '@SX180.jpg':''},\n        ]\n        return mediaInfo\n    }\n\n    addEventListener(event, func) {\n        if (!(event in Chromecast.eventListener))\n            Chromecast.eventListener[event] = []\n        let e = Chromecast.eventListener[event] \n        if (!Chromecast.eventListener[event].includes(func))\n            Chromecast.eventListener[event].push(func)\n    }\n \n    removeEventListener(event, func) {\n        let e = Chromecast.eventListener[event] || []\n        let i = e.indexOf(func)\n        if (i > 0)\n            e.splice(i, 1)\n    }\n}\nChromecast.initialized = false\nChromecast.loaded = false\nChromecast.initList = []\nChromecast.session = null\nChromecast.mediaSession = null\nChromecast.eventListener = {}\nChromecast.events = events\nChromecast.timerGetCurrentTime = null\n\nfunction sessionListener(session) {\n    Chromecast.session = session\n    if (session.media.length != 0) {\n        mediaListener(session.media[0])\n    }\n    Chromecast.timerGetCurrentTime = setInterval(() => {\n        if (!Chromecast.mediaSession)\n            return\n        if (Chromecast.mediaSession.playerState == 'PLAYING')\n            dispatchEvent(events.CURRENT_TIME, Chromecast.mediaSession.getEstimatedTime())            \n    }, 1000)\n    session.addMediaListener(mediaListener)\n    session.addUpdateListener(sessionUpdateListener)\n    dispatchEvent(events.IS_CONNECTED, true)\n}\n\nfunction sessionUpdateListener(event) {\n    if (Chromecast.session.status !== chrome.cast.SessionStatus.CONNECTED) {\n        Chromecast.session = null\n        Chromecast.mediaSession = null\n        dispatchEvent(events.IS_CONNECTED, false)\n    }\n}\n\nfunction mediaListener(mediaSession) {\n    Chromecast.mediaSession = mediaSession\n    mediaSession.addUpdateListener(mediaSessionUpdateListener)        \n    dispatchEvent(events.CURRENT_TIME, Chromecast.mediaSession.getEstimatedTime())            \n    // Chrome iOS fix\n    mediaSessionUpdateListener()\n}\n\nfunction mediaSessionUpdateListener() {\n    dispatchEvent(\n        events.PLAYER_STATE, \n        Chromecast.mediaSession.playerState\n    )\n}\n\nfunction receiverListener(state) {\n    if (state == 'available')\n        dispatchEvent(events.AVAILABLE, true)\n    else        \n        dispatchEvent(events.AVAILABLE, false)\n}\n\nfunction mediaStatusUpdateListener(isAlive) {\n\n}\n\nfunction dispatchEvent(event, data) {    \n    let e = {\n        field: event,\n        value: data,\n    }    \n    _dispatchEvent('anyChanged', e)\n    _dispatchEvent(event, e)\n}\n\nfunction _dispatchEvent(event, data) {\n    let e = Chromecast.eventListener[event] || []\n    e.forEach(f => {\n        try {\n            f(data)\n        } catch (e) {\n            console.log(e)            \n        }\n    })\n}\n \nexport default Chromecast","import React from 'react';\nimport Chromecast from './Chromecast';\n\nimport './ChromecastIcon.scss';\n\nclass ChromecastIcon extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            connected: false,\n            available: false,\n        }\n    }\n\n    componentDidMount() {\n        this.onConnected = this.connected.bind(this);\n        this.onDeviceAvailable = this.deviceAvailable.bind(this);\n        this.cast = new Chromecast();\n        this.cast.load(this.onCastInit.bind(this));\n        this.iconClick = this.castIconClick.bind(this);\n    }\n\n    componentWillUnmount() {\n        this.cast.removeEventListener('isConnected', this.onConnected)\n    }\n\n    onCastInit() {\n        this.cast.addEventListener('isConnected', this.onConnected);\n        this.cast.addEventListener('isAvailable', this.onDeviceAvailable);\n    }\n\n    deviceAvailable(e) {\n        this.setState({available: e.value});        \n    }\n\n    connected(e) {\n        this.setState({connected: e.value});\n    }\n\n    castIconClick(event) {\n        this.cast.requestSession();\n    }\n\n    render() {\n        if (!this.state.available)\n            return null;\n        let icon = '/static/img/chromecast.svg';\n        if (this.state.connected)\n            icon = '/static/img/chromecast_connected.svg';\n        return (\n            <img \n                onClick={this.iconClick}\n                title=\"Chromecast\"\n                className=\"castbutton\"\n                src={icon}\n            />\n        );\n    }\n}\n\nexport default ChromecastIcon;","export const EVENT_EPISODE_WATCHED_STATUS = 'episode_watched_status';\n/**\n * @param {string} method - incr or decr\n * @param {int} show_id\n * @param {int} episode_number\n */\nexport function trigger_episode_watched_status(method, show_id, episode_number) {\n    let event = new Event(EVENT_EPISODE_WATCHED_STATUS, {\n        method: method,\n        show_id: show_id,\n        episode_number: episode_number,\n    });\n    document.dispatchEvent(event);\n}","import React from 'react'\nimport ClassNames from 'classnames'\nimport Chromecast from './Chromecast'\nimport Slider from './Slider'\nimport AudioSubBar from './AudioSubBar.jsx'\nimport PlayNext from './PlayNext'\nimport {episodeTitle, secondsToTime} from 'utils'\nimport {request} from 'api'\nimport {trigger_episode_watched_status} from 'seplis/events'\n\nimport './ChromecastBar.scss'\n\nclass ChromecastBar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            connected: false,\n            deviceName: \"\",\n            playerState: '',\n            info: null,\n            currentTime: 0,\n            loading: false,\n            changingTime: false,\n        }\n        this.cast = null\n\n        this.onSliderReturnCurrentTime = this.sliderReturnCurrentTime.bind(this)\n        this.onSliderNewTime = this.sliderNewTime.bind(this)\n        this.onPlayPauseClick = this.playPauseClick.bind(this)\n        this.onAudioChange = this.audioChange.bind(this)\n        this.onSubtitleChange = this.subtitleChange.bind(this)\n        this.clickPlayNextEpisode = this.playNextEpisode.bind(this)\n    }\n\n    componentDidMount() {\n        this.cast = new Chromecast()\n        this.cast.load(this.initCast.bind(this))\n    }\n\n    componentWillUnmount() {\n        this.cast.removeEventListener(\n            'anyChanged',\n            this.castStateChanged.bind(this)\n        )\n\n        var session = this.cast.getSession()\n        if (session) {\n            session.removeMessageListener(\n                'urn:x-cast:net.seplis.cast.get_custom_data',\n                this.receiveCastInfo.bind(this),\n            )\n        }\n    }\n\n    audioChange(lang) {\n        if (lang == '')\n            lang = null\n        this.subAudioSubSave({audio_lang: lang})\n    }    \n\n    subtitleChange(lang) {\n        if (lang == '')\n            lang = null\n        this.subAudioSubSave({subtitle_lang: lang})\n    }\n\n    subAudioSubSave(data) {\n        var show = this.state.info.show\n        var episode = this.state.info.episode\n        request(`/1/shows/${show.id}/user-subtitle-lang`, {\n            method: 'PATCH',\n            data: data,\n        }).done(() => {\n            this.cast.playEpisode(show.id, episode.number, this.state.currentTime)\n        }).catch((e) => {\n            alert(e.message)\n        })\n    }\n\n    initCast() {\n        this.cast.addEventListener(\n            'anyChanged',\n            this.castStateChanged.bind(this),\n        )\n    }\n\n    playPauseClick(event) {\n        this.cast.playOrPause()\n    }\n\n    castStateChanged(event) {\n        switch (event.field) {\n            case 'playerState':\n                this.playerStateChanged(event)\n                break\n            case 'isConnected':\n                this.connectedChanged()\n                break\n            case 'currentTime':\n                this.currentTimeChanged(event)\n                break\n        }\n    }\n\n    connectedChanged() {\n        let connected = this.cast.isConnected()\n        this.setState({\n            connected: connected,\n            deviceName: (connected)?this.cast.getFriendlyName():'',\n        })\n        if (connected) {\n            this.setState({loading: false})\n            this.cast.getSession().addMessageListener(\n                'urn:x-cast:net.seplis.cast.get_custom_data',\n                this.receiveCastInfo.bind(this),\n            )\n        } else {\n            this.setState({info: null})\n        }\n    }\n\n    receiveCastInfo(namespace, message) {\n        this.setState({\n            info: JSON.parse(message),\n            playNextEpisode: null,\n        }, () => {\n            if (this.cast.getMediaSession()) {\n                this.currentTimeChanged({\n                    value: this.cast.getMediaSession().getEstimatedTime()\n                })\n            }\n            this.getPlayNextEpisode()\n        })\n    }\n\n    playerStateChanged(event) {\n        this.setState({\n            playerState: event.value,\n            loading: (event.value == 'BUFFERING') || this.changingTime,\n        })\n        if (!this.state.info)\n            this.cast.getSession().sendMessage(\n                'urn:x-cast:net.seplis.cast.get_custom_data', \n                {}\n            )\n        if (event.value == 'IDLE') {\n            trigger_episode_watched_status('refresh', 0, 0)\n        }\n    }\n\n    getPlayNextEpisode() {\n        if (!this.state.info)\n            return\n        let number = parseInt(this.state.info.episode.number) + 1\n        let showId = this.state.info.show.id\n        request(\n            `/1/shows/${showId}/episodes/${number}`\n        ).done(data => {\n            this.setState({nextEpisode: data})\n        })\n    }\n\n    playNextEpisode() {\n        if ((!this.state.nextEpisode) || (!this.state.info))\n            return\n        let info = this.state.info\n        info['episode'] = this.state.nextEpisode\n        info['startTime'] = 0\n        this.setState({\n            nextEpisode: null,\n            info: info,\n            playerState: '',\n            loading: true,\n            changingTime: true,\n            currentTime: 0,\n        })\n        this.cast.playEpisode(\n            this.state.info.show.id,\n            this.state.nextEpisode.number,\n            0,\n        ).catch((e) => {\n            alert(e.message)\n            this.setState({changingTime: false})\n        }).then(() => {\n            // iOS fix\n            this.cast.getSession().sendMessage(\n                'urn:x-cast:net.seplis.cast.get_custom_data', \n                {}\n            )\n            this.setState({changingTime: false})\n        }) \n    }\n\n    currentTimeChanged(event) {\n        let time = event.value\n        if (!this.cast.getMediaSession())\n            return     \n        if (!this.cast.getMediaSession().items)\n            return\n        if (this.cast.getMediaSession().items.length != 1)\n            return\n        if (this.state.changingTime)\n            return\n        let startTime = this.cast.getMediaSession().items[0].startTime\n        if (startTime == 0 && this.state.info)\n            time += this.state.info.startTime\n        this.setState({currentTime: time})\n    }\n\n    sliderNewTime(newTime) {            \n        this.state.info['startTime'] = newTime\n        this.setState({\n            loading: true,\n            currentTime: newTime,\n            changingTime: true,\n        })\n        this.cast.pause(() => {\n            this.cast.playEpisode(\n                this.state.info.show.id,\n                this.state.info.episode.number,\n                newTime,\n            ).catch((e) => {\n                this.setState({changingTime: false})\n                alert(e.message)\n            }).then(() => {\n                // iOS fix\n                this.cast.getSession().sendMessage(\n                    'urn:x-cast:net.seplis.cast.get_custom_data', \n                    {}\n                )\n                this.setState({changingTime: false})\n            })\n        }, () => {            \n            this.setState({changingTime: false})\n        })\n    }\n\n    sliderReturnCurrentTime() {\n        return this.state.currentTime\n    }\n\n    renderPlayControl() {\n        if (this.state.loading) {\n            return (\n                <div className=\"control\">\n                    <img src=\"/static/img/spinner.svg\" />\n                </div>\n            )\n        }\n        let playPause = ClassNames({\n            fa: true,\n            'fa-pause': this.state.playerState == 'PLAYING',\n            'fa-play': this.state.playerState != 'PLAYING',\n        })\n        return (\n            <div className=\"control\">\n                <span \n                    className={playPause}\n                    onClick={this.onPlayPauseClick}\n                >\n                </span>\n            </div>\n        )\n    }\n\n    getDuration() {\n        if (!this.state.info)\n            return 0\n        return parseInt(\n            this.state.info.metadata.format.duration\n        )\n    }\n\n    getPlayNextInfo() {\n        if (!this.state.info || !this.state.info.show || !this.state.nextEpisode) \n            return null\n        let show = this.state.info.show\n        let episode = this.state.nextEpisode\n        let title = episodeTitle(show, episode)\n        return {\n            title: title,\n            url: `/show/${show.id}/episode/${episode.number}/play`\n        }\n    }\n\n    renderPlayNext() {\n        let info = this.getPlayNextInfo()\n        if (!info) return\n        return <div className=\"control\">\n            <span \n                className=\"fas fa-step-forward\"\n                onClick={this.clickPlayNextEpisode}\n            />\n        </div>\n    }\n\n    renderPlaying() {\n        let show = this.state.info.show\n        let episode = this.state.info.episode\n        return (\n            <div id=\"castbar\">\n            <div className=\"container\">\n                <div className=\"text\">\n                    <b>\n                    {show.title} - {episodeTitle(show, episode)}\n                    </b>\n                    &nbsp; on {this.state.deviceName}\n                </div>\n                <div className=\"controls\">\n                </div>\n                <div className=\"controls\">\n                    {this.renderPlayControl()}\n                    <div className=\"control-text\">\n                        {secondsToTime(this.state.currentTime)}\n                    </div>\n                    <Slider\n                        duration={this.getDuration()}\n                        onReturnCurrentTime={this.onSliderReturnCurrentTime}\n                        onNewTime={this.onSliderNewTime}\n                    />\n                    <div className=\"control-text\">\n                        {secondsToTime(this.getDuration())}\n                    </div>\n                    <div className=\"control\">\n                        <AudioSubBar \n                            metadata={this.state.info.metadata}\n                            bottom={true}\n                            onAudioChange={this.onAudioChange}\n                            onSubtitleChange={this.onSubtitleChange}\n                        />\n                    </div>\n                    {this.renderPlayNext()}\n                </div>\n            </div>\n            </div>\n        )\n    }\n\n    renderFinished() {\n        let show = this.state.info.show\n        let episode = this.state.info.episode\n        let playNext = this.getPlayNextInfo()\n        if (!playNext) return null\n        return (\n            <div id=\"castbar\">\n            <div className=\"container\">\n                <div className=\"text\">\n                    <b>{this.state.deviceName}</b>\n                    <br />\n                    <b>Play next episode:</b> \n                    &nbsp; <a onClick={this.clickPlayNextEpisode}>\n                        {show.title} - {playNext['title']}\n                    </a>\n                </div>\n            </div>\n            </div>\n        )\n    }\n\n    renderLoading() {\n        if (!this.state.loading)\n            return\n        return <img src=\"/static/img/spinner.svg\" />\n    }\n\n    renderReadyToPlay() {\n        return (\n            <div id=\"castbar\">\n            <div className=\"container\">\n            <div className=\"text\">\n                <b>Ready to cast on {this.state.deviceName}</b> <br />\n                {this.renderLoading()}\n                {this.renderPlayNext()}\n            </div>\n            </div>\n            </div>\n        )\n    }\n\n    render() {\n        if ((!this.cast) || (!this.state.connected)) {\n            return null\n        }\n        if (this.state.info && (this.state.playerState == 'IDLE') && \n            !this.state.changingTime)\n            return this.renderFinished()\n        if (this.state.info)\n            return this.renderPlaying()\n        return this.renderReadyToPlay()\n    }\n}\n\nexport default ChromecastBar","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {request} from 'api'\nimport {isAuthed, getUserLevel} from 'utils'\nimport Search from './Search'\nimport ChromecastIcon from './player/ChromecastIcon'\nimport ChromecastBar from './player/ChromecastBar'\n\nimport './Navbar.scss'\n\nclass Navbar extends React.Component {\n\n    renderShowDropdown() {\n        return (\n            <span className=\"dropdown\">\n                <a \n                    className=\"link dropdown-toggle\" \n                    data-toggle=\"dropdown\"\n                >\n                    Shows                      \n                </a>\n                <div className=\"dropdown-menu\">\n                    <Link className=\"dropdown-item\" to=\"/countdown\">Countdown</Link>\n                    <Link className=\"dropdown-item\" to=\"/following\">Following</Link>\n                    <Link className=\"dropdown-item\" to=\"/episodes-to-watch\">Episodes to Watch</Link>\n                    <Link className=\"dropdown-item\" to=\"/recently-aired\">Recently Aired</Link>\n                    <Link className=\"dropdown-item\" to=\"/shows-watched\">Watched</Link>\n                    <Link className=\"dropdown-item\" to=\"/user-shows-stats\">Stats</Link>\n                    <div className=\"dropdown-divider\"></div>\n                    <Link className=\"dropdown-item\" to=\"/show-new\">New show</Link>\n                </div>\n            </span>\n        )\n    }\n\n    renderMain() {\n        return (\n            <Link \n                className=\"link\" \n                to=\"/\"\n            >\n                Main\n            </Link>\n        )\n    }\n\n    renderAirDates() {\n        return (\n            <Link \n                className=\"link\" \n                to=\"/air-dates\"\n            >\n                Air dates\n            </Link>\n        )\n    }\n\n    renderUserMenu() {\n        if (!isAuthed())\n            return\n        return (\n            <span className=\"dropdown\">\n                <a \n                    className=\"link dropdown-toggle\" \n                    data-toggle=\"dropdown\"\n                >\n                    <i className=\"fas fa-user\"></i>                     \n                </a>\n                <div className=\"dropdown-menu dropdown-menu-right\">\n                    <Link className=\"dropdown-item\" to=\"/account\">Account</Link>\n                    <Link className=\"dropdown-item\" to=\"/play-servers\">Play servers</Link>\n                    <div className=\"dropdown-divider\"></div>\n                    <Link className=\"dropdown-item\" to=\"/sign-out\">Sign out</Link>\n                </div>\n            </span>\n        )\n    }\n\n    renderChromecast() {\n        if (!isAuthed())\n            return\n        return (               \n            <span className=\"link\">\n                <ChromecastBar />\n                <ChromecastIcon />\n            </span>\n        )    \n    }\n\n    renderSignIn() {\n        if (isAuthed()) \n            return\n        return (\n            <Link \n                className=\"link\" \n                to=\"/sign-in\"\n            >\n                Sign in\n            </Link>\n        )\n    }\n\n    renderCreateUser() {\n        if (isAuthed()) \n            return\n        return (\n            <Link \n                className=\"link\" \n                to=\"/create-user\"\n            >\n                Create user\n            </Link>\n        )\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar-seplis\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-auto\">\n                            {this.renderMain()}\n                            {this.renderAirDates()}\n                            {this.renderShowDropdown()}\n                        </div>                        \n\n                        <div className=\"col-auto ml-auto order-sm-2 order-md-12\">\n                            {this.renderChromecast()}                            \n                            {this.renderCreateUser()}\n                            {this.renderSignIn()}\n                            {this.renderUserMenu()}\n                        </div>\n\n                        <div className=\"col-12 col-md-6 m-auto order-sm-12 order-md-2\">\n                            <Search key=\"Search\" />\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n\n}\n\nexport default Navbar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\nimport {isAuthed,getUserId} from 'utils'\nimport {request} from 'api'\n\nimport './FanButton.scss'\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    following: PropTypes.bool,\n}\n\nclass FanButton extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            following: props.following,\n        }\n        this.onClick = this.onClick.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.following == undefined)\n            this.get()\n    }\n\n    onClick(e) {\n        e.target.blur()\n        e.preventDefault()\n        this.setState({following: !this.state.following})\n        request(`/1/users/${getUserId()}/shows-following/${this.props.showId}`, {\n            method: this.state.following?'DELETE':'PUT',\n        }).fail(() => {            \n            this.setState({following: !this.state.following})\n        })\n    }\n\n    get() {\n        if (!isAuthed()) \n            return\n        request(\n            `/1/users/${getUserId()}/shows-following/${parseInt(this.props.showId)}`\n        ).done(d => {\n            this.setState({following: d.following})\n        })\n    }\n\n    render() {\n        let btnClass = ClassNames({\n            btn: true,\n            'btn-fan': true,\n            'btn-fan__is-fan': this.state.following, \n        })\n        return (\n            <button \n                className={btnClass}\n                onClick={this.onClick}\n                title={this.state.following?'Unfollow':'Follow'}\n                aria-label={this.state.following?'Unfollow':'Follow'}                \n            >\n                {this.state.following?\n                    'Following'\n                    :\n                    'Follow'\n                }\n            </button>\n        )\n    }\n}\nFanButton.propTypes = propTypes\n\nexport default FanButton","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\nimport {isAuthed,getUserId} from 'utils'\nimport {request} from 'api'\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    rating: PropTypes.number,\n}\n\nclass UserRating extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rating: props.rating,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.rating == undefined)\n            this.getRating()\n    }\n\n    handleChange = (e) => {\n        e.preventDefault()\n        e.target.blur()\n        if (e.target.value == '') {\n            this.setState({rating: ''})\n            request(`/1/shows/${this.props.showId}/user-rating`, {\n                method: 'DELETE',\n            })\n        } else {\n            let s = parseInt(e.target.value)\n            this.setState({rating: s})\n            request(`/1/shows/${this.props.showId}/user-rating`, {\n                data: {\n                    rating: s,\n                },\n                method: 'PUT',\n            })\n        }\n    }\n\n    getRating() {\n        if (!isAuthed()) \n            return\n        request(\n            `/1/shows/${this.props.showId}/user-rating`\n        ).done(d => {\n            this.setState({rating: d.rating?d.rating:''})\n        })\n    }\n\n    render() {\n        return (\n            <select \n                className=\"form-control dark-input\"\n                value={this.state.rating} \n                onChange={this.handleChange}\n                style={{width:'auto', textAlignLast: 'right'}}\n            >                \n                {Array(10).fill(1).map((e, i) =>\n                    <option key={`user-rating-${11-(i+1)}`} value={11-(i+1)}>{11-(i+1)}/10</option>\n                )}\n                <option value=\"\">★ Not rated</option>\n            </select>\n        )\n    }\n}\nUserRating.propTypes = propTypes\n\nexport default UserRating","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {NavLink} from 'react-router-dom'\nimport UserRating from 'seplis/components/shows/UserRating'\nimport {getUserLevel, isAuthed} from 'seplis/utils'\n\nlet propTypes = {\n    showId: PropTypes.number.isRequired,\n}\n\nclass ShowNav extends React.Component {\n\n    renderSettings() {\n        if (getUserLevel() < 2) \n            return\n        return (\n            <NavLink \n                className=\"nav-link\" \n                to={`/show/${this.props.showId}/edit`}\n                activeClassName=\"active\"\n            >\n                <i className=\"fas fa-cog\"></i>\n            </NavLink>\n        )\n    }\n\n    renderRating(showId) {\n        if (isAuthed()) \n            return <div className=\"ml-auto\">\n                <UserRating showId={this.props.showId} />\n            </div>\n    }\n\n    render() {\n        return (\n            <nav className=\"nav nav-pills mb-3\" style={{borderBottom:'1px solid #007bff'}}>\n                <NavLink \n                    className=\"nav-link\"       \n                    exact                 \n                    to={`/show/${this.props.showId}`}\n                    activeClassName=\"active\"\n                >\n                    Main\n                </NavLink>\n                <NavLink \n                    className=\"nav-link\" \n                    to={`/show/${this.props.showId}/info`}\n                    activeClassName=\"active\"\n                >\n                    Info\n                </NavLink>\n                <NavLink \n                    className=\"nav-link\" \n                    to={`/show/${this.props.showId}/seasons`}\n                    activeClassName=\"active\"\n                >\n                    Seasons\n                </NavLink>\n                <NavLink \n                    className=\"nav-link\" \n                    to={`/show/${this.props.showId}/images`}\n                    activeClassName=\"active\"\n                >\n                    Images\n                </NavLink>\n                <NavLink \n                    className=\"nav-link\" \n                    to={`/show/${this.props.showId}/stats`}\n                    activeClassName=\"active\"\n                >\n                    Stats\n                </NavLink>\n                {this.renderRating()}\n                {this.renderSettings()}\n            </nav>\n        )\n    }\n}\nShowNav.propTypes = propTypes\n\nexport default ShowNav","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames'; \nimport {getUserId} from 'utils';\nimport {request} from 'api';\nimport {trigger_episode_watched_status} from 'seplis/events';\n\nimport 'bootstrap/js/src/dropdown';\nimport './WatchedButton.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    episodeNumber: PropTypes.number.isRequired,\n    watched: PropTypes.object,\n}\n\nclass WatchedButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.setWatchedState();\n        this.onWatchedIncr = this.onWatchedIncr.bind(this);\n        this.onWatchedDecr = this.onWatchedDecr.bind(this);\n        this.onWatchedClick = this.onWatchedClick.bind(this);\n    }\n\n    setWatchedState() {\n        if (this.props.watched) {\n            this.state = this.props.watched;\n        } else {            \n            this.state = {\n                times: 0,\n                position: 0,\n            }\n        }\n    }\n\n    watchedApiEndpoint() {\n        let id = this.props.showId;\n        let n = this.props.episodeNumber;\n        return `/1/shows/${id}/episodes/${n}/watched`;\n    }\n    onWatchedIncr(e) {\n        this.setState({times: ++this.state.times});\n        request(this.watchedApiEndpoint(), {\n            method: 'PUT', \n        }).done((data) => {\n            trigger_episode_watched_status(\n                'incr', \n                this.props.showId, \n                this.props.episodeNumber\n            );\n            this.setState(data);\n        }).fail(() => {            \n            this.setState({times: --this.state.times});\n        });\n    }    \n    onWatchedDecr(e) {\n        if (this.state.position > 0) {\n            request(this.watchedApiEndpoint()\n                .replace('watched', 'position'), {\n                method: 'DELETE', \n            }).done((data) => {\n                trigger_episode_watched_status(\n                    'decr', \n                    this.props.showId, \n                    this.props.episodeNumber\n                );\n                this.setState({position: 0});\n            });\n        } else if (this.state.times > 0) { \n            this.setState({times: --this.state.times});\n            request(this.watchedApiEndpoint(), {\n                data: {times: -1},\n                method: 'PUT', \n            }).done((data) => {\n                trigger_episode_watched_status(\n                    'decr', \n                    this.props.showId, \n                    this.props.episodeNumber\n                );\n                if (data) {\n                    this.setState(data);\n                } else {\n                    this.setState({\n                        times: 0,\n                        position: 0,\n                    });\n                }\n            }).fail(() => {            \n                this.setState({times: ++this.state.times});\n            });\n        }\n    }\n    onWatchedClick(e) {\n        if ((this.state.times > 0) || (this.state.position > 0))\n            return;\n        this.onWatchedIncr(e);\n    }\n\n    renderDropdown() {\n        return (\n            <ul \n                className=\"dropdown-menu dropdown-menu-right\" \n                role=\"menu\"\n            >\n                <li onClick={this.onWatchedIncr}>\n                    <i className=\"fas fa-plus\"></i>\n                </li>\n                <li onClick={this.onWatchedDecr}>\n                    <i className=\"fas fa-minus\"></i>\n                </li>\n            </ul>\n        )\n    }\n\n    render() {\n        let dropdown = (this.state.times>0) || (this.state.position>0);\n        let btnClass = ClassNames({\n            btn: true,\n            'btn-watched': true,\n            watched: this.state.times>0,\n            watching: this.state.position>0,\n            'watching-watched': this.state.position>0 && this.state.times>0,\n        });\n        return (\n            <div className=\"btn-group btn-episode-watched-group dropdown\">\n                {this.renderDropdown()}\n                <button \n                    className={btnClass}\n                    data-toggle={dropdown?'dropdown':'none'}\n                    onClick={this.onWatchedClick}\n                >\n                    Watched\n                </button>\n                <button className=\"btn btn-times\">\n                    {this.state.times} \n                </button>\n            </div>\n        );\n    }\n}\n\nWatchedButton.propTypes = propTypes;\n\nexport default WatchedButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WatchedButton from './WatchedButton';\nimport Chromecast from 'seplis/components/player/Chromecast';\n\nimport './EpisodeListItem.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    episode: PropTypes.object.isRequired,\n    displaySeason: PropTypes.bool,\n}\n\nconst defaultProps = {\n    displaySeason: true,\n}\n\nclass EpisodeListItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onPlayClick = this.playClick.bind(this);\n    }\n\n    playClick(e) {\n        if (Chromecast.session && (Chromecast.session.status == 'connected')) {\n            let cc = new Chromecast();\n            cc.playEpisode(\n                this.props.showId,\n                this.props.episode.number\n            ).catch((e) => {\n                console.log(e)\n                alert('Error occurred trying to play the episode on your Chrome Cast')\n            });\n        } else {\n            location.href = this.getPlayUrl();\n        }\n    }\n\n    renderEpisodeNumber() {\n        if (this.props.episode.episode) {\n            return (\n                <span>\n                    {this.props.displaySeason?`S${this.props.episode.season} `: ''}\n                    Episode {this.props.episode.episode}\n                    &nbsp;\n                    <font color=\"grey\">\n                        ({this.props.episode.number})\n                    </font> \n                </span>\n            )\n        } else {\n            return (\n                <span>Episode {this.props.episode.number}</span>\n            )   \n        }\n    }\n\n    renderAirDate() {\n        if (this.props.episode.air_date) {\n            return (\n                <span \n                    className=\"air-date\" \n                    title={this.props.episode.air_date}\n                >\n                    {this.props.episode.air_date}\n                </span> \n            )\n        } else {\n            return (\n                <span>\n                    Unknown air date.\n                </span>\n            )\n        }\n    }\n\n    getPlayUrl() {\n        return `/show/${this.props.showId}/episode/${this.props.episode.number}/play`;\n    }\n\n    render() {\n        return (\n            <div className=\"episode-box-list-item\">\n                <div \n                    className=\"title\" \n                    title={this.props.episode.title}\n                >\n                    {this.props.episode.title?this.props.episode.title:'TBA'}\n                </div>\n                <div className=\"meta\">\n                    {this.renderEpisodeNumber()}\n                    <strong> · </strong>\n                    {this.renderAirDate()}\n                </div>\n                <div className=\"button-bar\">\n                    <WatchedButton \n                        showId={this.props.showId}\n                        episodeNumber={this.props.episode.number}\n                        watched={this.props.episode.user_watched}\n                    />\n                    <div \n                        className=\"play-button float-right\"\n                        onClick={this.onPlayClick}\n                    >\n                        <i className=\"fas fa-play-circle\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nEpisodeListItem.propTypes = propTypes;\nEpisodeListItem.defaultProps = defaultProps;\n\nexport default EpisodeListItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {request} from 'api';\nimport {isAuthed} from 'utils';\nimport EpisodeListItem from './EpisodeListItem';\nimport {EVENT_EPISODE_WATCHED_STATUS} from 'seplis/events';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n}\n\nclass NextToWatch extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episode: null,\n        }\n        this.eventGet = this.get.bind(this);\n        document.addEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.addEventListener('visibilitychange', this.eventGet);\n    }\n    \n    componentDidMount() {\n        this.get();        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.removeEventListener('visibilitychange', this.eventGet);\n    }\n\n    get(event={}) {\n        if (document.hidden) return;\n        if (!isAuthed()) {\n            request(\n                `/1/shows/${this.props.showId}/episodes/1`\n            ).done(episode => {\n                this.setState({episode: episode});\n            });\n            return;\n        }\n\n        request(\n            `/1/shows/${this.props.showId}/episodes/to-watch`\n        ).done(episode => {\n            this.setState({episode: episode});\n        });\n    }\n\n    render() {\n        if (this.state.episode == null) {\n            return <p className=\"text-muted\">No episodes to watch</p>;\n        }\n        return (\n            <EpisodeListItem \n                key={this.state.episode.number}\n                showId={this.props.showId}\n                episode={this.state.episode}\n                displaySeason={true}\n            />\n        )\n    }\n}\nNextToWatch.propTypes = propTypes;\n\nexport default NextToWatch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Fecha from 'fecha';\nimport {request} from 'api';\nimport {dateInDays} from 'utils';\n\nimport './LatestEpisodesSideBar.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    numberOfEpisodes: PropTypes.number,\n}\n\nconst defaultProps = {\n    numberOfEpisodes: 3,\n}\n\nclass LatestEpisodesSideBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episodes: [],\n        }\n        this.getEpisodes();\n    }\n\n    renderEpisodeNumber(episode) {\n        if (episode.episode) {\n            return (\n                <span>\n                    S{episode.season} · E{episode.episode}\n                    &nbsp;\n                    ({episode.number})\n                </span>\n            )\n        } else {\n            return (\n                <span>Episode {episode.number}</span>\n            )   \n        }\n    }\n\n    getEpisodes() {\n        let dateUTC = Fecha.format(new Date().getTime(), 'YYYY-MM-DD');\n        request(`/1/shows/${this.props.showId}/episodes`, {\n            query: {\n                q: `air_datetime:[${dateUTC}T00:00:00 TO *]`,\n                per_page: this.props.numberOfEpisodes,\n                sort: 'number:asc',\n            }\n        }).done((episodes) => {\n            this.setState({episodes:episodes});\n        });\n    }\n\n    renderCountdown(episode) {\n        if (!episode.air_datetime)\n            return '';\n        let dt = new Date(episode.air_datetime);\n        let m = dt-new Date().getTime();\n        if (m > 0) {\n            return ' · In '+dateInDays(episode.air_datetime);\n        } else {\n            return ' · '+dateInDays(episode.air_datetime)+' ago';     \n        }\n    }\n\n    render() {\n        if (this.state.episodes.length == 0) {\n            return (\n                <p className=\"text-muted\">No ETA for new episodes.</p>\n            )\n        }\n        return (\n            <div className=\"latest-episodes-side-bar\">\n                {this.state.episodes.map((item, i) => (\n                    <div key={item.number} className=\"item\">\n                        <p>{item.title}</p>\n                        <p>{this.renderEpisodeNumber(item)}</p>\n                        <p>{item.air_date} {this.renderCountdown(item)}</p>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\nLatestEpisodesSideBar.propTypes = propTypes;\nLatestEpisodesSideBar.defaultProps = defaultProps;\n\nexport default LatestEpisodesSideBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {request} from 'api'\nimport {isAuthed} from 'utils';\nimport EpisodeListItem from './EpisodeListItem';\nimport {EVENT_EPISODE_WATCHED_STATUS} from 'seplis/events';\n\nconst propTypes = {\n    'showId': PropTypes.number.isRequired,\n}\n\nclass EpisodeLastWatched extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episode: null,\n        }\n        this.eventGet = this.get.bind(this);\n        document.addEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.addEventListener('visibilitychange', this.eventGet);\n    }\n\n    componentDidMount() {\n        this.get();        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.removeEventListener('visibilitychange', this.eventGet);\n    }\n\n    get(event={}) {\n        if (document.hidden) return;\n        if (!isAuthed())\n            return;\n        request(\n            `/1/shows/${this.props.showId}/episodes/last-watched`\n        ).done(episode => {\n            this.setState({episode: episode});\n        })\n    }\n\n    render() {\n        if (!this.state.episode)\n            return <p className=\"text-muted\">No episodes has been watched</p>;\n        \n        return (\n            <EpisodeListItem \n                key={this.state.episode.number}\n                showId={this.props.showId}\n                episode={this.state.episode}\n                displaySeason={true}\n            />\n        );\n    }\n\n}\nEpisodeLastWatched.propTypes = propTypes;\n\nexport default EpisodeLastWatched;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NextToWatch from 'components/shows/episodes/NextToWatch';\nimport LatestEpisodesSideBar from 'components/shows/episodes/LatestEpisodesSideBar';\nimport EpisodeLastWatched from 'components/shows/episodes/EpisodeLastWatched'\n\nconst propTypes = {\n    show: PropTypes.object.isRequired,\n}\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n    } \n\n    componentDidMount() {\n        document.title = `${this.props.show.title} | SEPLIS`\n    }\n\n    renderAirDates() {\n        if (this.props.show.status > 1) {\n            return;\n        }\n        return (\n            <div className=\"col-12 col-lg-4 col-margin\">\n                <h4 className=\"header\">\n                    Next to air\n                </h4>\n                <LatestEpisodesSideBar\n                    showId={parseInt(this.props.show.id)}\n                />\n            </div>\n        );\n    }\n\n    renderNextToWatch() {\n        return (\n            <div className=\"col-12 col-lg-8 col-margin\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-margin\">\n                    <h4 className=\"header\">\n                        To watch\n                    </h4>\n                    <NextToWatch\n                        showId={parseInt(this.props.show.id)}\n                        numberOfEpisodes={2}\n                    />                \n                    </div>\n                    <div className=\"col-12\">\n                    <h4 className=\"header\">\n                        Previous watched\n                    </h4>\n                    <EpisodeLastWatched showId={parseInt(this.props.show.id)} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                {this.renderNextToWatch()}\n                {this.renderAirDates()}\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    seasons: PropTypes.array.isRequired,\n    selectedNumber: PropTypes.number,\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n}\n\nclass SelectSeasonEpisode extends React.Component {\n\n    renderSeason(item) {\n        let rows = [];\n        for (let i = item.from; i <= item.to; i++) {\n            rows.push(\n                <option \n                    key={i} \n                    value={i}\n                >\n                    S{item.season}: Episode {i-item.from+1}\n                </option>\n            )\n        }\n        return (\n            <optgroup key={item.season} label={`Season ${item.season}`}>\n                {rows}\n            </optgroup>\n        )\n    }\n\n    render() {\n        return (\n            <select \n                name={this.props.name}\n                className=\"form-control\"\n                onChange={this.props.onChange}\n                value={this.props.selectedNumber}\n            >\n                {this.props.seasons.map((item, index) => (\n                    this.renderSeason(item)\n                ))}\n            </select>\n        )\n    }\n}\nSelectSeasonEpisode.propTypes = propTypes;\n\nexport default SelectSeasonEpisode;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectSeasonEpisode from './SelectSeasonEpisode';\nimport {request} from 'api';\nimport {getUserId} from 'utils';\n\nimport 'popper.js';\nimport 'bootstrap/js/src/dropdown';\nimport './WatchedProgression.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    seasons: PropTypes.array.isRequired,\n}\n\nclass WatchedProgression extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showForm: false,\n            fromNumber: 1,\n            toNumber: 1,\n            saving: false,\n        }\n        this.dropdownButtonClick = this.dropdownButtonClick.bind(this);\n        this.selectChange = this.selectChange.bind(this);\n        this.formSubmit = this.formSubmit.bind(this);\n    }\n\n    selectChange(e) {\n        this.state[e.target.name] = parseInt(e.target.value);\n        if (this.state.fromNumber > this.state.toNumber)\n            this.state.toNumber = this.state.fromNumber;\n        this.setState(this.state);\n    }\n\n    dropdownButtonClick(e) {\n        this.getNextToWatch();\n    }\n\n    getNextToWatch() {\n        request(\n            `/1/shows/${this.props.showId}/episodes/to-watch`\n        ).done(episode => {\n            if (this.state.showForm === false)\n                // Render the form and it's options before \n                // setting the selected value. Otherwise it will not work.\n                this.setState({showForm:true});\n            this.setState({\n                fromNumber: episode.number,\n                toNumber: episode.number,\n            });\n        }).fail(error => {\n            if (error.responseJSON.code === 1301) {\n                this.setState({showForm:true});\n            }\n        });\n    }\n\n    formSubmit(e) {\n        e.preventDefault();\n        this.setState({'saving': true})\n        let id = this.props.showId;\n        let fromN = this.state.fromNumber;\n        let toN = this.state.toNumber;\n        request(\n            `/1/shows/${id}/episodes/${fromN}-${toN}/watched`,\n            {method: 'PUT'}\n        ).fail(() => {\n            this.setState({'saving': false});\n        }).done(() => {\n            location.reload();\n        });\n    }\n\n    renderForm() {\n        return (\n            <form onSubmit={this.formSubmit}>\n                <div className=\"form-group\">                    \n                    <label>From episode</label>\n                    <SelectSeasonEpisode\n                        seasons={this.props.seasons}\n                        name=\"fromNumber\"\n                        onChange={this.selectChange}\n                        selectedNumber={this.state.fromNumber}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>To episode</label>\n                    <SelectSeasonEpisode\n                        seasons={this.props.seasons}\n                        name=\"toNumber\"\n                        onChange={this.selectChange}\n                        selectedNumber={this.state.toNumber}\n                    />\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={this.state.saving}\n                >\n                    {this.state.saving?'Please wait...':'Watched'}\n                </button>\n            </form>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"dropdown watched-progression\">\n                <button \n                    className=\"btn btn-dark btn-transparent dropdown-toggle\" \n                    data-toggle=\"dropdown\"\n                    onClick={this.dropdownButtonClick}\n                >\n                    Set progression\n                </button>\n                <div className=\"dropdown-menu dropdown-menu-right\">                    \n                    {this.state.showForm?this.renderForm():''}\n                </div>\n            </div>\n        )\n    }\n\n}\nWatchedProgression.propTypes = propTypes;\n\nexport default WatchedProgression;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    seasons: PropTypes.array.isRequired,\n    selectedSeason: PropTypes.number,\n    onChange: PropTypes.func,\n}\n\nclass SelectSeason extends React.Component {\n\n    render() {\n        return (\n            <select \n                className=\"form-control\" \n                value={this.props.selectedSeason}\n                onChange={this.props.onChange}\n            >\n                {this.props.seasons.map((item, key) => (\n                    <option \n                        key={item.season}\n                        value={item.season}\n                    >\n                        Season {item.season}\n                    </option>\n                ))}\n            </select>\n        )\n    }\n\n}\nSelectSeason.propTypes = propTypes;\n\nexport default SelectSeason;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport {request} from 'api';\nimport {isAuthed} from 'utils';\nimport $ from 'jquery';\n\nimport EpisodeListItem from './EpisodeListItem';\nimport WatchedProgression from './WatchedProgression';\nimport SelectSeason from './SelectSeason';\n\nconst propTypes = {\n    'showId': PropTypes.number.isRequired,\n    'seasons': PropTypes.array.isRequired,\n    'seasonNumber': PropTypes.number.isRequired,\n    onSeasonChange: PropTypes.func,\n}\n\nclass SeasonList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episodes: [],\n            seasonNumber: this.props.seasonNumber,\n        }\n        this.onSeasonChange = this.onSeasonChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getEpisodes();        \n    }\n\n    getEpisodes() {\n        if (this.props.seasons.length < 1) \n            return;\n        var position = $(window).scrollTop();\n        this.setState({episodes: []});\n        let season = this.seasonEpisodeNumbers(this.state.seasonNumber);\n        let query = {}\n        query.q = `number:[${season.from} TO ${season.to}]`;\n        query.per_page = season.total;\n        if (isAuthed()) {\n            query.append = 'user_watched';\n        }\n        request(`/1/shows/${this.props.showId}/episodes`, {\n            query: query,\n        }).done((episodes) => {\n            this.setState({episodes: episodes}, () => {\n                $(window).scrollTop(position);\n            });            \n        });\n    }\n\n    seasonEpisodeNumbers(seasonNumber) {\n        for (var s of this.props.seasons) {\n            if (s.season == seasonNumber) {\n                return s;\n            }\n        }\n        return null;\n    }\n\n    onSeasonChange(e) {\n        var seasonNum = parseInt(e.target.value);\n        this.setState(\n            {seasonNumber: seasonNum}, \n            ()=> {\n                if (this.props.onSeasonChange) {\n                    this.props.onSeasonChange(seasonNum);\n                }\n                else {\n                    this.getEpisodes();\n                }\n            }\n        );\n    }\n\n    render() {\n        if (this.props.seasons.length < 1) \n            return (\n                <div className=\"alert alert-warning\">\n                    <strong>This show has 0 episodes.</strong>  \n                </div>\n            );\n        return (\n            <span>\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-auto ml-auto order-md-12 mb-2 mb-md-0\">\n                    <div className=\"float-right\">\n                        <WatchedProgression \n                            showId={this.props.showId}\n                            seasons={this.props.seasons}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-4\">\n                    <SelectSeason                    \n                        seasons={this.props.seasons}\n                        selectedSeason={this.state.seasonNumber}\n                        onChange={this.onSeasonChange}\n                    />\n                </div>\n            </div>\n            <div className=\"row show-season-list\">\n                <div className=\"col-12 d-md-none col-margin\" />\n                <div className=\"col-12\">\n                    <div className=\"row\">\n                        {this.state.episodes.map((item, index) => (\n                            <div                            \n                                key={item.number} \n                                className=\"col-12 col-md-6 col-lg-4\"\n                            >\n                                <div className=\"d-none d-md-block col-margin\" />\n                                <EpisodeListItem \n                                    showId={this.props.showId}\n                                    episode={item} \n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            </span>\n        );\n    }\n}\n\nSeasonList.propTypes = propTypes;\n\nexport default SeasonList;","import React from 'react'\nimport qs from 'query-string'\n\nimport SeasonList from 'components/shows/episodes/SeasonList'\nimport {request} from 'api'\nimport {isAuthed} from 'utils'\n\nclass Seasons extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onSeasonChange = this.seasonChange.bind(this);\n        this.state = {\n            season: null,\n        }\n    }\n\n    componentDidMount() {\n        document.title = `${this.props.show.title} - Seasons | SEPLIS`\n        this.setQuerySeason()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.setQuerySeason()\n        }\n    }\n\n    setQuerySeason() {\n        let q = qs.parse(location.search)\n        let season = parseInt(q.season) || null\n\n        if (season) {\n            this.setSeason(season)\n            return\n        }\n\n        if (this.props.show.seasons.length > 0)\n            season = this.props.show.seasons[0].season\n        if (isAuthed()) {\n            request(\n                `/1/shows/${this.props.show.id}/episodes/to-watch`\n            ).done(episode => {\n                this.setSeason(episode?episode.season:season)\n            }).fail(() => {\n                this.setSeason(season)\n            })\n        } else {\n            this.setSeason(season)            \n        }\n    }\n\n    setSeason(season) {\n        document.title = `${this.props.show.title} - Season ${season} | SEPLIS`  \n        this.setState({season: season})         \n    }\n\n    seasonChange(season) {\n        this.setState({\n            season: season,\n        })\n        this.props.history.push(`${this.props.location.pathname}?season=${season}`)\n    }\n\n    render() {\n        if (!this.state.season)\n            return null\n        return (\n            <SeasonList\n                key={this.state.season}\n                showId={this.props.show.id}\n                seasons={this.props.show.seasons}\n                seasonNumber={this.state.season}\n                onSeasonChange={this.onSeasonChange}\n            />\n        )\n    }\n}\n\nexport default Seasons;","import React from 'react';\nimport {request} from 'api';\nimport {isAuthed, secondsToPretty} from 'utils';\n\nclass Stats extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userStats: null,\n        }\n    }\n\n    componentDidMount() {\n        document.title = `${this.props.show.title} - Stats | SEPLIS`\n        if (isAuthed()) \n            this.getUserStats();\n    }\n\n    getUserStats() {\n        request(`/1/shows/${this.props.show.id}/user-stats`).done((stats) => {\n            this.setState({\n                userStats: stats,\n            });\n        });\n    }\n\n    countEpisodes() {\n        if (!this.props.show.seasons)\n            return 0;\n        let totalEpisodes = 0;\n        for (let season of this.props.show.seasons) {\n            totalEpisodes += season.total;\n        }\n        return totalEpisodes;\n    }\n\n    renderUserStats() {\n        if (!this.state.userStats)\n            return null;\n        return (\n            <span>\n                <h2 className=\"mb-1 mt-3\">Your stats</h2>\n                <table className=\"table table-striped\">\n                    <tbody>\n                    <tr><th width=\"200px\">Episodes watched</th><td>{this.state.userStats.episodes_watched}</td></tr>\n                    <tr><th>Time spent watching</th>\n                        <td>{secondsToPretty(this.state.userStats.episodes_watched_minutes*60, true)}</td></tr>\n                    </tbody>\n                </table>\n            </span>\n        )\n    }\n\n    render() {\n        let episodeCount = this.countEpisodes();\n        return (\n            <span>\n                {this.renderUserStats()}\n                \n                <h2 className=\"header\">Show stats</h2>\n                <table className=\"table table-striped\">\n                    <tbody>\n                    <tr><th width=\"200px\">Total episodes</th><td>{episodeCount}</td></tr>\n                    <tr><th>Total watchtime</th>\n                        <td>{secondsToPretty(this.props.show.runtime*episodeCount*60, true)}</td></tr>\n                    </tbody>\n                </table>\n            </span>\n        )\n    }\n\n}\n\nexport default Stats;","import React from 'react';\n\n\nclass Info extends React.Component {\n    \n    componentDidMount() {\n        document.title = `${this.props.show.title} - Info | SEPLIS`\n    }\n\n    statusToText(status) {\n        switch (status) {\n            case 1: return 'Running';\n            case 2: return 'Ended';\n            default: return 'Unknown';\n        }\n    }\n\n    renderGeneral() {\n        let show = this.props.show;\n        return (\n            <div className=\"col-12\">\n                <table className=\"table table-sm borderless\">\n                    <tbody>\n                    <tr><th>Status</th><td>{this.statusToText(show.status)}</td></tr>\n                    <tr><th width=\"100\">Premiered</th><td>{show.premiered || 'unknown'}</td></tr>\n                    <tr><th>Runtime</th><td>{show.runtime?show.runtime + ' minutes':'Unknown'}</td></tr>\n                    <tr><th>Genres</th><td>{show.genres.join(', ')}</td></tr>\n                    <tr><th>Language</th><td>{show.language?show.language:'Unknown'}</td></tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    renderDescription() {\n        let desc = this.props.show.description;\n        return (\n            <div className=\"col-12 col-md-12\">\n                <p className=\"text-justify\">\n                    {desc.text}\n                    <br />\n                    <font className=\"text-muted\">Source:</font> \n                    &nbsp;<a href={desc.url} target=\"_blank\">{desc.title}</a>\n                </p>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                {this.renderGeneral()}\n                \n                {this.renderDescription()}\n            </div>\n        )\n    }\n}\n\nexport default Info;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport $ from 'jquery';\nimport 'select2';\nimport 'select2/dist/css/select2.css';\n\nconst propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string),\n}\n\nconst defaultProps = {\n    options: [],\n}\n\nclass EditAlternativeTitles extends React.Component {\n\n    componentDidMount() {\n        $('select#alternative-titles').select2({\n            tags: true,\n        });\n    }\n\n    render() {\n        return (\n            <span style={{color:'#000000'}}>\n                <select \n                    name=\"alternative_titles\"\n                    id=\"alternative-titles\"\n                    className=\"form-control\"\n                    defaultValue={this.props.options}\n                    multiple\n                >\n                    {this.props.options.map((title) => (\n                        <option key={title} value={title}>{title}</option>\n                    ))}\n                </select>\n            </span>\n        );\n    }\n}\nEditAlternativeTitles.propTypes = propTypes;\nEditAlternativeTitles.defaultProps = defaultProps;\n\nexport default EditAlternativeTitles;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditAlternativeTitles from './EditAlternativeTitles';\nimport {request} from 'api';\n\nconst propTypes = {\n    show: PropTypes.object,\n}\n\nconst externals = [\n    {\n        'key': 'imdb',\n        'title': 'IMDb',\n        'required': true,\n        'importer_info': false,\n        'importer_episodes': false,\n    },\n    {\n        'key': 'tvmaze',\n        'title': 'TVMaze',\n        'required': false,\n        'importer_info': true,\n        'importer_episodes': true,\n    },\n    {\n        'key': 'thetvdb',\n        'title': 'TheTVDB',\n        'required': false,\n        'importer_info': true,\n        'importer_episodes': true,\n    },\n]\n\nconst importerTypes = [\n    'info',\n    'episodes',\n]\n\nclass EditFields extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onImporterSelected = this.importerSelected.bind(this);\n        this.onInputChange = this.inputChanged.bind(this);\n        let show = props.show || {};\n        let showexternals = show.externals || {};\n        let importers = show.importers || {};\n        // Fill state\n        this.state = {\n            'importers.info': importers.info || '',\n            'importers.episodes': importers.episodes || '',\n            alternative_titles: show.alternative_titles?show.alternative_titles.slice():[],\n            episode_type: show.episode_type || 2,\n        }\n        for (let external of externals) {\n            this.state[`externals.${external.key}`] = showexternals[external.key] || '';\n        }\n    }\n\n    importerSelected(e) {\n        let s = {}\n        s[e.target.name] = e.target.value;\n        for (let type of importerTypes) {\n            if (`importers.${type}` == e.target.name)\n                continue;\n            if (this.state[`importers.${type}`] === '') {\n                s[`importers.${type}`] = e.target.value;\n            }\n        }\n        this.setState(s);\n    }\n\n    inputChanged(e) {\n        let s = {};\n        let name = e.target.name;\n        let value = e.target.value;\n        s[name] = value;\n        this.setState(s);\n        if ((name.startsWith('externals.')) && (value != '')) {\n            let query = {};\n            query[name.substring(name.indexOf('.')+1, name.length)] = value;\n            this.lookupExternals(query);\n        }\n    }\n\n    lookupExternals(query) {\n        request('/api/tvmaze-show-lookup', {\n            localRequest:true,\n            query: query,\n        }).done(data => {\n            let s = {'externals.tvmaze': data.id}\n            for (let key in data.externals) {\n                if (`externals.${key}` in this.state) {\n                    s[`externals.${key}`] = data.externals[key];\n                }\n            }\n            this.setState(s);\n        })\n    }\n\n    renderImporter(type) {\n        let importers = [];\n        for (let external of externals) {\n            if (external['importer_'+type]) {\n                importers.push(external);\n            }\n        }\n        return (\n            <fieldset className=\"form-group\" key={type}>\n                <label>Import {type} from</label>\n                <select \n                    name={'importers.'+type} \n                    className=\"form-control importers\" \n                    onChange={this.onImporterSelected}\n                    value={this.state[`importers.${type}`]}\n                >\n                    <option value=\"\"></option>\n                    {importers.map((external) => (\n                        <option key={external.key} value={external.key}>\n                            {external.title}\n                        </option>\n                    ))}\n                </select>\n            </fieldset>\n        )\n    }\n\n    renderExternals() {\n        return (\n            externals.map((external) => (\n                <fieldset key={external.key} className=\"form-group\">\n                    <label>{external.title} ID {external.required?<b>*</b>:''}</label>                    \n                    <input \n                        name={`externals.${external.key}`} \n                        className=\"form-control\" \n                        required={external.required}\n                        value={this.state[`externals.${external.key}`]}\n                        onChange={this.onInputChange}\n                    />\n                    {external.required?\n                        <small className=\"text-muted\"> Required to prevent show duplication.</small>:\n                        ''\n                    }\n                </fieldset>\n            ))\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <h3>Externals</h3>\n                    {this.renderExternals()}\n\n                    <h3>Importers</h3>\n                    {importerTypes.map((type) => (\n                        this.renderImporter(type)\n                    ))}\n                </div>\n\n                <div className=\"col-md-6\">\n                    <h3>General</h3>\n                    <fieldset className=\"form-group\">\n                        <label>Alternative titles</label>\n                        <EditAlternativeTitles \n                            options={this.state.alternative_titles} \n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <label>Episode type</label>\n                        <select \n                            name=\"episode_type\"\n                            className=\"form-control\"\n                            defaultValue={this.state.episode_type}\n                        >\n                            <option value=\"1\">Absolute number</option>\n                            <option value=\"2\">Season episode</option>\n                            <option value=\"3\">Air date</option>\n                        </select>\n                    </fieldset>\n                </div>\n            </div>\n        )\n    }\n}\nEditFields.propTypes = propTypes;\n\nexport default EditFields;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport EditFields from 'components/shows/EditFields'\nimport Serialize from 'form-serialize'\nimport {unflatten} from 'flat'\nimport {request} from 'api'\nimport {getUserLevel} from 'utils';\n\nconst propTypes = {\n    show: PropTypes.object,\n}\n\nclass Edit extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.submit.bind(this)\n        this.state = {\n            error: null,\n            success: null,\n            loading: false,\n            deleting: false,\n            deleteSuccess: null,\n        }\n    }\n\n    componentDidMount() {\n        document.title = `${this.props.show.title} - Edit | SEPLIS`\n    }\n\n    submit(e) {\n        e.preventDefault()\n        this.setState({\n            success: null,\n            error: null,\n            loading: true,\n        })\n        let data = unflatten(\n            Serialize(e.target, {hash: true})\n        )\n        request(`/1/shows/${this.props.show.id}`, {\n            data: data,\n            method: 'PUT',\n        }).done(show => {\n            this.setState({success: show})\n            request(`/1/shows/${this.props.show.id}/update`, {\n                method: 'POST',\n            })\n        }).fail(e => {\n            this.setState({error: e.responseJSON})\n        }).always(() => {\n            this.setState({loading: false})\n        })\n    }\n\n    renderError() {\n        if (!this.state.error) \n            return\n        return (\n            <div className=\"alert alert-danger\">\n                {this.state.error.message}\n            </div>\n        )\n    }\n\n    renderSuccess() {\n        if (!this.state.success) \n            return\n        return (\n            <div className=\"alert alert-success\">\n                The show was successfully updated.\n            </div>\n        )\n    }\n\n    deleteClick = (e) => {\n        e.preventDefault()\n        if (!confirm('Sure you want to delete this show?'))\n            return\n        this.setState({deleting: true})\n        request(`/1/shows/${this.props.show.id}`, {\n            method: 'DELETE',\n        }).done(() => {\n            location.href = '/'\n        }).fail(e => {\n            this.setState({error: e.responseJSON})\n        }).always(() => {\n            this.setState({deleting: false})\n        })\n    }\n\n    renderDelete() {\n        if (getUserLevel() < 3)\n            return\n        return <button \n            className=\"btn btn-warning mr-2\"\n            disabled={this.state.deleting}\n            onClick={this.deleteClick}\n        >\n            {this.state.deleting?'Deleting...':'Delete'}\n        </button>\n    }\n\n    render() {\n        return (\n            <form method=\"post\" onSubmit={this.onSubmit}>\n                <EditFields show={this.props.show} />\n                {this.renderError()}\n                {this.renderSuccess()}\n                {this.renderDelete()}\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={this.state.loading}\n                >\n                    {this.state.loading?'Saving...':'Save'}\n                </button>\n            </form>\n        )\n    }\n}\nEdit.propTypes = propTypes\n\nexport default Edit","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkParser from 'parse-link-header';\n\nconst propTypes = {\n    jqXHR: PropTypes.object.isRequired,\n    onPageChange: PropTypes.func,\n}\n\nclass Pagination extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.parseJqXHR();\n        this.onPageChange = this.pageChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState(\n            this.parseJqXHR(nextProps.jqXHR)\n        );\n    }\n\n    pageChange(e) {\n        this.state.page = e.target.value;\n        if (this.props.onPageChange != undefined) \n            this.props.onPageChange(e);\n    }\n\n    parseJqXHR(jqXHR) {\n        return {\n            pages: this.props.jqXHR.getResponseHeader('X-Total-Pages'),\n            page: this.props.jqXHR.getResponseHeader('X-Page'),\n        };\n    }\n\n    renderOptions() {\n        let options = [];\n        for (let i = 1; i <= this.state.pages; i++) {\n            options.push(\n                <option \n                    key={i} \n                    value={i}\n                >\n                    Page {i}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    render() {\n        if (this.props.jqXHR.getResponseHeader('X-Total-Pages') == 0) \n            return null\n        return <select\n            className=\"form-control\"\n            onChange={this.onPageChange}\n            value={this.state.page}\n        >\n            {this.renderOptions()}\n        </select>\n    }\n}\nPagination.propTypes = propTypes;\n\nexport default Pagination;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {request} from 'api'\nimport Loader from 'components/Loader'\nimport Pagination from 'components/Pagination'\nimport {locationQuery, getUserLevel} from 'utils'\n\nclass Images extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            images: null,\n            loading: true,\n            jqXHR: null,\n            page: locationQuery().page || 1,\n        }\n    }\n\n    componentDidMount() {\n        document.title = `${this.props.show.title} - Images | SEPLIS`\n        this.get()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.setState({\n                page: locationQuery().page || 1,\n                loading: true,\n            },() => {\n                this.get()\n            })\n        }\n    }\n\n    setBrowserPath() {\n        this.props.history.push(`${this.props.location.pathname}?page=${this.state.page}`)\n    }\n\n    pageChange = (e) => {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.get()\n        })\n    }\n\n    get() {\n        let show = this.props.show\n        request(`/1/shows/${show.id}/images`, {\n            query: {\n                page: this.state.page,\n                per_page: 8,\n            }\n        }).done(\n            (data, textStatus, jqXHR) => {\n                this.setState({\n                    images: data,\n                    jqXHR: jqXHR,\n                    loading: false,\n                })\n            }\n        )\n    }\n\n    setDefault = (e) => {\n        e.preventDefault()\n        let show = this.props.show        \n        request(`/1/shows/${show.id}`, {\n            data: {\n                poster_image_id: e.target.getAttribute('image-id')\n            },\n            method: 'PATCH',\n        }).done(() => {\n            location.reload()\n        }).fail((e) => {\n            alert(e.message)\n        })\n    }\n\n    renderSetDefault(image) {\n        if (getUserLevel() < 2)\n            return\n        let pi = this.props.show.poster_image\n        if (pi && (pi.hash == image.hash)) \n            return <div className=\"black-box\">\n                Is Default\n            </div>\n        return <div className=\"black-box\">\n            <a href=\"#\" image-id={image.id} onClick={this.setDefault}>\n                Set as Default\n            </a>\n        </div>\n    }\n\n    renderNewImageButton() {        \n        if (getUserLevel() < 2)\n            return\n        return <div className=\"d-flex\">\n            <div className=\"ml-auto\">\n                <Link \n                    className=\"btn btn-secondary\" \n                    to={`/show/${this.props.show.id}/new-image`}\n                >New image</Link>               \n            </div>\n        </div>\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loader />\n\n        return <> \n            {this.renderNewImageButton()}\n\n            <div className=\"d-flex flex-wrap\">\n                {this.state.images.length==0?<div className=\"text-center w-100\">No images</div>:''}\n                {this.state.images.map(i => (\n                    <div \n                        key={i.hash} \n                        className=\"mr-3 mb-3\" \n                        style={{width:'170px'}}\n                    >\n                        <a href={i.url+'@.jpg'} target=\"_blank\">\n                        <img \n                            title={this.props.show.title}\n                            alt={this.props.show.title}\n                            src={i.url + '@SX180'}\n                            className=\"img-fluid\" \n                        />\n                        </a>\n                        {this.renderSetDefault(i)}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-9 col-md-10\">\n                </div>\n                <div className=\"col-sm-3 col-md-2\">\n                    <Pagination \n                        jqXHR={this.state.jqXHR} \n                        onPageChange={this.pageChange}\n                    />\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Images","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {request} from 'api'\nimport {locationQuery, getUserLevel} from 'utils'\n\nclass NewImage extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedFile: null,\n        }\n    }\n\n    componentDidMount() {\n        document.title = `New Image | SEPLIS`\n    }\n\n    onUpload = () => {\n        let show = this.props.show \n        request(`/1/shows/${show.id}/images`, {\n            data: {\n                'source_title': 'User upload',\n                'type': 1,\n            },\n        }).done((image) => {\n            let fd = new FormData()\n            fd.append(\n                'file', \n                this.state.selectedFile, \n                this.state.selectedFile.name\n            )\n            request(`/1/shows/${show.id}/images/${image.id}/data`, {\n                data: fd,\n            }).done(() => {\n                location.href = `/show/${show.id}/images`\n            }).fail((e) => {\n                alert(e.responseJSON.message)\n            })\n\n        }).fail((e) => {\n            alert(e.responseJSON.message)\n        })\n    }\n\n    onFileChange = (event) => {\n        this.setState({selectedFile: event.target.files[0]})\n    }\n\n    render() {\n        return <div>            \n            <h3>New Image</h3>\n\n            <div className=\"d-flex\">\n                <div>\n                    <input \n                        type=\"file\" \n                        className=\"form-control\" \n                        onChange={this.onFileChange}\n                    />\n                </div>\n                <div>\n                    <button \n                        className=\"btn btn-primary ml-2\"\n                        onClick={this.onUpload}\n                    >Upload</button>\n                </div>\n            </div>\n        </div> \n    }\n\n}\n\nexport default NewImage ","import React from 'react'\nimport {Route, Link} from 'react-router-dom'\nimport {request} from 'api'\nimport {isAuthed, getUserId} from 'seplis/utils'\n\nimport Loader from 'seplis/components/Loader'\nimport FanButton from 'seplis/components/shows/FanButton'\nimport ShowNav from 'seplis/components/shows/ShowNav'\n\nimport ShowMain from './Main'\nimport ShowSeasons from './Seasons'\nimport ShowStats from './Stats'\nimport ShowInfo from './Info'\nimport ShowEdit from './Edit'\nimport Images from './Images'\nimport NewImage from './NewImage'\n\nimport './Show.scss'\n\nclass Show extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: document.seplis_tv_show,\n        };\n    }\n\n    renderShow() {\n        let show = this.state.show;\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-4 col-sm-4 col-md-4 col-margin d-none d-sm-block\">\n                        <img \n                            src={show.poster_image!=null?show.poster_image.url + '@SX360':''} \n                            width=\"100%\" \n                        />\n                    </div>\n                    <div className=\"col-4 d-sm-none\" />\n\n                    <div className=\"col-12 col-sm-8\">\n                        <div className=\"show-header mb-2\">\n                            <h1 className=\"title\">\n                                {show.title}\n                                &nbsp;\n                                <small className=\"text-muted\">{show.premiered!=null?show.premiered.substring(0,4):''}</small>\n                            </h1>\n                            <div className=\"ml-auto\">\n                                <FanButton showId={show.id} />\n                            </div>\n                        </div>\n\n                        <ShowNav showId={parseInt(this.state.show.id)} />\n                        <Route exact path=\"/show/:showId\" render={(props) => <ShowMain {...props} show={this.state.show} />} />\n                        <Route path=\"/show/:showId/main\" render={(props) => <ShowMain {...props} show={this.state.show} />} />\n                        <Route path=\"/show/:showId/info\" render={(props) => <ShowInfo {...props} show={this.state.show} />} />\n                        <Route path=\"/show/:showId/seasons\" render={(props) => <ShowSeasons {...props} show={this.state.show} />} />\n                        <Route path=\"/show/:showId/images\" render={(props) => <Images {...props} show={this.state.show} />} />\n                        <Route path=\"/show/:showId/new-image\" render={(props) => <NewImage {...props} show={this.state.show} />} />\n                        <Route path=\"/show/:showId/stats\" render={(props) => <ShowStats {...props} show={this.state.show} />} />\n                        <Route path=\"/show/:showId/edit\" render={(props) => <ShowEdit {...props} show={this.state.show} />} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderShowImporting() {\n        setTimeout(() => {\n            location.reload();\n        }, 5000);\n        return (\n            <center>\n                <h1>The show is currently in the import queue</h1>\n                <h2>Check back later!</h2>\n                <Link \n                    className=\"btn btn-warning\" \n                    to={`/show/${this.state.show.id}/edit`}\n                >\n                    Edit show\n                </Link>\n                <Loader />\n            </center>\n        )\n    }\n\n    render() {\n        if (!this.state.show) {\n            return (\n                <Loader />\n            )\n        } \n        else if (\n            (this.state.show.status == 0)\n            && !(this.props.location.pathname.endsWith('/edit'))\n            && (this.state.show.importers.info != null)) {\n            return this.renderShowImporting();\n        }\n        else {\n            return this.renderShow();\n        }\n    }\n}\n\nexport default Show;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport EditFields from 'components/shows/EditFields'\nimport Serialize from 'form-serialize'\nimport {unflatten} from 'flat'\nimport {request} from 'api'\n\nclass New extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.submit.bind(this)\n        this.state = {\n            success: null,\n            error: null,\n            loading: false,\n        }\n    }\n    \n    componentDidMount() {\n        document.title = `New Show | SEPLIS`\n    }\n\n    submit(e) {\n        e.preventDefault()\n        this.setState({\n            success: null,\n            error: null,\n            loading: true,\n        })\n        let data = unflatten(\n            Serialize(e.target, {hash: true})\n        )\n        request('/1/shows', {\n            data: data,\n            method: 'POST',\n        }).done(show => {\n            this.setState({success: show})\n        }).fail(e => {\n            this.setState({error: e.responseJSON})\n        }).always(() => {\n            this.setState({loading: false})\n        })\n    }\n\n    renderError() {\n        if (!this.state.error) return ''\n        switch (this.state.error.code) {\n            case 1403:\n                let title = this.state.error.extra.show.title || 'the show'\n                return (\n                    <div className=\"alert alert-danger\">\n                        {this.state.error.message}.<br />\n                        <a href={`/show/${this.state.error.extra.show.id}`}>\n                            Go to {title}\n                        </a>.\n                    </div>\n                )\n               break\n            default: \n                return (\n                    <div className=\"alert alert-danger\">\n                        {this.state.error.message}\n                    </div>\n                )\n                break\n        }\n    }\n\n    renderSuccess() {\n        return (\n            <span>\n            <h1>Show successfully created</h1>\n            <div className=\"alert alert-success\">\n                The show has been created. It will be imported shortly.\n                <ul>\n                    <li><a href={`/show/${this.state.success.id}`}>Go to the show</a></li>\n                    <li><Link to=\"/show-new\">Create another show</Link></li>\n                </ul>\n            </div>\n            </span>\n        )        \n    }\n\n    render() {\n        if (this.state.success != null)\n            return this.renderSuccess()\n\n        return (\n            <form method=\"post\" onSubmit={this.onSubmit}>\n                <h1>New show</h1>\n                <EditFields />\n                {this.renderError()}\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={this.state.loading}\n                >\n                    {this.state.loading?'Creating...':'Create'}\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default New","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\nimport {Link} from 'react-router-dom'\nimport {episodeNumber} from 'utils'\n\nimport './List.scss'\n\nconst propTypes = {\n    shows: PropTypes.array.isRequired,\n    mobile_xscroll: PropTypes.bool,\n    listMode: PropTypes.string,\n}\n\nconst defaultProps = {\n    mobile_xscroll: false,\n    listMode: 'grid',\n}\n\nclass List extends React.Component {\n\n    renderShow(show) {\n        return <div key={show.id} className=\"col-4 col-sm-4 col-md-3 col-lg-2 col-margin\">\n            <a href={`/show/${show.id}`}>\n                <img \n                    title={show.title}\n                    alt={show.title}\n                    src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                    className=\"img-fluid\"\n                />\n            </a>\n            {this.renderEpisode(show)}\n        </div>\n    }\n\n    renderEpisode(show) {\n        if ('user_watching' in show) {\n            return <div className=\"black-box\">\n                {episodeNumber(show, show.user_watching.episode)}\n            </div>\n        }\n    }\n\n    renderGrid() {\n        let c = ClassNames({\n            row: true,\n            'slider': this.props.mobile_xscroll,\n        })\n        return <div className={c}>\n            {this.props.shows.map(show => (\n                this.renderShow(show)\n            ))}\n        </div>        \n    }\n\n    trClick = (e) => {\n        location.href = `/show/${e.currentTarget.dataset.showid}`\n    }\n\n    renderUserWatching(show) {\n        if ('user_watching' in show) {\n            return <>                \n                <td>{episodeNumber(show, show.user_watching.episode)}</td>\n                <td title={show.user_watching.watched_at}>{show.user_watching.watched_at.substring(0,10)}</td>\n            </>\n        }\n    }\n\n    renderUserWatchingHeader() {\n        if (this.props.shows.length < 1)\n            return null\n        if ('user_watching' in this.props.shows[0]) {\n            return <>\n                <th width=\"150px\" title=\"Latest watched episode\">Episode</th>\n                <th width=\"115px\">Watched at</th>\n            </>\n        }\n    }\n\n    renderListItem(show) {\n        return <tr key={show.id} onClick={this.trClick} data-showid={show.id} className=\"pointer\">\n            <td><a href={`/show/${show.id}`}>{show.title}</a></td>\n            {this.renderUserWatching(show)}\n            <td width=\"115px\">{show.premiered}</td>\n            <td width=\"10px\" className=\"text-right\">{show.user_rating}</td>\n        </tr>\n    }\n\n    renderList() {\n        return <table className=\"table table-striped\">\n            <thead>\n                <tr className=\"thead-dark\">\n                    <th>Title</th>\n                    {this.renderUserWatchingHeader()}\n                    <th>Premiered</th>\n                    <th className=\"text-right\">Rating</th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.props.shows.map(show => (\n                    this.renderListItem(show)\n                ))}\n            </tbody>\n        </table>\n    }\n\n    render() {\n        let lm = this.props.listMode\n        if (!lm) \n            lm = localStorage.getItem('listMode') || 'grid'\n        if (lm == 'grid')\n            return this.renderGrid()\n        else \n            return this.renderList() \n    }\n}\nList.propTypes = propTypes\nList.defaultProps = defaultProps\n\nexport default List","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\n\nconst propTypes = {\n    onModeChange: PropTypes.func,\n}\n\nclass ListMode extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            listMode: localStorage.getItem('listMode') || 'grid',\n        }\n    }\n\n    modeChange = (e) => {\n        e.target.blur()\n        let t = e.currentTarget.dataset.type\n        localStorage.setItem('listMode', t)\n        this.setState({\n            listMode: t,\n        })\n        if (this.props.onModeChange != undefined) \n            this.props.onModeChange(t)\n    }\n\n    renderButton(t) {\n        let btn = ClassNames({\n            btn: true,\n            'btn-info': this.state.listMode == t,\n            'btn-dark': this.state.listMode != t,\n        })\n        let i = ClassNames({\n            fas: true,\n            'fa-th-large': t == 'grid',\n            'fa-bars': t == 'list',\n        })\n        return <button \n            onClick={this.modeChange} \n            className={btn}\n            data-type={t}>\n                <i className={i}></i>\n        </button>\n    }\n\n    render() {\n        return <>\n            {this.renderButton('grid')}\n            {this.renderButton('list')}\n        </>\n    }\n}\nListMode.propTypes = propTypes\n\nexport default ListMode\n\n                        ","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\nimport {request} from 'api'\n\nconst propTypes = {\n    onChange: PropTypes.func,\n    selected: PropTypes.string,\n}\n\nclass SelectGenres extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            genres: [],\n            selectedGenre: props.selected,\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n\n    load() {\n        request(`/1/show-genres`).done((d) => {\n            this.setState({genres:d})\n        })\n    }\n\n    onChange = (e) => {\n        e.target.blur()\n        let t = e.target.value\n        this.setState({\n            selectedGenre: t,\n        })\n        if (this.props.onChange != undefined) \n            this.props.onChange(t)\n    }\n\n    render() {\n        return <select \n            className=\"form-control\" \n            value={this.state.selectedGenre}\n            onChange={this.onChange}\n        >\n            <option value=\"\">Genres</option>\n            {this.state.genres.map((g, i) => (\n                <option key={`genre-${i}`} value={g}>{g}</option>\n            ))}\n        </select>\n    }\n}\nSelectGenres.propTypes = propTypes\n\nexport default SelectGenres\n\n                        ","import React from 'react'\nimport {request} from 'api'\nimport {getUserId} from 'utils'\nimport Loader from 'components/Loader'\nimport Pagination from 'components/Pagination'\nimport ShowList from 'components/shows/List.jsx'\nimport ListMode from 'components/ListMode.jsx'\nimport SelectGenres from 'components/SelectGenres.jsx'\nimport {requireAuthed, locationQuery} from 'utils'\n\nclass Following extends React.Component {\n\n    constructor(props) {\n        super(props)\n        requireAuthed()\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: locationQuery().page || 1,\n            sort: locationQuery().sort || 'followed_at',\n            genre: locationQuery().genre || '',\n        }\n    }    \n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.setState({\n                page: locationQuery().page || 1,\n                sort: locationQuery().sort || 'followed_at',\n            },\n                () => {this.getShows()}\n            )\n        }\n    }\n\n    setBrowserPath() {\n        this.props.history.push(\n            `${this.props.location.pathname}?page=${this.state.page}&sort=${this.state.sort}&genre=${this.state.genre}`\n        )\n    }\n\n    pageChange = (e) => {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getShows()\n        })\n    }\n\n    listModeChange = () => {\n        this.forceUpdate()\n    }\n\n    sortChange = (e) => {\n        this.setState({\n            sort: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getShows()\n        })\n    }\n\n    genreChange = (genre) => {\n        this.setState({\n            genre: genre,\n            page: 1,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getShows()\n        })\n    }\n\n    componentDidMount() {\n        document.title = `Following | SEPLIS`\n        this.getShows()\n    }\n\n    getShows() {\n        let userId = getUserId()\n        this.setState({loading: true})\n        request(`/1/users/${userId}/fan-of`, {\n            query: {\n                page: this.state.page,\n                per_page: 60,\n                expand: 'user_rating',\n                sort: this.state.sort,\n                genre: this.state.genre,\n            }\n        }).done((shows, textStatus, jqXHR) => {\n            this.setState({\n                shows: shows,\n                loading: false,\n                jqXHR: jqXHR,\n                totalCount: jqXHR.getResponseHeader('X-Total-Count'),\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return <>\n                <h2>Following {this.state.totalCount} shows</h2>\n                <Loader />\n            </>\n        return <>\n            <div className=\"d-md-flex mb-2\">\n                <div>\n                    <h2 className=\"mb-2\">\n                        Following {this.state.totalCount} shows\n                    </h2>\n                </div>\n                <div className=\"ml-auto d-md-flex\">\n                    <div className=\"mr-2 mb-2\">\n                        <ListMode onModeChange={this.listModeChange} />\n                    </div>\n                    <div className=\"d-flex\">\n                        <div className=\"mr-2 mb-2\">\n                            <SelectGenres onChange={this.genreChange} selected={this.state.genre} />\n                        </div>\n                        <div className=\"mr-2 mb-2\">\n                            <select \n                                className=\"form-control\" \n                                onChange={this.sortChange} \n                                value={this.state.sort}\n                            >\n                                <option value=\"followed_at\">Sort: Followed at</option>\n                                <option value=\"user_rating\">Sort: Rating</option>\n                            </select>\n                        </div>\n                        <div className=\"d-sm-block d-none\">\n                            <Pagination \n                                jqXHR={this.state.jqXHR} \n                                onPageChange={this.pageChange}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ShowList listMode=\"\" shows={this.state.shows} />\n            <div className=\"d-flex\">\n                <div className=\"ml-auto\">\n                    <Pagination \n                        jqXHR={this.state.jqXHR} \n                        onPageChange={this.pageChange}\n                    />\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Following","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {getUserId, episodeNumber} from 'utils'\nimport {request} from 'api'\n\nimport './List.scss'\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass RecentlyAired extends React.Component {\n\n    constructor(props) {\n        super()\n        this.state = {\n            items: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData()\n        } else {\n            this.setState({items: this.props.items})\n        }\n    }\n\n    getData() {\n        getRecentlyAired(this.props.perPage, this.props.page).then((data) => {\n            this.setState({items: data.items})\n        })\n    }\n\n    renderItem(item) {\n        let show = item.show\n        let episode = item.episode\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.items.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    No recently aired episodes from shows you're following.\n                </div>\n            )\n        return (\n            <div className=\"row\">\n                {this.state.items.map(item => (\n                    this.renderItem(item)\n                ))}\n            </div>\n        )\n    }\n}\nRecentlyAired.propTypes = propTypes\nRecentlyAired.defaultProps = defaultProps\n\nexport default RecentlyAired\n\nexport function getRecentlyAired(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-recently-aired`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR})\n        }).fail((e) => {\n            reject(e)\n        })\n    })\n}","import React from 'react';\nimport {request} from 'api';\nimport Loader from 'components/Loader';\nimport Pagination from 'components/Pagination';\nimport ShowsRecentlyAired from 'components/shows/RecentlyAired.jsx';\nimport {getRecentlyAired} from 'components/shows/RecentlyAired.jsx';\nimport {requireAuthed, locationQuery} from 'utils';\n\nclass RecentlyAired extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.onPageChange = this.pageChange.bind(this);\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: locationQuery().page || 1,\n        }\n    }    \n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.setState({\n                page: locationQuery().page || 1,\n                loading: true,\n            },() => {\n                this.getItems()\n            })\n        }\n    }\n\n    setBrowserPath() {\n        this.props.history.push(`${this.props.location.pathname}?page=${this.state.page}`)\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath();\n            this.getItems();\n        });\n    }\n\n    componentDidMount() {\n        document.title = `Recently Aired | SEPLIS`\n        this.getItems();\n    }\n\n    getItems() {\n        getRecentlyAired(60, this.state.page).then((data) => {\n            this.setState({\n                items: data.items,\n                jqXHR: data.jqXHR,\n                loading: false,\n            })\n        });\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2>Recently aired</h2>\n                    <Loader />\n                </span>\n            );\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">\n                        <h2>Recently aired</h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2 col-margin\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <ShowsRecentlyAired items={this.state.items} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default RecentlyAired;","import React from 'react'\nimport Loader from 'components/Loader'\nimport Pagination from 'components/Pagination'\nimport ShowList from 'components/shows/List.jsx'\nimport ListMode from 'components/ListMode.jsx'\nimport SelectGenres from 'components/SelectGenres.jsx'\nimport {request} from 'api'\nimport {requireAuthed, locationQuery, getUserId} from 'utils'\n\nclass ShowsWatched extends React.Component {\n\n    constructor(props) {\n        super(props)\n        requireAuthed()\n        this.state = {\n            loading: true,\n            shows: [],\n            jqXHR: null,\n            page: locationQuery().page || 1,\n            totalCount: '...',\n            page: locationQuery().page || 1,\n            sort: locationQuery().sort || 'watched_at',\n            genre: locationQuery().genre || '',\n        }\n    }    \n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.setState({\n                page: locationQuery().page || 1,\n                loading: true,\n            },() => {\n                this.getShows()\n            })\n        }\n    }\n\n    setBrowserPath() {\n        this.props.history.push(\n            `${this.props.location.pathname}?page=${this.state.page}&sort=${this.state.sort}&genre=${this.state.genre}`\n        )\n    }\n\n    pageChange = (e) => {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getShows()\n        })\n    }\n\n    listModeChange = () => {\n        this.forceUpdate()\n    }\n\n    sortChange = (e) => {\n        this.setState({\n            sort: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getShows()\n        })\n    }\n\n    genreChange = (genre) => {\n        this.setState({\n            genre: genre,\n            page: 1,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getShows()\n        })\n    }\n\n    componentDidMount() {\n        document.title = `Shows Watched | SEPLIS`\n        this.getShows()\n    }\n\n    getShows() {\n        let userId = getUserId()\n        this.setState({loading: true})\n        request(`/1/users/${userId}/shows-watched`, {\n            query: {\n                page: this.state.page,\n                per_page: 60,\n                expand: 'user_rating',\n                sort: this.state.sort,\n                genre: this.state.genre,\n            }\n        }).done((shows, textStatus, jqXHR) => {\n            this.setState({\n                shows: shows,\n                loading: false,\n                jqXHR: jqXHR,\n                totalCount: jqXHR.getResponseHeader('X-Total-Count'),\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2>Watched {this.state.totalCount} shows</h2>\n                    <Loader />\n                </span>\n            )\n        return <>\n            <div className=\"d-md-flex mb-2\">\n                <div>                        \n                    <h2 className=\"mb-2\">Watched {this.state.totalCount} shows</h2>\n                </div>\n                <div className=\"ml-auto d-md-flex\">\n                    <div className=\"mr-2 mb-2\">\n                        <ListMode onModeChange={this.listModeChange} />\n                    </div>\n                    <div className=\"d-flex\">\n                        <div className=\"mr-2 mb-2\">\n                            <SelectGenres onChange={this.genreChange} selected={this.state.genre} />\n                        </div>\n                        <div className=\"mr-2 mb-2\">\n                            <select \n                                className=\"form-control\" \n                                onChange={this.sortChange} \n                                value={this.state.sort}\n                            >\n                                <option value=\"watched_at\">Sort: Watched at</option>\n                                <option value=\"user_rating\">Sort: Rating</option>\n                            </select>\n                        </div>\n                        <div className=\"d-sm-block d-none\">\n                            <Pagination \n                                jqXHR={this.state.jqXHR} \n                                onPageChange={this.pageChange}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ShowList listMode=\"\" shows={this.state.shows} />\n            <div className=\"d-flex\">\n                <div className=\"ml-auto\">\n                    <Pagination \n                        jqXHR={this.state.jqXHR} \n                        onPageChange={this.pageChange}\n                    />\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default ShowsWatched","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {getUserId, dateInDays, episodeNumber} from 'utils'\nimport {request} from 'api'\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass Countdown extends React.Component {\n\n    constructor(props) {\n        super()\n        this.state = {\n            items: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData()\n        } else {\n            this.setState({items: this.props.items})\n        }\n    }\n\n    getData() {\n        getCountdown(this.props.perPage, this.props.page).then((data) => {\n            this.setState({items: data.items})\n        })\n    }\n\n    renderShow(show, episode) {\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <div className=\"black-box\">In {dateInDays(episode.air_datetime)}</div>\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.items.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    None of the shows you follow have episodes airing! :(\n                </div>\n            )\n        return (\n            <div className=\"row\">\n                {this.state.items.map(item => (\n                    this.renderShow(item.show, item.episode)\n                ))}\n            </div>\n        )\n    }\n}\nCountdown.propTypes = propTypes\nCountdown.defaultProps = defaultProps\n\nexport default Countdown\n\nexport function getCountdown(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-countdown`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR})\n        }).fail((e) => {\n            reject(e)\n        })\n    })\n}","import React from 'react'\nimport {request} from 'api'\nimport Loader from 'components/Loader'\nimport Pagination from 'components/Pagination'\nimport ShowsRecentlyAired from 'components/shows/Countdown.jsx'\nimport {getCountdown} from 'components/shows/Countdown.jsx'\nimport {requireAuthed, locationQuery} from 'utils'\n\nclass Countdown extends React.Component {\n\n    constructor(props) {\n        super(props)\n        requireAuthed()\n        this.onPageChange = this.pageChange.bind(this)\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: locationQuery().page || 1,\n        }\n    }    \n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.setState({\n                page: locationQuery().page || 1,\n                loading: true,\n            },() => {\n                this.getItems()\n            })\n        }\n    }\n\n    setBrowserPath() {\n        this.props.history.push(`${this.props.location.pathname}?page=${this.state.page}`)\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getItems()\n        })\n    }\n\n    componentDidMount() {\n        document.title = `Countdown | SEPLIS`\n        this.getItems()\n    }\n\n    getItems() {\n        getCountdown(60, this.state.page).then((data) => {\n            this.setState({\n                items: data.items,\n                jqXHR: data.jqXHR,\n                loading: false,\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2>Countdown</h2>\n                    <Loader />\n                </span>\n            )\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">\n                        <h2>Countdown</h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2 col-margin\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <ShowsRecentlyAired items={this.state.items} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default Countdown","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {getUserId, episodeNumber} from 'utils'\nimport {request} from 'api'\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass EpisodesToWatch extends React.Component {\n\n    constructor(props) {\n        super()\n        this.state = {\n            items: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData()\n        } else {\n            this.setState({items: this.props.items})\n        }\n    }\n\n    getData() {\n        getEpisodesToWatch(this.props.perPage, this.props.page).then((data) => {\n            this.setState({items: data.items})\n        })\n    }\n\n    renderItem(item) {\n        let show = item.show\n        let episode = item.episode\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.items.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    You have zero episodes to watch! :(\n                </div>\n            )\n        return (\n            <div className=\"row\">\n                {this.state.items.map(item => (\n                    this.renderItem(item)\n                ))}\n            </div>\n        )\n    }\n}\nEpisodesToWatch.propTypes = propTypes\nEpisodesToWatch.defaultProps = defaultProps\n\nexport default EpisodesToWatch\n\nexport function getEpisodesToWatch(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-etw`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR})\n        }).fail((e) => {\n            reject(e)\n        })\n    })\n}","import React from 'react'\nimport {request} from 'api'\nimport Loader from 'components/Loader'\nimport Pagination from 'components/Pagination'\nimport EpisodesToWatchList from 'components/shows/EpisodesToWatch.jsx'\nimport {getEpisodesToWatch} from 'components/shows/EpisodesToWatch.jsx'\nimport {requireAuthed, locationQuery} from 'utils'\n\nclass EpisodesToWatch extends React.Component {\n\n    constructor(props) {\n        super(props)\n        requireAuthed()\n        this.onPageChange = this.pageChange.bind(this)\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: locationQuery().page || 1,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.setState({\n                page: locationQuery().page || 1,\n                loading: true,\n            },() => {\n                this.getItems()\n            })\n        }\n    }\n\n    setBrowserPath() {\n        this.props.history.push(`${this.props.location.pathname}?page=${this.state.page}`)\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath()\n            this.getItems()\n        })\n    }\n\n    componentDidMount() {\n        document.title = `Episodes to Watch | SEPLIS`\n        this.getItems()\n    }\n\n    getItems() {\n        getEpisodesToWatch(60, this.state.page).then((data) => {\n            this.setState({\n                items: data.items,\n                jqXHR: data.jqXHR,\n                loading: false,\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2>Episodes to Watch</h2>\n                    <Loader />\n                </span>\n            )\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">\n                        <h2>Episodes to Watch</h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <EpisodesToWatchList items={this.state.items} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default EpisodesToWatch","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {getUserId, episodeNumber} from 'utils'\nimport {request} from 'api'\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass Watched extends React.Component {\n\n    constructor(props) {\n        super()\n        this.state = {\n            shows: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData()\n        } else {\n            this.setState({shows: this.props.items})\n        }\n    }\n\n    getData() {\n        getWatched(this.props.perPage, this.props.page).then((data) => {\n            this.setState({shows: data.items})\n        })\n    }\n\n    renderShow(show, episode) {\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.shows.length == 0) \n            return (\n                <div className=\"alert alert-info\">\n                    You have not watched any shows yet!\n                </div>\n            )\n        return (\n            <div className=\"row\">\n                {this.state.shows.map(item => (\n                    this.renderShow(item, item.user_watching.episode)\n                ))}\n            </div>\n        )\n    }\n}\nWatched.propTypes = propTypes\nWatched.defaultProps = defaultProps\n\nexport default Watched\n\nexport function getWatched(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-watched`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR})\n        }).fail((e) => {\n            reject(e)\n        })\n    })\n}","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport Loader from 'seplis/components/Loader';\nimport ShowsWatched, {getWatched} from 'components/shows/Watched';\nimport ShowsCountdown, {getCountdown} from 'components/shows/Countdown';\nimport ShowsRecentlyAired, {getRecentlyAired} from 'components/shows/RecentlyAired';\nimport ShowsEpisodesToWatch, {getEpisodesToWatch} from 'components/shows/EpisodesToWatch';\nimport {requireAuthed} from 'utils';\n\nclass Main extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.visChange = this.visibilitychange.bind(this);\n        document.addEventListener('visibilitychange', this.visChange);\n        this.state = {\n            key: 0,\n            loading: true,\n            failed: false,\n        }\n    }\n    \n    componentDidMount() {\n        document.title = `SEPLIS`\n        this.getData();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('visibilitychange', this.visChange);\n    }\n\n    getData() {\n        this.setState({\n            loading: true,\n            failed: false,\n        });\n        Promise.all([\n            getWatched(6, 1),\n            getCountdown(6, 1),\n            getRecentlyAired(6, 1),\n            getEpisodesToWatch(6, 1),\n        ]).then((result) => {\n            this.setState({\n                'loading': false,\n                'failed': false,\n                'watched': result[0].items,\n                'countdown': result[1].items,\n                'recentlyWatched': result[2].items,\n                'episodesToWatch': result[3].items,\n            })\n        }).catch(() => {\n            this.setState({\n                loading: false,\n                failed: true,\n                key: this.state.key + 1,\n            })\n        });\n    }\n\n    visibilitychange() {\n        if (document.hidden) return;\n        this.getData();\n    }\n\n    render() {\n        if (this.state.failed)\n            return (\n                <div className=\"alert alert-warning\">\n                    Failed to load, try refreshing.\n                </div>\n            )\n        if (this.state.loading)\n            return <Loader />;\n        return (\n            <span>\n            <h2 className=\"header header-border\">\n                <Link to=\"/shows-watched\">Recently watched</Link>\n            </h2>    \n            <div className=\"slider mb-2\">\n                <ShowsWatched key={`sw-${this.state.key}`} items={this.state.watched} />\n            </div>\n\n            <h2 className=\"header header-border\">\n                <Link to=\"/recently-aired\">Recently Aired</Link>\n            </h2>\n            <div className=\"slider mb-2\">\n                <ShowsRecentlyAired key={`sra-${this.state.key}`} items={this.state.recentlyWatched} />\n            </div>\n\n            <h2 className=\"header header-border\">\n                <Link to=\"/countdown\">Countdown</Link>\n            </h2>\n            <div className=\"slider mb-2\">\n                <ShowsCountdown key={`sc-${this.state.key}`} items={this.state.countdown} />\n            </div>            \n\n            <h2 className=\"header header-border\">\n                <Link to=\"/episodes-to-watch\">Episodes To Watch</Link>\n            </h2>\n            <div className=\"slider mb-2\">\n                <ShowsEpisodesToWatch key={`etw-${this.state.key}`} items={this.state.episodesToWatch} />\n            </div>\n            </span>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport {request} from 'api';\nimport {getUserId} from 'utils';\nimport Loader from 'components/Loader';\nimport ShowList from 'components/shows/List';\n\nconst oneDay = 24*60*60*1000;\nconst weekdays = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n];\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            loading: true,\n            data: [],\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        request(`/1/users/${getUserId()}/air-dates`)\n            .done((data) => {\n                this.setState({\n                    loading: false,\n                    data: data,\n                });\n            });\n    }\n\n    renderWeekday(date) {\n        let d = new Date(date);\n        return weekdays[d.getDay()];\n    }\n\n    renderHeaderDate(date) {\n        let d1 = Date.parse(date);\n        let d2 = Date.now();\n        let days = Math.round(\n            Math.ceil(\n                (d1 - d2) / oneDay\n            )\n        );\n        switch (days) {\n            case -1:\n                return (<span>Yesterday <small className=\"text-muted\">{this.renderWeekday(date)}</small></span>);\n                break;\n            case 0:\n                return (<span>Today <small className=\"text-muted\">{this.renderWeekday(date)}</small></span>);;\n                break;\n            case 1: \n                return (<span>Tomorrow <small className=\"text-muted\">{this.renderWeekday(date)}</small></span>);;\n                break;\n            default:\n                return this.renderWeekday(date);\n                break;\n        }\n    }\n\n    renderMain() {\n        if (this.state.data.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    <h1>There's nothing to watch this week!</h1>\n                    But, how can this be?<br />\n                    Well, you're properly not following of any shows that has \n                    episodes airing this week.\n                </div>\n            );\n        else\n            return (\n                <span>\n                    {this.state.data.map(a => (\n                    <span key={a.air_date}>\n                        <h3 className=\"header header-border\" title={a.air_date}>\n                            {this.renderHeaderDate(a.air_date)}\n                        </h3>\n                        <ShowList \n                            shows={a.shows} \n                        />\n                    </span>\n                    ))}\n                </span>\n            );\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loader />;\n        return this.renderMain();\n    }\n}\n\nexport default Main;","import React from 'react';\nimport ShowsAirDates from 'components/shows/AirDates';\nimport {requireAuthed} from 'utils';\n\nclass AirDates extends React.Component {    \n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n    }\n\n    componentDidMount() {\n        document.title = `Air Dates | SEPLIS`\n    }\n\n    render() {\n        return (\n            <ShowsAirDates />\n        )\n    }\n}\n\nexport default AirDates;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {requireAuthed} from 'utils';\n\nclass Account extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n    }\n\n    componentDidMount() {\n        document.title = `Account Settings | SEPLIS`\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1>Account</h1>\n                </div>\n                <div className=\"col-12\">\n                    <Link to=\"/password\">Change password</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Account;","import React from 'react';\nimport {requireAuthed} from 'utils';\nimport {request} from 'api';\n\n\nclass Password extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.state = {\n            error: null,\n            success: null,\n            loading: false,\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = `Change Password | SEPLIS`\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({error:null, success: null, loading: true});\n        request('/1/users/current/change-password', {\n            data: {\n                'password': this.password.value,\n                'new_password': this.newPassword.value,\n            }\n        }).fail(e => {\n            this.password.focus();\n            this.setState({error: e.responseJSON, loading: false});\n        }).done(() => {\n            this.setState({success: true, loading: false});\n        }).always(() => {            \n            this.password.value = '';\n            this.newPassword.value = '';\n        });\n    }\n\n    renderError() {\n        if (!this.state.error) return;\n        return (\n            <div className=\"alert alert-warning capitalize-first-letter\">\n                <strong>{this.state.error.message}</strong>\n            </div>\n        )\n    }\n\n    renderFieldError(field) {\n        if ((!this.state.error) || ((!this.state.error.errors))) return;\n        for (let error of this.state.error.errors) {\n            if (error.field == field) {\n                return (\n                    <p className=\"text-danger\">{error.message}</p>\n                )\n            }\n        }\n    }\n\n    renderSuccess() {\n        if (!this.state.success) return;\n        return (\n            <div className=\"alert alert-success\">\n                <strong>Your password was successfully changed.</strong>\n            </div>\n        )\n    }\n\n    renderButton() {\n        if (this.state.loading == false)\n            return (\n                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            );\n        if (this.state.loading == true) \n            return (\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={true}>\n                    Changing your password...\n                </button>\n            );        \n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1 className=\"col-margin\">Change password</h1>\n                </div>\n                <div className=\"col-12 col-sm-8 col-md-6\">\n                    {this.renderSuccess()}\n                    {this.renderError()}\n                    <form method=\"post\" onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Current password</label>\n                            {this.renderFieldError('password')}\n                            <input \n                                ref={(ref) => (this.password = ref)}\n                                type=\"password\"\n                                name=\"password\"\n                                className=\"form-control dark-form-control\" \n                            />\n                        </div>                        \n                        <div className=\"form-group\">\n                            <label>New password</label>\n                            {this.renderFieldError('new_password')}\n                            <input \n                                ref={(ref) => (this.newPassword = ref)}\n                                type=\"password\"\n                                name=\"new_password\"\n                                className=\"form-control dark-form-control\"\n                            />\n                        </div>\n                        {this.renderButton()}\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Password;","import React from 'react'\nimport Loader from 'components/Loader'\nimport {Link} from \"react-router-dom\"\nimport {requireAuthed} from 'utils'\nimport {request} from 'api'\n\nclass PlayServers extends React.Component {\n\n    constructor(props) {\n        super(props)\n        requireAuthed()\n        this.state = {\n            loading: true,\n            playServers: [],\n        }\n    }\n\n    componentDidMount() {\n        document.title = `Play Servers | SEPLIS`\n        this.getPlayServers()\n    }\n\n    getPlayServers() {\n        this.setState({loading: true})\n        request(`/1/play-servers`, {\n            body: {\n                per_page: 100,\n            }\n        }).done(data => {\n            this.setState({playServers: data, loading: false})\n        })\n    }\n\n    renderPlayServers() {\n        if (this.state.playServers.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    You have no play servers.\n                </div>\n            )\n        return (\n            <table className=\"table\">\n            <tbody>\n            {this.state.playServers.map(s => (\n                <tr key={s.id}>\n                    <td>{s.name}</td>\n                    <td>{s.url}</td>\n                    <td width=\"10px\">\n                        <Link to={`/play-server/${s.id}`}>\n                            <i className=\"fas fa-pen-square\"></i>\n                        </Link>\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n            </table>\n        )\n    }\n\n    render2() {\n        if (this.state.loading)\n            return <Loader />\n        return (\n            <div className=\"col-12 col-sm-7 col-md-5\">\n                <Link \n                    to=\"/new-play-server\"\n                    className=\"btn btn-success col-margin\"\n                >\n                    New play server\n                </Link>\n                {this.renderPlayServers()}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1 className=\"col-margin\">Play servers</h1>\n                </div>\n                {this.render2()}\n            </div>\n        )\n    }\n}\n\nexport default PlayServers","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {withRouter, Redirect} from 'react-router'\nimport Loader from 'components/Loader'\nimport {requireAuthed, locationQuery} from 'utils'\nimport {request} from 'api'\n\nconst propTypes = {\n    location: PropTypes.object.isRequired,\n}\n\nclass PlayServer extends React.Component {\n\n    constructor(props) {\n        super(props)\n        requireAuthed()\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onDelete = this.onDelete.bind(this)\n        this.onGiveAccess = this.onGiveAccess.bind(this)\n        this.onRemoveUserAccess = this.onRemoveUserAccess.bind(this)\n        this.state = {\n            loading: 0,\n            error: null,\n            success: false,\n            playServer: {\n                name: '',\n                url: '',\n                secret: '',\n            },\n            users: [],\n            redirect: null,\n        }\n    }\n\n    componentDidMount() {\n        document.title = `Play Server | SEPLIS`\n        if (this.props.match.params.serverId) {\n            this.getPlayServer()\n            this.getUsersWithAccess()\n        }\n    }\n\n    incLoading(val) {\n        this.setState((state) => {\n            return {loading: state.loading + val}\n        })\n    }\n\n    getPlayServer() {\n        this.incLoading(1)\n        request(\n            `/1/play-servers/${this.props.match.params.serverId}`\n        ).fail(e => {\n            // TODO: display the error...\n        }).done(data => {\n            this.setState({playServer: data})\n            document.title = `Play Server: ${data.name} | SEPLIS`\n        }).always(() => {\n            this.incLoading(-1)\n        })\n    }\n\n    getUsersWithAccess() {\n        this.incLoading(1)\n        request(\n            `/1/play-servers/${this.props.match.params.serverId}/users`\n        ).fail(e => {\n            // TODO: display the error...\n        }).done(data => {\n            this.setState({users: data})\n        }).always(() => {\n            this.incLoading(-1)\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        let url = `/1/play-servers`\n        if (this.props.match.params.serverId) {\n            url += `/${this.props.match.params.serverId}`\n        }\n        request(url, {\n            method: this.props.match.params.serverId?'PUT':'POST',\n            data: {\n                name: this.name.value,\n                url: this.url.value,\n                secret: this.secret.value,\n            }\n        }).fail(e => {\n            this.setState({error: e.responseJSON})\n        }).done(data => {\n            this.setState({playServer: data, error: null})\n            this.props.history.push(`/play-server/${data.id}`)\n        })\n    }\n\n    onDelete(e) {\n        e.preventDefault()\n        if (!confirm('Are you sure you wan\\'t to delete this play server?'))\n            return\n        request(`/1/play-servers/${this.props.match.params.serverId}`, {\n            method: 'DELETE',\n        }).fail(e => {\n            this.setState({error: e.responseJSON})\n        }).done(() => {\n            this.props.history.push('/play-servers')\n        })\n    }\n\n    onGiveAccess(e) {\n        e.preventDefault()\n        var value = e.target.name.value\n        request('/1/users', {\n            query: {\n                username: value,\n            }\n        }).fail(e => {\n            alert(e.message)\n        }).done(data => {\n            if (data.length != 1) {\n                alert(`Unknown user: ${value}`)\n                return\n            }\n            let id = this.props.match.params.serverId\n            request(`/1/play-servers/${id}/users/${data[0].id}`, {\n               method: 'PUT',\n            }).fail(e => {\n                alert(e.message)\n            }).done(() => {\n                this.getUsersWithAccess()\n            })\n        })\n    }\n\n    onRemoveUserAccess(e) {\n        e.preventDefault()\n        let id = this.props.match.params.serverId\n        request(`/1/play-servers/${id}/users/${e.target.userId.value}`, {\n           method: 'DELETE',\n        }).fail(e => {\n            alert(e.message)\n        }).done(() => {\n            this.getUsersWithAccess()\n        })\n    }\n\n    renderUsers() {\n        if (this.state.users.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    No one has access to this play server. \n                </div>\n            )\n        return (\n            <table className=\"table table-sm\">\n                <tbody>\n                    {this.state.users.map(u => (\n                        <tr key={u.id}>\n                            <td style={{verticalAlign: 'middle'}}>{u.name}</td>\n                            <td width=\"10px\" className=\"text-xs-right\">\n                                <form onSubmit={this.onRemoveUserAccess}>\n                                    <input \n                                        type=\"hidden\"\n                                        name=\"userId\"\n                                        value={u.id}\n                                    />\n                                    <button type=\"submit\" className=\"btn btn-danger\" title=\"Delete user\">\n                                        <i className=\"fas fa-times\"></i>\n                                    </button>\n                                </form>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        )\n    }\n\n    renderGiveAccessForm() {\n        return (\n            <form className=\"col-margin row\" onSubmit={this.onGiveAccess}>\n                <div className=\"col-6\">\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control dark-form-control\" \n                    placeholder=\"Username\"\n                />\n                </div>\n                <div className=\"col-4\">\n                <button className=\"btn btn-success\">\n                    Give access\n                </button>\n                </div>\n            </form>\n        )\n    }\n\n    renderUsersWithAccess() {\n        if (!this.props.match.params.serverId) return\n        return (\n            <span>\n                <h2 className=\"col-margin\">Users with access</h2>\n                {this.renderGiveAccessForm()}\n                {this.renderUsers()}\n            </span>\n        )\n    }\n\n    renderDeleteButton() {\n        if (!this.props.match.params.serverId) return\n        return (\n            <button className=\"btn btn-danger\" onClick={this.onDelete}>\n                Delete\n            </button>\n        )\n    }\n\n    renderError() {\n        if (!this.state.error) return\n        return (\n            <div className=\"alert alert-warning capitalize-first-letter col-margin\">\n                <strong>{this.state.error.message}</strong>\n            </div>\n        )\n    }\n\n    renderFieldError(field) {\n        if ((!this.state.error) || ((!this.state.error.errors))) return\n        for (let error of this.state.error.errors) {\n            if (error.field == field) {\n                return (\n                    <p className=\"text-danger\">{error.message}</p>\n                )\n            }\n        }\n    }\n\n    render2() {\n        if (this.state.loading > 0)\n            return <Loader />\n        return (\n            <div className=\"col-12 col-sm-8 col-md-6\">\n                {this.renderError()}\n                <form \n                    method=\"post\" \n                    className=\"col-margin\" \n                    onSubmit={this.onSubmit}\n                >\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        {this.renderFieldError('name')}\n                        <input\n                            ref={(ref) => (this.name = ref)}\n                            type=\"text\"\n                            className=\"form-control dark-form-control\"\n                            defaultValue={this.state.playServer.name}\n                            placeholder=\"My play server\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>URL</label>\n                        {this.renderFieldError('url')}\n                        <input\n                            ref={(ref) => (this.url = ref)}\n                            type=\"text\"\n                            className=\"form-control dark-form-control\"\n                            defaultValue={this.state.playServer.url}\n                            placeholder=\"https://example.net\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Secret</label>\n                        {this.renderFieldError('secret')}\n                        <input\n                            ref={(ref) => (this.secret = ref)}\n                            type=\"text\"\n                            className=\"form-control dark-form-control\"\n                            defaultValue={this.state.playServer.secret}\n                            placeholder=\"A super long secret\"\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary m-r-1\">\n                        Save\n                    </button> \n                    {this.renderDeleteButton()}\n                </form>\n\n                {this.renderUsersWithAccess()}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1 className=\"col-margin\">Play server</h1>\n                </div>\n                {this.render2()}\n            </div>\n        )\n    }\n}\nPlayServer.propTypes = propTypes\n\nexport default PlayServer","import React from 'react';\nimport Loader from 'components/Loader';\nimport {requireAuthed, getUserId, secondsToPretty} from 'utils';\nimport {request} from 'api';\n\nclass UserShowsStats extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.state = {\n            loading: true,\n            stats: null,\n        }\n    }\n\n    componentDidMount() {\n        document.title = `User Stats | SEPLIS`\n        this.getStats();\n    }\n\n    getStats() {\n        let userId = getUserId();\n        request(`/1/users/${userId}/show-stats`).done((stats) => {\n            this.setState({\n                loading: false,\n                stats: stats,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return (\n                <span>\n                    <Loader />\n                    <center><h2>Loading your stats</h2></center>\n                </span>\n            );\n        return (\n            <span>\n            <h2>Your TV show stats</h2>\n            <table className=\"table table-striped\">\n                <tbody>\n                <tr><th width=\"220px\">Following</th>\n                    <td>{this.state.stats.fan_of} shows</td></tr>\n                <tr><th>Time spent watching</th>\n                    <td>{secondsToPretty(this.state.stats.episodes_watched_minutes*60, true)}</td></tr>\n                <tr><th>Episodes watched</th>\n                    <td>{this.state.stats.episodes_watched}</td></tr>\n                <tr><th>Watched episodes from</th>\n                    <td>{this.state.stats.shows_watched} shows</td></tr>\n                <tr><th>Shows finished</th>\n                    <td>{this.state.stats.shows_finished}</td></tr>\n                </tbody>\n            </table>\n            </span>\n        )\n    }\n}\n\nexport default UserShowsStats;","import React from 'react'\nimport {Route} from 'react-router-dom'\n\nimport Navbar from '../components/Navbar'\nimport Show from './show/Show'\nimport ShowNew from './show/New'\nimport Following from './Following'\nimport RecentlyAired from './RecentlyAired'\nimport ShowsWatched from './ShowsWatched'\nimport Countdown from './Countdown'\nimport EpisodesToWatch from './EpisodesToWatch'\nimport Main from './Main'\nimport AirDates from './AirDates'\nimport Account from './Account'\nimport Password from './Password'\nimport PlayServers from './PlayServers'\nimport PlayServer from './PlayServer'\nimport UserShowsStats from './UserShowsStats'\n\n\nclass Index extends React.Component {\n\n    render() {\n        return <>\n            <Navbar />\n            <div className=\"container\">\n                <Route path=\"/show/:showId\" component={Show} />\n                <Route path=\"/show-new\" component={ShowNew} />\n                <Route path=\"/following\" component={Following} />\n                <Route path=\"/recently-aired\" component={RecentlyAired} />\n                <Route path=\"/shows-watched\" component={ShowsWatched} />\n                <Route path=\"/countdown\" component={Countdown} />\n                <Route path=\"/episodes-to-watch\" component={EpisodesToWatch} />\n                <Route path=\"/\" exact component={Main} />\n                <Route path=\"/main\" component={Main} />\n                <Route path=\"/air-dates\" component={AirDates} />\n                <Route path=\"/account\" component={Account} />\n                <Route path=\"/password\" component={Password} />\n                <Route path=\"/play-servers\" component={PlayServers} />\n                <Route path=\"/new-play-server\" component={PlayServer} />\n                <Route path=\"/play-server/:serverId\" component={PlayServer} />\n                <Route path=\"/user-shows-stats\" component={UserShowsStats} />\n            </div>\n        </>\n    }\n}\n\nexport default Index","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {request} from 'api'\n\nimport 'styles/StandardForm.scss'\n\nclass SignIn extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: '',\n            email: '',\n            password: '',\n        }\n        this.onSignIn = this.onSignIn.bind(this)\n        this.onDataChange = this.onDataChange.bind(this)\n    }    \n\n    componentDidMount() {\n        document.title = `Sign In | SEPLIS`\n    }\n\n    onSignIn(e) {\n        e.preventDefault()\n        request('/1/token', {\n            data: {\n                client_id: seplisClientId,\n                grant_type: 'password',\n                email: this.state.email,\n                password: this.state.password,\n            }\n        }).fail(e => {\n            this.setState({\n                error: e.responseJSON.message,\n                password: '',\n            })\n        }).done(data => {\n            localStorage.setItem('access_token', data.access_token)\n            this.saveUserIdAndRedirect()\n        })\n    }\n\n    saveUserIdAndRedirect() {\n        request('/1/users/current').done(user => {\n            localStorage.setItem('user_id', user.id)\n            localStorage.setItem('user_level', user.level)\n            location.href = '/'\n        })\n    }\n\n    onDataChange(e) {\n        this.state[e.target.name] = e.target.value\n        this.setState({error:''})\n    }\n\n    renderForm() {\n        return (\n            <form onSubmit={this.onSignIn}>\n                <div className=\"form-group\">\n                    <input \n                        name=\"email\"\n                        type=\"text\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"Email or username\"\n                        onChange={this.onDataChange}\n                        value={this.state.email}\n                        autoFocus\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"Password\"\n                        onChange={this.onDataChange}\n                        value={this.state.password}\n                        required\n                    />\n                </div>\n                <div className=\"d-flex\">\n                    <Link className=\"btn\" style={{paddingLeft:0}} to=\"/create-user\">Create user</Link>\n                    <button \n                        type=\"submit\" \n                        className=\"btn btn-primary ml-auto\"\n                    >\n                        Sign in\n                    </button>\n                </div>\n                <div>\n                    <Link className=\"btn\" style={{paddingLeft:0, fontSize:'16px'}} to=\"/reset-password\">Reset password</Link>                    \n                </div>\n            </form>\n        )\n    }\n\n    renderError() {\n        if (!this.state.error) return\n        return (\n            <div \n                className=\"alert alert-warning capitalize-first-letter\" \n                role=\"alert\"\n            >\n                <strong>{this.state.error}</strong>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"standard-form\">\n                <div className=\"logo\">SEPLIS</div>\n                <div className=\"title\">Sign in</div>\n                {this.renderError()}\n                {this.renderForm()}\n            </div>            \n        )\n    }\n}\n\nexport default SignIn","import React from 'react';\n\nclass SignOut extends React.Component {\n\n    componentDidMount() {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('accessLevel');\n        location.href = '/sign-in';\n    }\n\n    render() {\n        return null;\n    }\n}\n\nexport default SignOut;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {request} from 'api'\nimport {withRouter} from 'react-router'\n\nimport 'styles/StandardForm.scss'\n\nclass CreateUser extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: null,\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        document.title = `Create User | SEPLIS`\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        this.setState({\n            error: null,\n        })\n        var email = e.target.email.value\n        var password = e.target.password.value\n        request('/1/users', {\n            data: {\n                name: e.target.name.value,\n                email: email,\n                password: password,\n            }\n        }).fail(e => {\n            this.setState({\n                error: e.responseJSON,\n            })\n        }).done(data => {\n            localStorage.setItem('user_id', data.id)\n            localStorage.setItem('user_level', data.level)\n            this.signin(email, password)\n        })\n    }\n\n    signin(email, password) {\n        request('/1/token', {\n            data: {\n                client_id: seplisClientId,\n                grant_type: 'password',\n                email: email,\n                password: password,\n            }\n        }).fail(e => {\n            this.setState({\n                error: e.responseJSON,\n            })\n        }).done(data => {\n            localStorage.setItem('access_token', data.access_token)\n            location.href = '/'\n        })\n    }\n\n    renderForm() {\n        return (\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    {this.renderFieldError('name')}\n                    <input \n                        name=\"name\"\n                        type=\"text\"\n                        className=\"form-control dark-form-control\"\n                        autoFocus\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    {this.renderFieldError('email')}\n                    <input \n                        name=\"email\"\n                        type=\"text\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    {this.renderFieldError('password')}\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"Minimum 6 chars\"\n                        required\n                    />\n                </div>\n                <div className=\"d-flex\">\n                    <Link className=\"btn\" to=\"/sign-in\">Sign in</Link>\n                    <button \n                        type=\"submit\" \n                        className=\"btn btn-primary ml-auto\"\n                    >\n                        Create user\n                    </button>\n                </div>\n            </form>\n        )\n    }\n\n    renderError() {\n        if (!this.state.error) return\n        return (\n            <div className=\"alert alert-warning capitalize-first-letter\">\n                <strong>{this.state.error.message}</strong>\n            </div>\n        )\n    }\n\n    renderFieldError(field) {\n        if ((!this.state.error) || ((!this.state.error.errors))) return\n        for (let error of this.state.error.errors) {\n            if (error.field == field) {\n                return (\n                    <p className=\"text-danger\">{error.message}</p>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"standard-form\">\n                <div className=\"logo\">SEPLIS</div>\n                <div className=\"title\">Create user</div>\n                {this.renderError()}\n                {this.renderForm()}\n            </div>            \n        )\n    }\n}\n\nexport default withRouter(CreateUser)","import React from 'react'\nimport Player, {getPlayServer} from 'seplis/components/player/Player'\nimport Loader from 'seplis/components/Loader'\nimport Chromecast from 'seplis/components/player/Chromecast'\nimport {request} from 'seplis/api'\nimport {pad, episodeTitle, guid, dateInDays} from 'seplis/utils'\n \nclass PlayEpisode extends React.Component {\n \n    constructor(props) {\n        super(props)\n        this.state = {\n            loadingPlayServers: true,\n            loadingShow: true,\n            loadingEpisode: true,\n            loadingNextEpisode: true,\n            loadingLang: true,\n            loadingStartTime: true,\n            playServer: null,\n            playServerError: null,\n            show: null,\n            episode: null,\n            nextEpisode: null,\n            audio_lang: null,\n            subtitle_lang: null,\n            metadata: null,\n            startTime: 0,\n        }        \n        this.onAudioChange = this.audioChange.bind(this)\n        this.onSubtitleChange = this.subtitleChange.bind(this)\n        this.onTimeUpdate = this.timeUpdate.bind(this)\n        this.showId = this.props.match.params.showId\n        this.number = this.props.match.params.number\n        this.session = guid()\n        this.lastPos = 0\n        this.cast = null\n        this.markedAsWatched = false\n    }\n \n    componentDidMount() {\n        this.getShow()\n        this.getEpisode()\n        this.getPlayServers()\n        this.getNextEpisode()\n        this.getLanguage()\n        this.getStartTime()\n    }\n \n    timeUpdate(time) {\n        time = Math.floor(time)\n        if (time == this.lastPos) \n            return\n        this.lastPos = time\n        if (time < 10)\n            return\n        if ((time % 10) != 0) \n            return\n        let duration = parseInt(this.state.metadata['format']['duration'])\n        let watched = (((time / 100) * 10) > (duration-time))\n        if (watched) {\n            if (!this.markedAsWatched) {\n                request(`/1/shows/${this.showId}/episodes/${this.number}/watched`, {\n                    method: 'PUT',\n                }).done(() => {\n                    this.markedAsWatched = true\n                })\n            }\n        } else {\n            this.markedAsWatched = false\n            request(`/1/shows/${this.showId}/episodes/${this.number}/position`, {\n                method: 'PUT',\n                data: {\n                    'position': time,\n                }\n            })\n        }\n    }\n \n    getPlayServers() {\n        let url = `/1/shows/${this.showId}/episodes/${this.number}/play-servers`\n        getPlayServer(url).then((obj) => {\n            this.setState({\n                loadingPlayServers: false,\n                playServer: obj.playServer,\n                metadata: obj.metadata,\n            })\n        }).catch((error) => {\n            this.setState({\n                loadingPlayServers: false,\n                playServerError: error,\n            })\n        })\n    }\n \n    getShow() {\n        request(\n            `/1/shows/${this.showId}`\n        ).done(data => {\n            this.setState({show: data})\n        }).always(() => {\n            this.setState({loadingShow: false})\n        })        \n    }\n \n    getEpisode() {\n        let number = parseInt(this.number)\n        request(\n            `/1/shows/${this.showId}/episodes/${number}`\n        ).done(data => {\n            this.setState({episode: data})\n        }).always(() => {\n            this.setState({loadingEpisode: false})\n        })\n    }    \n \n    getNextEpisode() {\n        let number = parseInt(this.number) + 1\n        request(\n            `/1/shows/${this.showId}/episodes/${number}`\n        ).done(data => {\n            this.setState({nextEpisode: data})\n        }).always(() => {\n            this.setState({loadingNextEpisode: false})\n        })\n    }\n \n    getLanguage() {\n        request(\n            `/1/shows/${this.showId}/user-subtitle-lang`\n        ).done(data => {\n            if (!data)\n                data = {}\n            this.setState({\n                audio_lang: data.audio_lang || null,\n                subtitle_lang: data.subtitle_lang || null,\n            })\n        }).always(() => {\n            this.setState({loadingLang: false})\n        })\n    }\n \n    getStartTime() {\n        request(\n            `/1/shows/${this.showId}/episodes/${this.number}/watched`\n        ).done(data => {\n            if (data) {\n                this.setState({\n                    startTime: data.position,\n                })\n            } else {\n                this.setState({\n                    startTime: 0,\n                })                \n            }\n        }).always(() => {\n            this.setState({loadingStartTime: false})\n        })\n    }\n \n    audioChange(lang) {\n        if (lang == '') \n            lang = null\n        this.saveSub({\n            audio_lang: lang,\n        })\n    } \n \n    subtitleChange(lang) {\n        if (lang == '') \n            lang = null\n        this.saveSub({\n            subtitle_lang: lang,\n        })\n    }\n \n    saveSub(data) {\n        request(`/1/shows/${this.showId}/user-subtitle-lang`, {\n            method: 'PATCH',\n            data: data,\n        })\n    }\n \n    getInfo() {\n        if (!this.state.show) return null\n        return {\n            title: this.state.show.title,\n        }\n    }\n \n    episodeTitle(show, episode) {\n        return episodeTitle(show, episode)\n    }\n \n    getPlayNextInfo() {\n        if (!this.state.show || !this.state.nextEpisode) return null\n        let show = this.state.show\n        let episode = this.state.nextEpisode\n        let title = this.episodeTitle(show, episode)\n        return {\n            title: title,\n            url: `/show/${show.id}/episode/${episode.number}/play`\n        }\n    }\n \n    getBackToInfo() {\n        if (!this.state.show) return null\n        return {\n            title: `Back to: ${this.state.show.title}`,\n            url: `/show/${this.showId}`\n        }\n    }\n \n    getCurrentInfo() {\n        if (!this.state.show || !this.state.episode) return null\n        let show = this.state.show\n        let title = `${show.title} - `\n        title += this.episodeTitle(show, this.state.episode)\n        return {\n            title: title,\n        }\n    }\n  \n    initCast() {\n        this.cast.addEventListener(\n            'isConnected',\n            (e) => {\n                if (!e.value) \n                    return\n                if (!confirm(`Play ${this.getCurrentInfo().title} on ${this.cast.getFriendlyName()}?`))\n                    return\n                request(this.getPlayUrl()+'&action=cancel')\n                this.cast.playEpisode(this.showId, this.number).then(() => {\n                    location.href = `/show/${this.showId}`\n                })\n            },\n        )\n    }\n \n    loadCast() {\n        if (this.cast)\n            return    \n        this.cast = new Chromecast()\n        this.cast.load(this.initCast.bind(this))\n    }    \n \n    getPlayUrl() {\n        return `${this.state.playServer.play_url}/play`+\n            `?play_id=${this.state.playServer.play_id}`+\n            `&session=${this.session}`\n    }\n\n    renderPlayServerErrorMessage() {\n        if (this.state.playServerError.code == 2) {\n            return <span>\n                    <h3>\n                        \"{this.state.show.title} {episodeTitle(this.state.show, this.state.episode)}\" is not on any of your play servers.\n                    </h3>\n                    {this.renderAirs()}\n            </span>\n        }\n        return this.state.playServerError.message\n    }\n\n    renderAirs() {\n        if (!this.state.episode.air_datetime)\n            return\n        let d = new Date(this.state.episode.air_datetime)\n        let now = new Date()\n        if ((now.getTime()-d.getTime()) > 3600*24)\n            return\n        if (now.getTime() < d.getTime()) {\n            return <div className=\"mb-2\">\n                Airs in {dateInDays(this.state.episode.air_datetime)}\n            </div>\n        } else {\n            return <div>\n                Aired {dateInDays(this.state.episode.air_datetime)} ago\n            </div>\n        }\n    }\n\n    renderPlayServerError() {\n        return (\n            <div \n                className=\"alert alert-warning\" \n                style={{width: '75%', margin: 'auto', marginTop: '100px'}}\n            >\n                {this.renderPlayServerErrorMessage()}\n\n                Go back to <a href={`/show/${this.showId}`}>\n                    {this.state.show.title}\n                </a>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.loadingPlayServers || this.state.loadingShow ||\n            this.state.loadingEpisode || this.state.loadingNextEpisode ||\n            this.state.loadingLang || this.state.loadingStartTime)\n            return <Loader />\n        if (this.state.playServerError) {\n            return this.renderPlayServerError()\n        }\n        this.loadCast()\n        return <Player \n            playServerUrl={`${this.state.playServer.play_url}`}\n            playId={this.state.playServer.play_id}\n            metadata={this.state.metadata}\n            info={this.getInfo()}\n            nextInfo={this.getPlayNextInfo()}\n            backToInfo={this.getBackToInfo()}\n            currentInfo={this.getCurrentInfo()}\n            onAudioChange={this.onAudioChange}\n            onSubtitleChange={this.onSubtitleChange}\n            audio_lang={this.state.audio_lang}\n            subtitle_lang={this.state.subtitle_lang}\n            onTimeUpdate={this.onTimeUpdate}\n            startTime={this.state.startTime}\n            session={this.session}\n        />\n    }\n}\nexport default PlayEpisode","import React from 'react'\n\nclass RenderError extends React.Component {\n    render() {\n        let error = this.props.error\n        if (!error)\n            return null\n        if (error.errors)\n            return <div className=\"alert alert-danger capitalize-first-letter\" role=\"alert\">\n                <div className=\"mb-2\"><b>Error:</b> {error.message}</div>\n                {error.errors.map(e => (\n                    <div key={e.field}><b>{e.field}:</b> {e.message}</div>\n                ))}\n            </div>\n        return <div className=\"alert alert-danger capitalize-first-letter\" role=\"alert\">\n            <div><b>Error:</b> {error.message}</div>\n        </div>\n    }\n}\n\nexport default RenderError;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport RenderError from 'components/RenderError'\nimport {request} from 'api'\n\nclass ResetPassword extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: null,\n            success: null,\n            loading: false,\n        }\n        this.submitEmail = this.submitEmail.bind(this)\n        this.submitReset = this.submitReset.bind(this)\n    }\n\n    componentDidMount() {\n        document.title = `Reset Password | SEPLIS`\n    }\n\n    submitEmail(e) {\n        e.preventDefault()\n        this.setState({success: false, loading: true, error: null})\n        request('/1/user-reset-password', {\n            query: {\n                'email': this.email.value,\n            }\n        }).fail(e => {\n            this.setState({error: e.responseJSON, loading: false})\n        }).done(() => {\n            this.setState({success: true, loading: false})\n        })\n    }\n\n    submitReset(e) {\n        e.preventDefault()\n        this.setState({success: false, loading: true, error: null})\n        request('/1/user-reset-password', {\n            data: {\n                'key': this.props.match.params.key,\n                'new_password': this.password.value\n            }\n        }).fail(e => {\n            this.setState({error: e.responseJSON, loading: false})\n        }).done(() => {\n            this.setState({success: true, loading: false})\n        })\n    }\n\n    renderSendSuccess() {\n        if (!this.state.success) return\n        return (\n            <div className=\"alert alert-success\">\n                <strong>A reset link has been sent to your email.</strong>\n            </div>\n        )\n    }\n\n    renderButton() {\n        if (this.state.loading == false)\n            return (\n                <button type=\"submit\" className=\"btn btn-primary ml-auto\">Submit</button>\n            )\n        if (this.state.loading == true) \n            return (\n                <button type=\"submit\" className=\"btn btn-primary ml-auto\" disabled={true}>\n                    Working...\n                </button>\n            )        \n    }\n\n    renderSendForm() {\n        if (this.state.success)\n            return\n        return <form onSubmit={this.submitEmail}>\n            <label>Email</label>\n            <input \n                ref={(ref) => (this.email = ref)}\n                type=\"email\"\n                name=\"email\"\n                className=\"form-control dark-form-control mb-4\"\n                required={true}\n                autoFocus={true}\n            />\n            <div className=\"d-flex\">\n                <Link className=\"btn\" to=\"/sign-in\">Sign in</Link>\n                {this.renderButton()}\n            </div>\n        </form>\n    }\n\n    renderSend() {\n        return <div className=\"standard-form\">\n            <div className=\"logo\">SEPLIS</div>\n            <div className=\"title\">Reset password</div>\n            <RenderError error={this.state.error} />\n            {this.renderSendForm()}\n            {this.renderSendSuccess()}\n        </div>\n    }\n\n    renderResetSuccess() {\n        if (!this.state.success) return\n        return (\n            <div className=\"alert alert-success\">\n                Your password has been changed. Sign in <Link to=\"/sign-in\">here</Link>.\n            </div>\n        )\n    }\n\n    renderResetForm() {\n        if (this.state.success)\n            return\n        return <form onSubmit={this.submitReset}>\n            <label>New password</label>\n            <input \n                ref={(ref) => (this.password = ref)}\n                type=\"password\"\n                name=\"password\"\n                className=\"form-control dark-form-control mb-4\"\n                required={true}\n                autoFocus={true}\n            />\n            <div className=\"d-flex\">\n                {this.renderButton()}\n            </div>\n        </form>\n    }\n\n    renderReset() {\n        return <div className=\"standard-form\">\n            <div className=\"logo\">SEPLIS</div>\n            <div className=\"title\">Reset password</div>\n            <RenderError error={this.state.error} />\n            {this.renderResetForm()}\n            {this.renderResetSuccess()}\n        </div>\n    }\n\n    render() {\n        if (this.props.match.params.key)\n            return this.renderReset()\n        return this.renderSend()\n    }\n\n}\n\nexport default ResetPassword","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\n\nimport Index from './views/'\nimport SignIn from './views/SignIn'\nimport SignOut from './views/SignOut'\nimport CreateUser from './views/CreateUser'\nimport PlayEpisode from './views/show/PlayEpisode'\nimport ResetPassword from './views/ResetPassword'\n\nimport './styles/Base.scss'\nimport './styles/FormBase.scss'\n\nimport {apiClientSettings} from './api.jsx'\nimport Chromecast from 'components/player/Chromecast'\n\nReactDOM.render((\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/sign-in\" component={SignIn} />\n            <Route exact path=\"/sign-out\" component={SignOut} />\n            <Route exact path=\"/create-user\" component={CreateUser} />\n            <Route exact path=\"/reset-password\" component={ResetPassword} />\n            <Route path=\"/reset-password/:key\" component={ResetPassword} />\n            <Route exact path=\"/show/:showId/episode/:number/play\" component={PlayEpisode} />\n            <Route path=\"/\" component={Index} />            \n        </Switch>\n    </BrowserRouter>\n), document.getElementById('root'))"],"sourceRoot":""}