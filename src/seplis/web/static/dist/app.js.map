{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/seplis/web/static/app/api.jsx","webpack://exports/./src/seplis/web/static/app/utils.jsx","webpack://exports/./src/seplis/web/static/app/components/Loader.jsx","webpack://exports/./src/seplis/web/static/app/components/player/Chromecast.jsx","webpack://exports/./src/seplis/web/static/app/components/Pagination.jsx","webpack://exports/./src/seplis/web/static/app/events.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/EpisodeListItem.jsx","webpack://exports/./src/seplis/web/static/app/components/player/Player.jsx","webpack://exports/./src/seplis/web/static/app/components/player/PlayNext.jsx","webpack://exports/./src/seplis/web/static/app/components/player/AudioSubBar.jsx","webpack://exports/./src/seplis/web/static/app/components/player/Slider.jsx","webpack://exports/./src/seplis/web/static/app/components/player/ChromecastIcon.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/EditFields.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/List.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/RecentlyAired.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/Watched.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/Countdown.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/EpisodesToWatch.jsx","webpack://exports/./src/seplis/web/static/app/index.jsx","webpack://exports/./src/seplis/web/static/app/components/player/VolumeBar.jsx","webpack://exports/./src/seplis/web/static/app/Routes.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Show.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/FanButton.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/ShowNav.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Main.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/NextToWatch.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/WatchedButton.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/LatestEpisodesSideBar.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/EpisodeLastWatched.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Seasons.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/SeasonList.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/WatchedProgression.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/SelectSeasonEpisode.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/episodes/SelectSeason.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Stats.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Info.jsx","webpack://exports/./src/seplis/web/static/app/views/show/Edit.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/EditAlternativeTitles.jsx","webpack://exports/./src/seplis/web/static/app/views/show/PlayEpisode.jsx","webpack://exports/./src/seplis/web/static/app/views/show/New.jsx","webpack://exports/./src/seplis/web/static/app/views/SignIn.jsx","webpack://exports/./src/seplis/web/static/app/views/SignOut.jsx","webpack://exports/./src/seplis/web/static/app/views/CreateUser.jsx","webpack://exports/./src/seplis/web/static/app/views/FanOf.jsx","webpack://exports/./src/seplis/web/static/app/views/RecentlyAired.jsx","webpack://exports/./src/seplis/web/static/app/views/ShowsWatched.jsx","webpack://exports/./src/seplis/web/static/app/views/Countdown.jsx","webpack://exports/./src/seplis/web/static/app/views/EpisodesToWatch.jsx","webpack://exports/./src/seplis/web/static/app/views/Main.jsx","webpack://exports/./src/seplis/web/static/app/views/AirDates.jsx","webpack://exports/./src/seplis/web/static/app/components/shows/AirDates.jsx","webpack://exports/./src/seplis/web/static/app/views/Account.jsx","webpack://exports/./src/seplis/web/static/app/views/Password.jsx","webpack://exports/./src/seplis/web/static/app/views/PlayServers.jsx","webpack://exports/./src/seplis/web/static/app/views/PlayServer.jsx","webpack://exports/./src/seplis/web/static/app/views/UserShowsStats.jsx","webpack://exports/./src/seplis/web/static/app/components/Navbar.jsx","webpack://exports/./src/seplis/web/static/app/components/Search.jsx","webpack://exports/./src/seplis/web/static/app/components/player/ChromecastBar.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","request","url","options","arguments","undefined","query","_jquery2","default","param","method","localRequest","JSON","stringify","startsWith","apiClientSettings","baseUrl","indexOf","headers","Accept","access_token","localStorage","getItem","Authorization","ajax","contentType","error","handleError","_jquery","status","responseJSON","code","removeItem","location","href","clientId","isAuthed","requireAuthed","pad","str","max","toString","pluralize","num","word","divmod","a","b","Math","floor","getUserId","getUserLevel","episodeNumber","show","episode","episode_type","number","season","air_date","episodeTitle","title","guid","s4","random","substring","secondsToTime","secs","hours","minutes","seconds","dateInDays","dt","Date","abs","getTime","days","_divmod","_divmod2","_slicedToArray","_divmod3","_divmod4","_divmod5","_divmod6","join","secondsToPretty","showTotalHours","totalHours","round","months","years","_divmod7","_divmod8","_divmod9","_divmod10","_divmod11","_divmod12","_divmod13","_divmod14","_divmod15","_divmod16","h","propTypes","hcenter","_propTypes2","bool","Loader","_react2","Component","cls","_classnames2","loader","loader-hcenter","this","props","createElement","className","defaultProps","_Player","_api","_utils","events","ANY_CHANGED","AVAILABLE","IS_CONNECTED","PLAYER_STATE","CURRENT_TIME","Chromecast","_classCallCheck","loaded","onInit","initialized","initCast","loadCastScript","initList","isAvailable","setTimeout","sessionRequest","chrome","cast","SessionRequest","appId","apiConfig","ApiConfig","sessionListener","receiverListener","AutoJoinPolicy","ORIGIN_SCOPED","initialize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","script","document","src","head","appendChild","requestSession","session","mediaSession","receiver","friendlyName","getEstimatedTime","success","playerState","pause","play","showId","startTime","_this","Promise","resolve","reject","isConnected","console","log","all","getPlayServer","then","position","getSession","sendMessage","metadata","token","type","apiUrl","seplis","playUrl","playServer","play_url","play_id","subtitle_lang","audio_lang","media","LoadRequest","_playEpisodeMediaInfo","loadMedia","mediaListener","e","mediaInfo","MediaInfo","TvShowMediaMetadata","seriesTitle","originalAirdate","metadataType","MetadataType","TV_SHOW","event","func","eventListener","includes","timerGetCurrentTime","setInterval","dispatchEvent","addMediaListener","addUpdateListener","sessionUpdateListener","SessionStatus","CONNECTED","mediaSessionUpdateListener","state","field","_dispatchEvent","forEach","f","jqXHR","isRequired","onPageChange","Pagination","_possibleConstructorReturn","__proto__","getPrototypeOf","parseJqXHR","pageChange","nextProps","setState","page","target","pages","getResponseHeader","onChange","renderOptions","trigger_episode_watched_status","show_id","episode_number","Event","EVENT_EPISODE_WATCHED_STATUS","displaySeason","EpisodeListItem","onPlayClick","playClick","_Chromecast2","playEpisode","getPlayUrl","color","renderEpisodeNumber","renderAirDate","_WatchedButton2","watched","user_watched","onClick","playServers","selected","always","message","playServerUrl","string","playId","info","nextInfo","backToInfo","currentInfo","onAudioChange","onSubtitleChange","onTimeUpdate","Player","onPlayPauseClick","playPauseClick","duration","parseInt","format","pingTimer","hls","onFullscreenClick","fullscreenClick","onVolumeChange","volumeChange","audioChange","subtitleChange","volume","hideControlsTimer","onSliderReturnCurrentTime","sliderReturnCurrentTime","onSliderNewTime","sliderNewTime","playing","time","fullscreen","showControls","audio","subtitle","loading","isChrome","webstore","video","addEventListener","timeupdateEvent","pauseEvent","playEvent","fullscreenchangeEvent","playError","playWaiting","loadedEvent","setPingTimer","loadStream","onmousemove","mouseMove","onkeypress","keypress","onbeforeunload","beforeUnload","_this2","Hls","isSupported","load","destroy","bufferTimer","clearInterval","startLevel","manifestLoadingTimeOut","maxMaxBufferLength","maxBufferLength","debug","loadSource","attachMedia","on","Events","MANIFEST_PARSED","ERROR","hlsError","warn","fatal","details","ErrorTypes","BUFFER_STALLED_ERROR","NETWORK_ERROR","startLoad","MEDIA_ERROR","handleMediaError","recoverMediaError","preventDefault","paused","setHideControlsTimer","_this3","clearTimeout","timeout","_this4","fullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","currentTarget","MEDIA_ERR_DECODE","_this5","currentTime","seekable","end","_this6","cancelPlayUrl","_this7","fail","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","elem","getElementById","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","webkitEnterFullscreen","_PlayNext2","lang","changeVideoState","newTime","style","visibility","showControlsVisibility","_ChromecastIcon2","_AudioSubBar2","_VolumeBar2","renderPlayNext","playPause","fa","fa-pause","fa-play","fa-expand","fa-arrows-alt","getCurrentTimeText","_Slider2","onReturnCurrentTime","onNewTime","getDurationText","_Loader2","_this8","id","preload","autoPlay","controls","ref","renderControlsTop","renderControlsBottom","renderLoading","description","PlayNext","onNextClick","nextClick","bottom","AudioSubBar","subtitles","parseMetadata","click","onAudioClick","audioClick","onSubtitleClick","subtitleClick","onDocumentClick","documentClick","removeEventListener","icon","contains","streams","stream","tags","language","index","codec_type","getAttribute","data-data","map","audio-subtitles","audio-subtitles-bottom","audioSubtitlesElem","renderSubtitles","renderAudio","renderAudioSubtitles","Slider","onSliderClick","sliderClick","getCurrentTime","x","getEventXOffset","norm","slider","offsetWidth","trunc","match","originalEvent","touches","changedTouches","offsetLeft","isNaN","offsetParent","clientX","width","progressPercent","ChromecastIcon","connected","available","onConnected","onDeviceAvailable","deviceAvailable","onCastInit","iconClick","castIconClick","externals","required","importer_info","importer_episodes","importerTypes","EditFields","onImporterSelected","importerSelected","onInputChange","inputChanged","showexternals","importers","importers.info","importers.episodes","episodes","alternative_titles","external","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","lookupExternals","externals.tvmaze","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","renderExternals","renderImporter","_EditAlternativeTitles2","defaultValue","shows","array","mobile_xscroll","List","alt","poster_image","row","renderShow","getRecentlyAired","perPage","items","RecentlyAired","getData","item","renderItem","per_page","textStatus","getWatched","Watched","user_watching","getCountdown","Countdown","air_datetime","getEpisodesToWatch","EpisodesToWatch","_Chromecast","React","require","ReactDOM","$","Routes","Navbar","VolumeBar","onSliderMouseMove","sliderMouseMove","onIconClick","percent","muted","buttons","stopPropagation","scrubber","querySelector","y","clientY","offsetTop","offsetHeight","setItem","onMouseMove","height","fa-volume-up","fa-volume-down","fa-volume-off","renderBar","_reactRouter","Router","history","browserHistory","Route","path","component","_SignIn2","_SignOut2","_CreateUser2","_Show2","IndexRedirect","to","_Main2","_Info2","_Seasons2","_Stats2","_Edit2","_PlayEpisode2","_New2","_FanOf2","_RecentlyAired2","_ShowsWatched2","_Countdown2","_EpisodesToWatch2","_Main4","_AirDates2","_Account2","_Password2","_PlayServers2","_PlayServer2","_UserShowsStats2","params","Show","seplis_tv_show","_FanButton2","premiered","_ShowNav2","cloneElement","children","reload","pathname","endsWith","renderShowImporting","isFan","FanButton","getIsFan","is_fan","btnClass","btn","btn-fan","btn-fan__is-fan","aria-label","ShowNav","Link","activeClassName","Main","_LatestEpisodesSideBar2","_NextToWatch2","numberOfEpisodes","_EpisodeLastWatched2","renderNextToWatch","renderAirDates","_events","NextToWatch","eventGet","hidden","_EpisodeListItem2","WatchedButton","setWatchedState","onWatchedIncr","onWatchedDecr","onWatchedClick","times","watchedApiEndpoint","replace","role","dropdown","btn-watched","watching","watching-watched","renderDropdown","data-toggle","LatestEpisodesSideBar","getEpisodes","dateUTC","_fecha2","q","sort","renderCountdown","EpisodeLastWatched","Seasons","onSeasonChange","seasonChange","seasons","_SeasonList2","seasonNumber","SeasonList","scrollTop","seasonEpisodeNumbers","from","total","append","seasonNum","_WatchedProgression2","_SelectSeason2","selectedSeason","WatchedProgression","showForm","fromNumber","toNumber","saving","dropdownButtonClick","selectChange","formSubmit","getNextToWatch","fromN","toN","onSubmit","_SelectSeasonEpisode2","selectedNumber","disabled","renderForm","SelectSeasonEpisode","rows","label","renderSeason","SelectSeason","_react","Stats","userStats","getUserStats","stats","totalEpisodes","episodes_watched","episodes_watched_minutes","episodeCount","countEpisodes","renderUserStats","runtime","Info","statusToText","genres","desc","text","renderGeneral","renderDescription","_flat","Edit","submit","unflatten","_formSerialize2","hash","_EditFields2","renderError","renderSuccess","arrayOf","EditAlternativeTitles","select2","multiple","PlayEpisode","loadingPlayServers","loadingShow","loadingEpisode","loadingNextEpisode","loadingLang","loadingStartTime","playServerError","nextEpisode","timeUpdate","lastPos","markedAsWatched","getShow","getEpisode","getPlayServers","getNextEpisode","getLanguage","getStartTime","obj","catch","saveSub","_this9","confirm","getCurrentInfo","getFriendlyName","margin","marginTop","renderPlayServerErrorMessage","renderPlayServerError","loadCast","_Player2","getInfo","getPlayNextInfo","getBackToInfo","New","extra","SignIn","email","password","onSignIn","onDataChange","client_id","grant_type","saveUserIdAndRedirect","user","level","placeholder","autoFocus","SignOut","CreateUser","signin","renderFieldError","errors","withRouter","FanOf","totalCount","setBrowserPath","getShows","userId","_Pagination2","_List2","_RecentlyAired","getItems","_Watched","ShowsWatched","_Watched2","_Countdown","_EpisodesToWatch","visChange","visibilitychange","failed","countdown","recentlyWatched","episodesToWatch","AirDates","weekdays","date","getDay","d1","parse","d2","now","ceil","renderWeekday","renderHeaderDate","renderMain","Account","Password","new_password","newPassword","focus","renderButton","PlayServers","body","renderPlayServers","render2","PlayServer","onDelete","onGiveAccess","onRemoveUserAccess","secret","users","getUsersWithAccess","val","incLoading","router","username","alert","u","verticalAlign","renderGiveAccessForm","renderUsers","renderDeleteButton","renderUsersWithAccess","UserShowsStats","getStats","fan_of","shows_watched","_ChromecastBar2","renderShowDropdown","renderChromecast","renderCreateUser","renderSignIn","renderUserMenu","_Search2","Search","onInputChanged","onKeyDown","keyDown","onMouseOver","mouseOver","onMouseOut","mouseOut","results","selectedResultId","requesting","form","abort","trim","title_suggest","fields","suggestNode","setNextSelectedId","keyCode","disableScroll","g","display","data-id","resultClassName","ChromecastBar","deviceName","changingTime","clickPlayNextEpisode","playNextEpisode","castStateChanged","removeMessageListener","receiveCastInfo","subAudioSubSave","playOrPause","playerStateChanged","connectedChanged","currentTimeChanged","addMessageListener","namespace","getMediaSession","getPlayNextEpisode","renderPlayControl","getDuration","playNext","renderFinished","renderPlaying","renderReadyToPlay"],"mappings":"wBACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,oBAAAA,OAAA,wBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAMA,OAFA1C,EAAAR,KAAA,QAEAU,mHCpIgB0C,QAAT,SAAiBC,GAAmB,IAAdC,EAAcC,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAC/BE,EAAQC,EAAAC,QAAEC,MAAMN,EAAQG,OAAS,IAAI,GACrCI,EAASP,EAAQO,SAAWP,EAAQhE,KAAO,OAAO,OAClDA,EAAOgE,EAAQhE,KACfwE,EAAeR,EAAQQ,eAAgB,OAEvB,IAATxE,GAAmC,QAAXuE,IAC/BvE,EAAOyE,KAAKC,UAAU1E,IAGpB+D,EAAIY,WAAW,SAAcH,IAC/BT,EAAMa,EAAkBC,QAAUd,GAGlCI,KAC0B,IAAtBJ,EAAIe,QAAQ,KACZf,GAAO,IAAMI,EAEbJ,GAAO,IAAMI,GAIrB,IAAIY,EAAU,CACVC,OAAQ,mCAEZ,GAAIjB,EAAIY,WAAWC,EAAkBC,SAAU,CAC3C,IAAII,EAAeC,aAAaC,QAAQ,gBACpCF,IACAF,EAAQK,cAAR,UAAkCH,GAG1C,OAAOb,EAAAC,QAAEgB,KAAK,CACVtB,IAAKA,EACLQ,OAAQA,EACRvE,KAAMA,EACNsF,YAAa,mBACbP,QAASA,EACTQ,MAASC,KAvDjB,MAAAC,EAAA9D,EAAA,uCAEA,SAAS6D,EAAYD,GACI,MAAjBA,EAAMG,QAC0B,OAA5BH,EAAMI,aAAaC,OACnBV,aAAaW,WAAW,gBACxBX,aAAaW,WAAW,WACxBX,aAAaW,WAAW,eACxBC,SAASC,KAAO,YAKrB,IAAInB,sBAAoB,CAC3BC,QAAS,GACTmB,SAAU,0fCdP,SAASC,IACZ,OAAiD,OAAzCf,aAAaC,QAAQ,gBAG1B,SAASe,IACZ,IAAKD,IAED,MADAH,SAASC,KAAO,WACV,cAEV,OAAO,EAYJ,SAASI,EAAIC,EAAKC,GAEvB,OADAD,EAAMA,EAAIE,YACC9F,OAAS6F,EAAMF,EAAI,IAAMC,EAAKC,GAAOD,EAmF3C,SAASG,EAAUC,EAAKC,GAE3B,OADW,GAAPD,IAAUC,GAAc,KAClBD,EAAV,IAAiBC,EAGd,SAASC,EAAOC,EAAGC,GACtB,MAAO,CAACC,KAAKC,MAAMH,EAAIC,GAAID,EAAIC,KAhHnBX,aAIAC,kBAQAa,UAAT,WAEH,OADAb,IACOhB,aAAaC,QAAQ,YAAc,KAG9B6B,aAAT,WACH,OAAO9B,aAAaC,QAAQ,eAAiB,QAGjCgB,QAKAc,cAAT,SAAuBC,EAAMC,GAChC,OAAQD,EAAKE,cACT,KAAK,EAAG,iBAAiBD,EAAQE,OACjC,KAAK,EAAG,UAAUlB,EAAIgB,EAAQG,OAAO,GAA7B,OAAsCnB,EAAIgB,EAAQA,QAAS,GAA3D,KAAkEA,EAAQE,OAA1E,IACR,KAAK,EAAG,kBAAkBF,EAAQI,aAI1BC,aAAT,SAAsBN,EAAMC,GAC/B,OAAQD,EAAKE,cACT,KAAK,EAAG,OAASD,EAAQE,OAAjB,KAA4BF,EAAQM,MAC5C,KAAK,EAAG,UAAUtB,EAAIgB,EAAQG,OAAO,GAA7B,IAAmCnB,EAAIgB,EAAQA,QAAS,GAAxD,KAA+DA,EAAQM,MAC/E,KAAK,EAAG,OAASN,EAAQI,SAAjB,KAA8BJ,EAAQM,UAItCC,KAAT,WACH,SAASC,IACL,OAAOd,KAAKC,MAA4B,OAArB,EAAID,KAAKe,WACvBtB,SAAS,IACTuB,UAAU,GAEnB,OAAOF,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAC3CA,IAAO,IAAMA,IAAOA,IAAOA,OAGnBG,cAAT,SAAuBC,GAC1B,IAAIC,EAAQnB,KAAKC,MAAMiB,EAAO,MAC1BE,EAAUpB,KAAKC,OAAOiB,EAAgB,KAARC,GAAiB,IAC/CE,EAAUrB,KAAKC,MAAMiB,EAAgB,KAARC,EAA2B,GAAVC,GAE9CD,EAAQ,KACRA,EAAQ,IAAIA,GACZC,EAAU,KACVA,EAAU,IAAIA,GACdC,EAAU,KACVA,EAAU,IAAIA,GAClB,OAAQF,EAAM,EAAEA,EAAM,IAAI,IAAIC,EAAQ,IAAIC,KAG9BC,WAAT,SAAoBC,GACL,iBAAPA,IACPA,EAAK,IAAIC,KAAKD,IAElB,IAAIF,EAAUrB,KAAKyB,IAAIF,GAAG,IAAIC,MAAOE,WAAW,IAC5CN,SAASD,SAAOQ,SAChBvG,EAAI,GANmBwG,EAON/B,EAAOwB,EAAS,IAPVQ,EAAAC,EAAAF,EAAA,GAO1BR,EAP0BS,EAAA,GAOjBR,EAPiBQ,EAAA,OAAAE,EAQRlC,EAAOuB,EAAS,IARRY,EAAAF,EAAAC,EAAA,GAQ1BZ,EAR0Ba,EAAA,GAQnBZ,EARmBY,EAAA,OAAAC,EASXpC,EAAOsB,EAAO,IATHe,EAAAJ,EAAAG,EAAA,GAS1BN,EAT0BO,EAAA,GASpBf,EAToBe,EAAA,GAUvBP,EAAO,GAAGvG,EAAEvB,KAAK6F,EAAUiC,EAAM,QACjCR,EAAQ,GAAG/F,EAAEvB,KAAK6F,EAAUyB,EAAO,SAClCC,EAAU,GAAOD,EAAQ,GAAOQ,EAAO,GACxCvG,EAAEvB,KAAK6F,EAAU0B,EAAS,WAC9B,OAAOhG,EAAE+G,KAAK,QAGFC,gBAAT,SAAyBf,EAASgB,GACrC,IAAIC,EAAatC,KAAKuC,MAASlB,EAAQ,GAAI,GAAI,IAAK,GACpD,GAAIA,EAAU,GAAI,OAAO3B,EAAU2B,EAAS,UAC5C,IAAID,SAASD,SAAOQ,SAAMa,SAAQC,SAHmBC,EAIhC7C,EAAOwB,EAAS,IAJgBsB,EAAAb,EAAAY,EAAA,GAIpDtB,EAJoDuB,EAAA,GAI3CtB,EAJ2CsB,EAAA,OAAAC,EAKlC/C,EAAOuB,EAAS,IALkByB,EAAAf,EAAAc,EAAA,GAKpDzB,EALoD0B,EAAA,GAK7CzB,EAL6CyB,EAAA,OAAAC,EAMrCjD,EAAOsB,EAAO,IANuB4B,EAAAjB,EAAAgB,EAAA,GAMpDnB,EANoDoB,EAAA,GAM9C5B,EAN8C4B,EAAA,OAAAC,EAOpCnD,EAAO8B,EAAM,OAPuBsB,EAAAnB,EAAAkB,EAAA,GAOpDR,EAPoDS,EAAA,GAO5CtB,EAP4CsB,EAAA,OAAAC,EAQnCrD,EAAO2C,EAAQ,IARoBW,EAAArB,EAAAoB,EAAA,GAQpDT,EARoDU,EAAA,GAQ7CX,EAR6CW,EAAA,GASrD,IAAI/H,EAAI,GACJqH,EAAQ,GAAGrH,EAAEvB,KAAK6F,EAAU+C,EAAO,SACnCD,EAAS,GAAGpH,EAAEvB,KAAK6F,EAAU8C,EAAQ,UACrCb,EAAO,GAAGvG,EAAEvB,KAAK6F,EAAUiC,EAAM,QACjCR,EAAQ,GAAG/F,EAAEvB,KAAK6F,EAAUyB,EAAO,SACnCC,EAAU,GAAGhG,EAAEvB,KAAK6F,EAAU0B,EAAS,WAC3C,IAAItF,EAAIV,EAAE+G,KAAK,MACf,GAAKE,GAAoBC,GAAc,GAAK,CACxC,IAAIc,EAAI1D,EAAU4C,EAAY,QAC9BxG,EAAIA,OAASsH,EAAT,IAER,OAAOtH,KAGK4D,cAKAG,sVChHhB/E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEAA,EAAA,IAEA,IAAMuI,EAAY,CACdC,QAASC,EAAA/F,QAAUgG,MAOjBC,grBAAeC,EAAAlG,QAAMmG,+CAGnB,IAAIC,GAAM,EAAAC,EAAArG,SAAW,CACjBsG,QAAQ,EACRC,iBAAkBC,KAAKC,MAAMX,UAEjC,OACII,EAAAlG,QAAA0G,cAAA,OAAKC,UAAWP,aAK5BH,EAAOJ,UAAYA,EACnBI,EAAOW,aAlBc,CACjBd,SAAS,aAmBEG,oVC9BfY,EAAAvJ,EAAA,IACAwJ,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,GAEA,IAAI0J,EAAS,CACTC,YAAa,aACbC,UAAW,cACXC,aAAc,cACdC,aAAc,cACdC,aAAc,eAGZC,aAEF,SAAAA,iGAAcC,CAAAf,KAAAc,GACVd,KAAKgB,QAAS,yCAGbC,GACDjB,KAAKiB,OAASA,EACTH,EAAWI,YAGZlB,KAAKmB,UAAS,GAFdnB,KAAKoB,0DAQT,GADAN,EAAWO,SAASxL,KAAKmK,OACrBc,EAAWE,OAAf,CAEAF,EAAWE,QAAS,EACpBlI,OAAA,sBAAkC,SAACwI,GAE/BC,WAAW,WACP,IAAIC,EAAiB,IAAIC,OAAOC,KAAKC,eAAeb,EAAWc,OAC3DC,EAAY,IAAIJ,OAAOC,KAAKI,UAC5BN,EACAO,EACAC,EACAP,OAAOC,KAAKO,eAAeC,eAE/BT,OAAOC,KAAKS,WAAWN,EAAW,WAC9Bf,EAAWI,aAAc,EADW,IAAAkB,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAEpC,QAAAkJ,EAAAC,EAAgB1B,EAAWO,SAA3BtJ,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAqC,CAAAG,EAAAtK,MAC7BkJ,SAASG,IAHmB,MAAAsB,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,OAMzC,MAEP,IAAIQ,EAASC,SAAS7C,cAAc,UACpC4C,EAAOE,IAAM,yDACbD,SAASE,KAAKC,YAAYJ,qCAGrBxB,GACLtB,KAAKgB,OAASM,EACTA,GAEDtB,KAAKiB,QACLjB,KAAKiB,OAAOjB,+CAIhByB,OAAOC,KAAKyB,eAAepB,yCAI3B,QAAKjB,EAAWsC,SAEoB,aAA7BtC,EAAWsC,QAAQvI,4CAI1B,OAAOiG,EAAWsC,kDAIlB,OAAOtC,EAAWuC,uDAIlB,OAAOvC,EAAWsC,QAAQE,SAASC,sDAInC,OAAOzC,EAAWuC,aAAaG,uDAGvBC,EAAS/I,GAC0B,WAAvCoG,EAAWuC,aAAaK,YACxB1D,KAAK2D,MAAMF,EAAS/I,GAEpBsF,KAAK4D,KAAKH,EAAS/I,gCAGtB+I,EAAS/I,GACVoG,EAAWuC,aAAaO,KAAK,KAAMH,EAAS/I,iCAG1C+I,EAAS/I,GACXoG,EAAWuC,aAAaM,MAAM,KAAMF,EAAS/I,uCAGrCmJ,EAAQzH,EAAe0H,GAAW,IAAAC,EAAA/D,KAC1C,OAAO,IAAIgE,QAAQ,SAACC,EAASC,GACzB,IAAKH,EAAKI,cAGN,OAFAC,QAAQC,IAAI,wCACZH,IAGJ,IAAIhL,cAAiB2K,EAAjB,aAAoCzH,EAApC,gBACJ4H,QAAQM,IAAI,EACR,EAAAjE,EAAAkE,eAAcrL,IACd,EAAAoH,EAAArH,SAAQ,sBACR,EAAAqH,EAAArH,SAAA,YAAoB4K,IACpB,EAAAvD,EAAArH,SAAA,YAAoB4K,EAApB,aAAuCzH,IACvC,EAAAkE,EAAArH,SAAA,YAAoB4K,EAApB,aAAuCzH,EAAvC,aACA,EAAAkE,EAAArH,SAAA,YAAoB4K,EAApB,yBACDW,KAAK,SAAChO,GACAsN,IAEGA,EADAtN,EAAO,GACKA,EAAO,GAAGiO,SAEV,GAEpBV,EAAKW,aAAaC,YACd,kCACA,CACIf,KAAMpN,EAAO,GAAP,WACNoO,SAAUpO,EAAO,GAAP,SACVqO,MAAOrO,EAAO,GAAP,MACPsO,KAAM,UACNzI,KAAM7F,EAAO,GACb8F,QAAS9F,EAAO,GAChBsN,UAAWA,EACXiB,OAAQC,OAAOjL,kBAAkBC,SAErC,aACA,SAACU,GAAW0J,QAAQC,IAAI3J,KAE5B,IAAIuK,EAAUzO,EAAO,GAAG0O,WAAWC,SAAS,iBAC5B3O,EAAO,GAAG0O,WAAWE,QACrCH,gBAAuB,EAAA1E,EAAA1D,QACnBiH,IACAmB,kBAA0BnB,GAC1BtN,EAAO,KACPyO,sBAA6BzO,EAAO,GAAG6O,eAAiB,IACxDJ,mBAA0BzO,EAAO,GAAG8O,YAAc,KAEtD,IAAIrM,EAAU,IAAIwI,OAAOC,KAAK6D,MAAMC,YAChCzB,EAAK0B,sBAAsBR,EAASzO,EAAO,GAAIA,EAAO,KAE1DuN,EAAKW,aAAagB,UACdzM,EACA,SAACoK,GACGsC,EAActC,GACdY,EAAQZ,IAEZ,SAACuC,GAAQ1B,EAAO0B,IAAM9E,qDAMhB5H,EAAKmD,EAAMC,GAC7B,IAAIuJ,EAAY,IAAIpE,OAAOC,KAAK6D,MAAMO,UAAU5M,GAOhD,OANA2M,EAAUjB,SAAW,IAAInD,OAAOC,KAAK6D,MAAMQ,oBAC3CF,EAAUjB,SAASoB,YAAc3J,EAAKO,MACtCiJ,EAAUjB,SAAShI,MAAQN,EAAQM,MACnCiJ,EAAUjB,SAAStI,QAAUA,EAAQA,SAAWA,EAAQE,OACxDqJ,EAAUjB,SAASqB,gBAAkB3J,EAAQI,SAC7CmJ,EAAUjB,SAASsB,aAAezE,OAAOC,KAAK6D,MAAMY,aAAaC,QAC1DP,2CAGMQ,EAAOC,GACdD,KAASvF,EAAWyF,gBACtBzF,EAAWyF,cAAcF,GAAS,IAC9BvF,EAAWyF,cAAcF,GAC5BvF,EAAWyF,cAAcF,GAAOG,SAASF,IAC1CxF,EAAWyF,cAAcF,GAAOxQ,KAAKyQ,+CAGzBD,EAAOC,GACvB,IAAIV,EAAI9E,EAAWyF,cAAcF,IAAU,GACvC5Q,EAAImQ,EAAE3L,QAAQqM,GACd7Q,EAAI,GACJmQ,EAAE/O,OAAOpB,EAAG,YAaxB,SAASsM,EAAgBqB,GACrBtC,EAAWsC,QAAUA,EACO,GAAxBA,EAAQmC,MAAM5P,QACdgQ,EAAcvC,EAAQmC,MAAM,IAEhCzE,EAAW2F,oBAAsBC,YAAY,WACpC5F,EAAWuC,cAE2B,WAAvCvC,EAAWuC,aAAaK,aACxBiD,EAAcnG,EAAOK,aAAcC,EAAWuC,aAAaG,qBAChE,KACHJ,EAAQwD,iBAAiBjB,GACzBvC,EAAQyD,kBAAkBC,GAC1BH,EAAcnG,EAAOG,cAAc,GAGvC,SAASmG,EAAsBT,GACvBvF,EAAWsC,QAAQvI,SAAW4G,OAAOC,KAAKqF,cAAcC,YACxDlG,EAAWsC,QAAU,KACrBtC,EAAWuC,aAAe,KAC1BsD,EAAcnG,EAAOG,cAAc,IAI3C,SAASgF,EAActC,GACnBvC,EAAWuC,aAAeA,EAC1BA,EAAawD,kBAAkBI,GAC/BN,EAAcnG,EAAOK,aAAcC,EAAWuC,aAAaG,oBAE3DyD,IAGJ,SAASA,IACLN,EACInG,EAAOI,aACPE,EAAWuC,aAAaK,aAIhC,SAAS1B,EAAiBkF,GAElBP,EAAcnG,EAAOE,UADZ,aAATwG,GAUR,SAASP,EAAcN,EAAOlR,GAC1B,IAAIyQ,EAAI,CACJuB,MAAOd,EACPpO,MAAO9C,GAEXiS,EAAe,aAAcxB,GAC7BwB,EAAef,EAAOT,GAG1B,SAASwB,EAAef,EAAOlR,IACnB2L,EAAWyF,cAAcF,IAAU,IACzCgB,QAAQ,SAAAC,GACN,IACIA,EAAEnS,GACJ,MAAOyQ,GACLxB,QAAQC,IAAIuB,MA3ExB9E,EAAWI,aAAc,EACzBJ,EAAWE,QAAS,EACpBF,EAAWO,SAAW,GACtBP,EAAWsC,QAAU,KACrBtC,EAAWuC,aAAe,KAC1BvC,EAAWyF,cAAgB,GAC3BzF,EAAWN,OAASA,EACpBM,EAAW2F,oBAAsB,KACjC3F,EAAWc,MAAQ,aAwEJd,+UC/QfhK,EAAA,QACAA,EAAA,MACAA,EAAA,yDAEA,IAAMuI,EAAY,CACdkI,MAAOhI,EAAA/F,QAAUd,OAAO8O,WACxBC,aAAclI,EAAA/F,QAAU8M,MAGtBoB,cAEF,SAAAA,EAAYzH,gGAAOc,CAAAf,KAAA0H,GAAA,IAAA3D,mKAAA4D,CAAA3H,MAAA0H,EAAAE,WAAA9R,OAAA+R,eAAAH,IAAAzR,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQnD,EAAK+D,aAClB/D,EAAK0D,aAAe1D,EAAKgE,WAAWvP,KAAhBuL,GAHLA,qUAFErE,EAAAlG,QAAMmG,gEAQDqI,GACtBhI,KAAKiI,SACDjI,KAAK8H,WAAWE,EAAUT,2CAIvB3B,GACP5F,KAAKkH,MAAMgB,KAAOtC,EAAEuC,OAAOlQ,MACIoB,MAA3B2G,KAAKC,MAAMwH,cACXzH,KAAKC,MAAMwH,aAAa7B,sCAGrB2B,GACP,MAAO,CACHa,MAAOpI,KAAKC,MAAMsH,MAAMc,kBAAkB,iBAC1CH,KAAMlI,KAAKC,MAAMsH,MAAMc,kBAAkB,mDAM7C,IADA,IAAIlP,EAAU,GACL1D,EAAI,EAAGA,GAAKuK,KAAKkH,MAAMkB,MAAO3S,IACnC0D,EAAQtD,KACJ6J,EAAAlG,QAAA0G,cAAA,UACI3H,IAAK9C,EACLwC,MAAOxC,GAFX,QAIUA,IAIlB,OAAO0D,mCAIP,OAAI6G,KAAKkH,MAAMkB,OAAS,EACb,KAEP1I,EAAAlG,QAAA0G,cAAA,UACIC,UAAU,0BACVmI,SAAUtI,KAAKyH,aACfxP,MAAO+H,KAAKkH,MAAMgB,MAEjBlI,KAAKuI,0BAKtBb,EAAWrI,UAAYA,YAERqI,wFC7DCc,+BAAT,SAAwC9O,EAAQ+O,EAASC,GAC5D,IAAIrC,EAAQ,IAAIsC,MAAMC,EAA8B,CAChDlP,OAAQA,EACR+O,QAASA,EACTC,eAAgBA,IAEpB3F,SAAS4D,cAAcN,IAZpB,IAAMuC,iCAA+B,8WCA5C9R,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,wDAEAA,EAAA,KAEA,IAAMuI,EAAY,CACdwE,OAAQtE,EAAA/F,QAAUgD,OAAOgL,WACzBlL,QAASiD,EAAA/F,QAAUd,OAAO8O,WAC1BqB,cAAetJ,EAAA/F,QAAUgG,MAOvBsJ,cAEF,SAAAA,EAAY7I,gGAAOc,CAAAf,KAAA8I,GAAA,IAAA/E,mKAAA4D,CAAA3H,MAAA8I,EAAAlB,WAAA9R,OAAA+R,eAAAiB,IAAA7S,KAAA+J,KACTC,IADS,OAEf8D,EAAKgF,YAAchF,EAAKiF,UAAUxQ,KAAfuL,GAFJA,qUAFOrE,EAAAlG,QAAMmG,gDAOtBiG,GACFqD,EAAAzP,QAAW4J,SAAyC,aAA7B6F,EAAAzP,QAAW4J,QAAQvI,QACjC,IAAAoO,EAAAzP,SACN0P,YACClJ,KAAKC,MAAM4D,OACX7D,KAAKC,MAAM3D,QAAQE,QAGvBvB,SAASC,KAAO8E,KAAKmJ,2DAKzB,OAAInJ,KAAKC,MAAM3D,QAAQA,QAEfoD,EAAAlG,QAAA0G,cAAA,YACKF,KAAKC,MAAM4I,cAAX,IAA6B7I,KAAKC,MAAM3D,QAAQG,OAAhD,IAA2D,GADhE,WAEauD,KAAKC,MAAM3D,QAAQA,QAFhC,IAIIoD,EAAAlG,QAAA0G,cAAA,QAAMkJ,MAAM,QAAZ,IACMpJ,KAAKC,MAAM3D,QAAQE,OADzB,MAOJkD,EAAAlG,QAAA0G,cAAA,uBAAeF,KAAKC,MAAM3D,QAAQE,gDAM1C,OAAIwD,KAAKC,MAAM3D,QAAQI,SAEfgD,EAAAlG,QAAA0G,cAAA,QACIC,UAAU,WACVvD,MAAOoD,KAAKC,MAAM3D,QAAQI,UAEzBsD,KAAKC,MAAM3D,QAAQI,UAKxBgD,EAAAlG,QAAA0G,cAAA,sEAQR,eAAgBF,KAAKC,MAAM4D,OAA3B,YAA6C7D,KAAKC,MAAM3D,QAAQE,OAAhE,yCAIA,OACIkD,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,yBACXT,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,QACVvD,MAAOoD,KAAKC,MAAM3D,QAAQM,OAEzBoD,KAAKC,MAAM3D,QAAQM,MAAMoD,KAAKC,MAAM3D,QAAQM,MAAM,OAEvD8C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,QACVH,KAAKqJ,sBACN3J,EAAAlG,QAAA0G,cAAA,qBACCF,KAAKsJ,iBAEV5J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAAqJ,EAAA/P,QAAA,CACIqK,OAAQ7D,KAAKC,MAAM4D,OACnBzH,cAAe4D,KAAKC,MAAM3D,QAAQE,OAClCgN,QAASxJ,KAAKC,MAAM3D,QAAQmN,eAEhC/J,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,0BACVuJ,QAAS1J,KAAK+I,aAEdrJ,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,kCAOrC2I,EAAgBzJ,UAAYA,EAC5ByJ,EAAgB1I,aAjGK,CACjByI,eAAe,aAkGJC,6UC8XCvE,cAAT,SAAuBrL,GAK1B,OAAO,IAAI8K,QAAQ,SAACC,EAASC,IACzB,EAAA5D,EAAArH,SACIC,GACFyJ,KAAK,SAAAgH,GACH,IAAIC,GAAW,EACXnU,EAAI,EACR,GAA0B,GAAtBkU,EAAYhU,OAAhB,CAHkB,IAAAyM,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAOlB,QAAAkJ,EAAAC,EAAcmH,EAAd5R,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAA2B,KAAlBrL,EAAkBwL,EAAAtK,MACvBxC,GAAK,GACL,EAAA6K,EAAArH,SAAQlC,EAAEoO,SAAS,YAAa,CAC5B7L,MAAO,CACH8L,QAASrO,EAAEqO,WAEhBzC,KAAK,SAAAiC,GACAgF,IAEJA,GAAW,EACX3F,EAAQ,CACJiB,WAAYnO,EACZ6N,SAAUA,OAEfiF,OAAO,WAEI,IADVpU,GAAK,IACwB,GAAZmU,GACb1F,EAAO,CAACnJ,KAAM,EAAG+O,QAAS,wDAxBpB,MAAAlH,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,SAId4B,EAAO,CAACnJ,KAAM,EAAG+O,QAAS,0BA1f1C,QAAAhT,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwJ,EAAAxJ,EAAA,OACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,IACAyJ,EAAAzJ,EAAA,sDACAA,EAAA,IAEA,IAAMuI,EAAY,CACd0K,cAAexK,EAAA/F,QAAUwQ,OACzBC,OAAQ1K,EAAA/F,QAAUwQ,OAClB5G,QAAS7D,EAAA/F,QAAUwQ,OACnBlG,UAAWvE,EAAA/F,QAAUgD,OACrBoI,SAAUrF,EAAA/F,QAAUd,OACpBwR,KAAM3K,EAAA/F,QAAUd,OAChByR,SAAU5K,EAAA/F,QAAUd,OACpB0R,WAAY7K,EAAA/F,QAAUd,OACtB2R,YAAa9K,EAAA/F,QAAUd,OACvB4R,cAAe/K,EAAA/F,QAAU8M,KACzBiE,iBAAkBhL,EAAA/F,QAAU8M,KAC5BhB,WAAY/F,EAAA/F,QAAUwQ,OACtB3E,cAAe9F,EAAA/F,QAAUwQ,OACzBQ,aAAcjL,EAAA/F,QAAU8M,MAStBmE,cAEF,SAAAA,EAAYxK,gGAAOc,CAAAf,KAAAyK,GAAA,IAAA1G,mKAAA4D,CAAA3H,MAAAyK,EAAA7C,WAAA9R,OAAA+R,eAAA4C,IAAAxU,KAAA+J,KACTC,IADS,OAEf8D,EAAK2G,iBAAmB3G,EAAK4G,eAAenS,KAApBuL,GACxBA,EAAK6G,SAAWC,SAAS5K,EAAM2E,SAASkG,OAAOF,UAC/C7G,EAAKgH,UAAY,KACjBhH,EAAKiH,IAAM,KACXjH,EAAKkH,kBAAoBlH,EAAKmH,gBAAgB1S,KAArBuL,GACzBA,EAAKoH,eAAiBpH,EAAKqH,aAAa5S,KAAlBuL,GAEtBA,EAAKuG,cAAgBvG,EAAKsH,YAAY7S,KAAjBuL,GACrBA,EAAKwG,iBAAmBxG,EAAKuH,eAAe9S,KAApBuL,GAExBA,EAAKwH,OAAS,EACdxH,EAAKyH,kBAAoB,KAEzBzH,EAAK0H,0BAA4B1H,EAAK2H,wBAAwBlT,KAA7BuL,GACjCA,EAAK4H,gBAAkB5H,EAAK6H,cAAcpT,KAAnBuL,GAEvBA,EAAKmD,MAAQ,CACT2E,SAAS,EACTC,KAAM/H,EAAK9D,MAAM6D,UACjBA,UAAWC,EAAK9D,MAAM6D,UACtBV,QAASnD,EAAMmD,QACf2I,YAAY,EACZC,cAAc,EACdC,MAAOlI,EAAK9D,MAAMqF,WAClB4G,SAAUnI,EAAK9D,MAAMoF,cACrB8G,SAAS,GAGbpI,EAAKqI,WAAatT,OAAO2I,UAAY3I,OAAO2I,OAAO4K,SA9BpCtI,qUAFFrE,EAAAlG,QAAMmG,0DAoCnBK,KAAKsM,MAAMC,iBAAiB,aAAcvM,KAAKwM,gBAAgBhU,KAAKwH,OACpEA,KAAKsM,MAAMC,iBAAiB,QAASvM,KAAKyM,WAAWjU,KAAKwH,OAC1DA,KAAKsM,MAAMC,iBAAiB,OAAQvM,KAAK0M,UAAUlU,KAAKwH,OAExD+C,SAASwJ,iBAAiB,mBAAoBvM,KAAK2M,sBAAsBnU,KAAKwH,OAC9E+C,SAASwJ,iBAAiB,yBAA0BvM,KAAK2M,sBAAsBnU,KAAKwH,OACpF+C,SAASwJ,iBAAiB,sBAAuBvM,KAAK2M,sBAAsBnU,KAAKwH,OACjF+C,SAASwJ,iBAAiB,qBAAsBvM,KAAK2M,sBAAsBnU,KAAKwH,OAEhFA,KAAKsM,MAAMC,iBAAiB,QAASvM,KAAK4M,UAAUpU,KAAKwH,OACzDA,KAAKsM,MAAMC,iBAAiB,UAAWvM,KAAK6M,YAAYrU,KAAKwH,OAC7DA,KAAKsM,MAAMC,iBAAiB,QAASvM,KAAKgJ,UAAUxQ,KAAKwH,OACzDA,KAAKsM,MAAMC,iBAAiB,aAAcvM,KAAKgJ,UAAUxQ,KAAKwH,OAC9DA,KAAKsM,MAAMC,iBAAiB,aAAcvM,KAAK8M,YAAYtU,KAAKwH,OAChEA,KAAK+M,eACL/M,KAAKsM,MAAMf,OAASvL,KAAKuL,OACzBvL,KAAKgN,WAAWhN,KAAKmJ,cACrBpG,SAASkK,YAAcjN,KAAKkN,UAAU1U,KAAKwH,MAC3C+C,SAASoK,WAAanN,KAAKoN,SAAS5U,KAAKwH,MACzC+C,SAASsK,eAAiBrN,KAAKsN,aAAa9U,KAAKwH,0CAGzC4F,GACR5F,KAAKiI,SAAS,CAACkE,SAAS,uCAGjBjT,GAAK,IAAAqU,EAAAvN,KAEZ,GADAA,KAAKiI,SAAS,CAACkE,SAAS,KACnBqB,IAAIC,eAAiBzN,KAAKoM,SAI3B,OAHApM,KAAKsM,MAAMtJ,IAAM9J,EACjB8G,KAAKsM,MAAMoB,YACX1N,KAAKsM,MAAM1I,OAIX5D,KAAKgL,MACLhL,KAAKgL,IAAI2C,UACL3N,KAAKgL,IAAI4C,cACTC,cAAc7N,KAAKgL,IAAI4C,aACvB5N,KAAKgL,IAAI4C,iBAAcvU,GAE3B2G,KAAKgL,IAAM,MAEfhL,KAAKgL,IAAM,IAAIwC,IAAI,CACfM,WAAY,EACZC,uBAAwB,IACxBC,mBAAoB,IACpBC,gBAAiB,GACjBC,OAAO,IAEXlO,KAAKgL,IAAImD,WAAWjV,GACpB8G,KAAKgL,IAAIoD,YAAYpO,KAAKsM,OAC1BtM,KAAKgL,IAAIqD,GAAGb,IAAIc,OAAOC,gBAAiB,WACpChB,EAAKjB,MAAM1I,SAEf5D,KAAKgL,IAAIqD,GAAGb,IAAIc,OAAOE,MAAOxO,KAAKyO,SAASjW,KAAKwH,wCAG5CqG,EAAOlR,GAEZ,GADAiP,QAAQsK,KAAKvZ,GACTA,EAAKwZ,OAAUxZ,EAAKyZ,SAAWpB,IAAIqB,WAAWC,qBAC9C,OAAO3Z,EAAK2P,MACR,KAAK0I,IAAIqB,WAAWE,cAChB3K,QAAQC,IAAI,mDACZrE,KAAKgL,IAAIgE,YACT,MACJ,KAAKxB,IAAIqB,WAAWI,YAChB7K,QAAQC,IAAI,iDACZrE,KAAKkP,mBACL,MACJ,QAEIlP,KAAKgL,IAAI2C,sDAOrB3N,KAAKiI,SAAS,CAACkE,SAAS,IACxBnM,KAAKgL,IAAImE,oBACTnP,KAAKsM,MAAM1I,wCAGNgC,GACS,SAAVA,EAAE7K,MACFiF,KAAK2K,mDAGH/E,GACNA,EAAEwJ,iBACEpP,KAAKsM,MAAM+C,QAAUrP,KAAKkH,MAAMiF,UAEpCnM,KAAKiI,SAAS,CAAC+D,cAAehM,KAAKkH,MAAM8E,eACzChM,KAAKsP,+DAGM,IAAAC,EAAAvP,KACXwP,aAAaxP,KAAK+K,WAClB/K,KAAK+K,UAAYxJ,WAAW,YACxB,EAAAjB,EAAArH,SAAQsW,EAAKpG,aAAa,gBAC1BoG,EAAKxC,gBACN,kDAGc0C,GAAS,IAAAC,EAAA1P,KACX3G,MAAXoW,IACAA,EAAU,KACdD,aAAaxP,KAAKwL,mBAClBxL,KAAKwL,kBAAoBjK,WAAW,WAC5BmO,EAAKpD,MAAM+C,QAAUK,EAAKxI,MAAMiF,SAEpCuD,EAAKzH,SAAS,CACV+D,cAAc,KAEnByD,qCAGG7J,GACF5F,KAAKkH,MAAM8E,eACfhM,KAAKiI,SAAS,CACV+D,cAAc,IAElBhM,KAAKsP,6DAIL,IAAIvY,EAAOiJ,KAAKC,MAAM8J,cAAd,iBACQ/J,KAAKC,MAAMgK,OADnB,YAEQjK,KAAKC,MAAMmD,QAFnB,eAGWpD,KAAKkH,MAAMpD,UAHtB,mBAIc9D,KAAKkH,MAAMgF,UAAY,IAJrC,gBAKWlM,KAAKkH,MAAM+E,OAAS,IAKvC,OAJIjM,KAAKoM,SACLrV,oBAEAA,iBACGA,2CAIHiJ,KAAKsM,MAAM+C,QACXrP,KAAKsM,MAAM1I,OACX5D,KAAKsP,qBAAqB,MAG1BtP,KAAKsM,MAAM3I,wDAKf3D,KAAKiI,SAAS,CACV8D,cAAehJ,SAAS4M,YAAc5M,SAAS6M,oBAAsB7M,SAAS8M,eAAiB9M,SAAS+M,qBAAuB/M,SAASgN,0DAK5I/P,KAAKiI,SAAS,CACV4D,SAAS,EACTG,cAAc,wCAKlBhM,KAAKiI,SAAS,CACV4D,SAAS,EACTM,SAAS,sCAIPvG,GACN5F,KAAKiI,SAAS,CAACkE,SAAS,IACxB/H,QAAQsK,KAAK9I,EAAEoK,cAActV,OACzBkL,EAAEoK,cAActV,MAAMK,MAAQ6K,EAAEoK,cAActV,MAAMuV,kBACpDjQ,KAAKkP,yDAKTlP,KAAKiI,SAAS,CAACkE,SAAS,4CAGZvG,GAAG,IAAAsK,EAAAlQ,KACf,IAAKA,KAAKsM,MAAM+C,OAAQ,CACpBrP,KAAKiI,SAAS,CAACkE,SAAS,IACxB,IAAIL,EAAO9L,KAAKsM,MAAM6D,aAClBnQ,KAAKsM,MAAM8D,SAASza,QAAU,GAAKqK,KAAKsM,MAAM8D,SAASC,IAAI,IAAM,KACjEvE,GAAQ9L,KAAKkH,MAAMpD,WACvB9D,KAAKiI,SAAS,CACV6D,KAAMA,EACND,SAAS,GACV,WACKqE,EAAKjQ,MAAMuK,cACX0F,EAAKjQ,MAAMuK,aAAa0F,EAAKhJ,MAAM4E,QAEtC9L,KAAKwL,mBACNxL,KAAKsP,iEAKApI,GAAO,IAAAoJ,EAAAtQ,KACpBA,KAAKiI,SAAS,CAACkE,SAAW,IAC1BnM,KAAKuQ,gBAAgB/L,KAAK,WACtB8L,EAAKrI,SAASf,EAAO,WACjBoJ,EAAKtD,WAAWsD,EAAKnH,cACrBmH,EAAKvD,0DAMb/M,KAAKuQ,wDAGO,IAAAC,EAAAxQ,KACZ,OAAO,IAAIgE,QAAQ,SAACC,EAASC,IACzB,EAAA5D,EAAArH,SACIuX,EAAKrH,aAAa,kBACpBxG,KAAK,WACHsB,MACDwM,KAAK,SAAA7K,GACJ1B,EAAO0B,+CAKHS,GACZ,GAAKrG,KAAKkH,MAAM6E,WAYRhJ,SAAS2N,iBACT3N,SAAS2N,mBACF3N,SAAS4N,oBAChB5N,SAAS4N,sBACF5N,SAAS6N,wBAChB7N,SAAS6N,6BAjBW,CACxB,IAAIC,EAAO9N,SAAS+N,eAAe,UAC/BD,EAAKE,kBACLF,EAAKE,oBACEF,EAAKG,qBACZH,EAAKG,uBACEH,EAAKI,wBACZJ,EAAKI,wBAAwBC,QAAQC,sBAC9BN,EAAKO,uBACZP,EAAKO,wBAWbpR,KAAKiI,SAAS,CAAC8D,YAAa/L,KAAKkH,MAAM6E,uDAIvC,OAAO,EAAAxL,EAAAtD,eAAc4N,SAAS7K,KAAK4K,wDAInC,OAAO,EAAArK,EAAAtD,eAAc4N,SAAS7K,KAAKkH,MAAM4E,gDAIzC,GAAK9L,KAAKC,MAAMkK,SAChB,OACIzK,EAAAlG,QAAA0G,cAAAmR,EAAA7X,QAAA,CACIoD,MAAOoD,KAAKC,MAAMkK,SAASvN,MAC3B1D,IAAK8G,KAAKC,MAAMkK,SAASjR,2CAKxBqS,GACTvL,KAAKuL,OAASA,EACVvL,KAAKsM,QACLtM,KAAKsM,MAAMf,OAASA,uCAGhB+F,GACJtR,KAAKC,MAAMqK,eACXtK,KAAKC,MAAMqK,cAAcgH,GAC7BtR,KAAKuR,iBAAiB,CAClBtF,MAAOqF,EACPxN,UAAW9D,KAAKkH,MAAM4E,8CAIfwF,GACPtR,KAAKC,MAAMsK,kBACXvK,KAAKC,MAAMsK,iBAAiB+G,GAChCtR,KAAKuR,iBAAiB,CAClBrF,SAAUoF,EACVxN,UAAW9D,KAAKkH,MAAM4E,6CAIhB0F,GACVxR,KAAKsM,MAAM3I,QACX6L,aAAaxP,KAAKwL,mBAClBxL,KAAKwL,kBAAoB,KACzBxL,KAAKuR,iBAAiB,CAClBzF,KAAM0F,EACN1N,UAAW0N,sDAKf,OAAOxR,KAAKkH,MAAM4E,sDAIlB,OAAO9L,KAAKkH,MAAM8E,aAAa,UAAU,qDAIzC,OACItM,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,wBACVsR,MAAO,CAACC,WAAY1R,KAAK2R,2BAEzBjS,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,cACVjF,KAAM8E,KAAKC,MAAMmK,WAAWlR,IAC5B0D,MAAOoD,KAAKC,MAAMmK,WAAWxN,SAGrC8C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,mCACVH,KAAKC,MAAMoK,YAAYzN,OAE5B8C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,mBACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA0R,EAAApY,QAAA,OAEJkG,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA2R,EAAArY,QAAA,CACIoL,SAAU5E,KAAKC,MAAM2E,SACrB0F,cAAetK,KAAKsK,cACpBC,iBAAkBvK,KAAKuK,oBAG/B7K,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA4R,EAAAtY,QAAA,CAAW8O,SAAUtI,KAAKmL,kBAE9BzL,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACVH,KAAK+R,kEAOlB,IAAIC,GAAY,EAAAnS,EAAArG,SAAW,CACvByY,IAAI,EACJC,WAAYlS,KAAKkH,MAAM2E,QACvBsG,WAAYnS,KAAKkH,MAAM2E,UAEvBE,GAAa,EAAAlM,EAAArG,SAAW,CACxByY,IAAI,EACJG,YAAapS,KAAKkH,MAAM6E,WACxBsG,iBAAkBrS,KAAKkH,MAAM6E,aAEjC,OACIrM,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,WACVsR,MAAO,CAACC,WAAY1R,KAAK2R,2BAEzBjS,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA,QACIC,UAAW6R,EACXtI,QAAS1J,KAAK0K,oBAItBhL,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,gBACVH,KAAKsS,sBAEV5S,EAAAlG,QAAA0G,cAAAqS,EAAA/Y,QAAA,CACIoR,SAAU5K,KAAK4K,SACf4H,oBAAqBxS,KAAKyL,0BAC1BgH,UAAWzS,KAAK2L,kBAEpBjM,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,eAAevD,MAAM,YAC/BoD,KAAK0S,mBAEVhT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA,QACIC,UAAW4L,EACXrC,QAAS1J,KAAKiL,8DAS9B,OAAKjL,KAAKkH,MAAMiF,QAETzM,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,CAAQ8F,SAAS,IADb,sCAIN,IAAAsT,EAAA5S,KACL,OACIN,EAAAlG,QAAA0G,cAAA,OAAK2S,GAAG,UACJnT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA,SACIC,UAAU,QACV2S,QAAQ,OACRC,UAAU,EACVC,UAAU,EACVC,IAAK,SAACA,GAAD,OAASL,EAAKtG,MAAQ2G,KAE9BjT,KAAKkT,oBACLlT,KAAKmT,uBACLnT,KAAKoT,2BAM1B3I,EAAOpL,UAAYA,EACnBoL,EAAOrK,aA7cc,CACjB0D,UAAW,EACXoG,KAAM,KACNC,SAAU,gBA2cCM,+UC5ef3T,EAAA,QACAA,EAAA,uDAEA,IAAMuI,EAAY,CACdzC,MAAO2C,EAAA/F,QAAUwQ,OACjBqJ,YAAa9T,EAAA/F,QAAUwQ,OACvB9Q,IAAKqG,EAAA/F,QAAUwQ,QAGbsJ,cAEF,SAAAA,EAAYrT,gGAAOc,CAAAf,KAAAsT,GAAA,IAAAvP,mKAAA4D,CAAA3H,MAAAsT,EAAA1L,WAAA9R,OAAA+R,eAAAyL,IAAArd,KAAA+J,KACTC,IADS,OAEf8D,EAAKwP,YAAcxP,EAAKyP,UAAUhb,KAAfuL,GAFJA,qUAFArE,EAAAlG,QAAMmG,gDAOfiG,GACN3K,SAASC,KAAO8E,KAAKC,MAAM/G,qCAI3B,OACIwG,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,qBACVvD,MAAOoD,KAAKC,MAAMrD,MAClB1B,KAAM8E,KAAKC,MAAM/G,eAMjCoa,EAASjU,UAAYA,YAENiU,8UCjCfxc,EAAA,QACAA,EAAA,QACAA,EAAA,uDACAA,EAAA,IAEA,IAAMuI,EAAY,CACduF,SAAUrF,EAAA/F,QAAUd,OACpB4R,cAAe/K,EAAA/F,QAAU8M,KACzBiE,iBAAkBhL,EAAA/F,QAAU8M,KAC5BmN,OAAQlU,EAAA/F,QAAUgG,MAGhBkU,cAEF,SAAAA,EAAYzT,gGAAOc,CAAAf,KAAA0T,GAAA,IAAA3P,mKAAA4D,CAAA3H,MAAA0T,EAAA9L,WAAA9R,OAAA+R,eAAA6L,IAAAzd,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACT7K,MAAM,GAEV0H,EAAKkI,MAAQ,GACblI,EAAK4P,UAAY,GACjB5P,EAAK6P,gBAEL7P,EAAK2F,QAAU3F,EAAK8P,MAAMrb,KAAXuL,GAEfA,EAAK+P,aAAe/P,EAAKgQ,WAAWvb,KAAhBuL,GACpBA,EAAKiQ,gBAAkBjQ,EAAKkQ,cAAczb,KAAnBuL,GACvBA,EAAKmQ,gBAAkBnQ,EAAKoQ,cAAc3b,KAAnBuL,GAbRA,qUAFGrE,EAAAlG,QAAMmG,0DAmBxBoD,SAASwJ,iBAAiB,QAASvM,KAAKkU,gEAIxCnR,SAASqR,oBAAoB,QAASpU,KAAKkU,uDAGjCtO,GACOvM,MAAb2G,KAAKqU,OACJrU,KAAKqU,KAAKC,SAAS1O,EAAEuC,SACtBnI,KAAKiI,SAAS,CAAC5L,MAAM,6CAIb,IAAA+F,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IACZ,QAAAkJ,EAAAC,EAAmBxC,KAAKC,MAAM2E,SAAS2P,QAAvCxc,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAgD,KAAvCoS,EAAuCjS,EAAAtK,MAC5C,GAAM,SAAUuc,GAEV,aAAcA,EAAOC,KAA3B,CAEA,IAAI1d,EAAI,CACJ2d,SAAUF,EAAOC,KAAKC,SACtB9X,MAAO4X,EAAOC,KAAK7X,OAAS4X,EAAOC,KAAKC,SACxCC,MAAOH,EAAOG,OAElB,OAAOH,EAAOI,YACV,IAAK,WAAY5U,KAAK2T,UAAU9d,KAAKkB,GAAI,MACzC,IAAK,QAASiJ,KAAKiM,MAAMpW,KAAKkB,MAb1B,MAAA6L,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,kCAkBV+D,GACFrG,KAAKiI,SAAS,CAAC5L,MAAO2D,KAAKkH,MAAM7K,6CAGvBgK,GACVA,EAAM+I,iBACNpP,KAAKiI,SAAS,CAAC5L,MAAM,IACjB2D,KAAKC,MAAMsK,kBACXvK,KAAKC,MAAMsK,iBACPlE,EAAM8B,OAAO0M,aAAa,iDAI3BxO,GACPA,EAAM+I,iBACNpP,KAAKiI,SAAS,CAAC5L,MAAM,IACjB2D,KAAKC,MAAMqK,eACXtK,KAAKC,MAAMqK,cACPjE,EAAM8B,OAAO0M,aAAa,wDAIpB,IAAAtH,EAAAvN,KACd,GAA6B,GAAzBA,KAAK2T,UAAUhe,OAEnB,OACI+J,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,SAAb,aACAT,EAAAlG,QAAA0G,cAAA,SAAGR,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAK,IAAIwO,QAAS1J,KAAKgU,gBAAiBc,YAAU,IAArD,SACF9U,KAAK2T,UAAUoB,IAAI,SAAA3d,GAAA,OAChBsI,EAAAlG,QAAA0G,cAAA,KAAG3H,IAAKnB,EAAEud,OACNjV,EAAAlG,QAAA0G,cAAA,KACIhF,KAAK,IACLwO,QAAS6D,EAAKyG,gBACdc,YAAc1d,EAAEsd,SAAhB,IAA4Btd,EAAEud,OAE7Bvd,EAAEwF,iDAQb,IAAA2S,EAAAvP,KACV,KAAIA,KAAKiM,MAAMtW,QAAU,GAEzB,OACI+J,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,SAAb,SACCH,KAAKiM,MAAM8I,IAAI,SAAA3d,GAAA,OACZsI,EAAAlG,QAAA0G,cAAA,KAAG3H,IAAKnB,EAAEud,OACNjV,EAAAlG,QAAA0G,cAAA,KACIhF,KAAK,IACLwO,QAAS6F,EAAKuE,aACdgB,YAAc1d,EAAEsd,SAAhB,IAA4Btd,EAAEud,OAE7Bvd,EAAEwF,0DAQJ,IAAA8S,EAAA1P,KACnB,IAAKA,KAAKkH,MAAM7K,KACZ,OAAO,KACX,IAAIuD,GAAM,EAAAC,EAAArG,SAAW,CACjBwb,mBAAmB,EACnBC,yBAA0BjV,KAAKC,MAAMwT,SAEzC,OACI/T,EAAAlG,QAAA0G,cAAA,OACIC,UAAWP,EACXqT,IAAK,SAACA,GAAD,OAASvD,EAAKwF,mBAAqBjC,IAEvCjT,KAAKmV,kBACLnV,KAAKoV,gDAKT,IAAAlF,EAAAlQ,KACL,OAAKA,KAAKiM,MAAMtW,QAAU,GAAgC,GAAzBqK,KAAK2T,UAAUhe,OACrC,KAEP+J,EAAAlG,QAAA0G,cAAA,QACI+S,IAAK,SAACA,GAAD,OAAS/C,EAAKmE,KAAOpB,IAE1BvT,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,WAAWuJ,QAAS1J,KAAK0J,UACxC1J,KAAKqV,iCAKtB3B,EAAYrU,UAAYA,YAETqU,8UCjKf5c,EAAA,QACAA,EAAA,uDAEAA,EAAA,IAEA,IAAMuI,EAAY,CACduL,SAAUrL,EAAA/F,QAAUgD,OAAOgL,WAC3BgL,oBAAqBjT,EAAA/F,QAAU8M,KAAKkB,WACpCiL,UAAWlT,EAAA/F,QAAU8M,KAAKkB,YAGxB8N,cAEF,SAAAA,EAAYrV,gGAAOc,CAAAf,KAAAsV,GAAA,IAAAvR,mKAAA4D,CAAA3H,MAAAsV,EAAA1N,WAAA9R,OAAA+R,eAAAyN,IAAArf,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTiJ,YAAa,GAEjBpM,EAAKwR,cAAgBxR,EAAKyR,YAAYhd,KAAjBuL,GACrBA,EAAK0C,oBAAsB,KANZ1C,qUAFFrE,EAAAlG,QAAMmG,0DAYnBK,KAAKyV,gEAILjG,aAAaxP,KAAKyG,qBAClBzG,KAAKyG,oBAAsB,yCAGnBJ,GACR,IAAIqP,EAAI1V,KAAK2V,gBAAgBtP,GACzBuP,EAAO5V,KAAKC,MAAM2K,SAAW5K,KAAK6V,OAAOC,YACzCtE,EAAUxV,KAAK+Z,MAAMH,EAAKF,GAC9B1V,KAAKiI,SAAS,CACVkI,YAAaqB,IAEjBxR,KAAKC,MAAMwS,UAAUjB,4CAGR,IAAAjE,EAAAvN,KACbA,KAAKiI,SAAS,CACVkI,YAAanQ,KAAKC,MAAMuS,wBAE5BxS,KAAKyG,oBAAsBlF,WAAW,WAClCgM,EAAKkI,kBACN,+CAIH,OAASzV,KAAKkH,MAAMiJ,YAAcnQ,KAAKC,MAAM2K,SAAY,KAAKnP,WAAa,4CAG/D4K,GACRA,EAAMvB,KAAKkR,MAAM,YACjB3P,EAAQA,EAAM4P,cAAcC,QAAQ,IAChC7P,EAAM4P,cAAcE,eAAe,IAG3C,IAAIC,EAAa,EACbvF,EAAO7Q,KAAK6V,OAChB,GACSQ,MAAOxF,EAAKuF,cACbA,GAAcvF,EAAKuF,kBAEnBvF,EAAOA,EAAKyF,cAEpB,IAAIZ,EAAIrP,EAAMkQ,QAAUH,EAGxB,OAFIV,EAAI1V,KAAK6V,OAAOC,cAChBJ,EAAI1V,KAAK6V,OAAOC,aACbJ,mCAGF,IAAAnG,EAAAvP,KACL,OACIN,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,wBAAwBuJ,QAAS1J,KAAKuV,eACjD7V,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,SACV8S,IAAK,SAACA,GAAD,OAAS1D,EAAKsG,OAAS5C,IAE5BvT,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,WACVsR,MAAO,CAAC+E,MAAOxW,KAAKyW,gCAO5CnB,EAAOjW,UAAYA,YAEJiW,8UC5Ffxe,EAAA,QACAA,EAAA,wDAEAA,EAAA,QAEM4f,cAEF,SAAAA,EAAYzW,gGAAOc,CAAAf,KAAA0W,GAAA,IAAA3S,mKAAA4D,CAAA3H,MAAA0W,EAAA9O,WAAA9R,OAAA+R,eAAA6O,IAAAzgB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTyP,WAAW,EACXC,WAAW,GAJA7S,qUAFMrE,EAAAlG,QAAMmG,0DAW3BK,KAAK6W,YAAc7W,KAAK2W,UAAUne,KAAKwH,MACvCA,KAAK8W,kBAAoB9W,KAAK+W,gBAAgBve,KAAKwH,MACnDA,KAAK0B,KAAO,IAAAuH,EAAAzP,QACZwG,KAAK0B,KAAKgM,KAAK1N,KAAKgX,WAAWxe,KAAKwH,OACpCA,KAAKiX,UAAYjX,KAAKkX,cAAc1e,KAAKwH,qDAIzCA,KAAK0B,KAAK0S,oBAAoB,cAAepU,KAAK6W,kDAIlD7W,KAAK0B,KAAK6K,iBAAiB,cAAevM,KAAK6W,aAC/C7W,KAAK0B,KAAK6K,iBAAiB,cAAevM,KAAK8W,2DAGnClR,GACZ5F,KAAKiI,SAAS,CAAC2O,UAAWhR,EAAE3N,0CAGtB2N,GACN5F,KAAKiI,SAAS,CAAC0O,UAAW/Q,EAAE3N,8CAGlBoO,GACVrG,KAAK0B,KAAKyB,kDAIV,IAAKnD,KAAKkH,MAAM0P,UACZ,OAAO,KACX,IAAIvC,EAAO,6BAGX,OAFIrU,KAAKkH,MAAMyP,YACXtC,EAAO,wCAEP3U,EAAAlG,QAAA0G,cAAA,OACIwJ,QAAS1J,KAAKiX,UACdra,MAAM,aACNuD,UAAU,aACV6C,IAAKqR,uBAMNqC,6VC7Df5f,EAAA,QACAA,EAAA,QACAA,EAAA,MACAwJ,EAAAxJ,EAAA,sDAEA,IAAMuI,EAAY,CACdhD,KAAMkD,EAAA/F,QAAUd,QAGdye,EAAY,CACd,CACI5e,IAAO,OACPqE,MAAS,OACTwa,UAAY,EACZC,eAAiB,EACjBC,mBAAqB,GAEzB,CACI/e,IAAO,SACPqE,MAAS,SACTwa,UAAY,EACZC,eAAiB,EACjBC,mBAAqB,GAEzB,CACI/e,IAAO,UACPqE,MAAS,UACTwa,UAAY,EACZC,eAAiB,EACjBC,mBAAqB,IAIvBC,EAAgB,CAClB,OACA,YAGEC,cAEF,SAAAA,EAAYvX,gGAAOc,CAAAf,KAAAwX,GAAA,IAAAzT,mKAAA4D,CAAA3H,MAAAwX,EAAA5P,WAAA9R,OAAA+R,eAAA2P,IAAAvhB,KAAA+J,KACTC,IACN8D,EAAK0T,mBAAqB1T,EAAK2T,iBAAiBlf,KAAtBuL,GAC1BA,EAAK4T,cAAgB5T,EAAK6T,aAAapf,KAAlBuL,GACrB,IAAI1H,EAAO4D,EAAM5D,MAAQ,GACrBwb,EAAgBxb,EAAK8a,WAAa,GAClCW,EAAYzb,EAAKyb,WAAa,GAElC/T,EAAKmD,MAAQ,CACT6Q,iBAAkBD,EAAU5N,MAAQ,GACpC8N,qBAAsBF,EAAUG,UAAY,GAC5CC,mBAAoB7b,EAAK6b,mBAAmB7b,EAAK6b,mBAAmBlf,QAAQ,GAC5EuD,aAAcF,EAAKE,cAAgB,GAZxB,IAAA6F,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAcf,QAAAkJ,EAAAC,EAAqB2U,EAArBpf,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAgC,KAAvB+V,EAAuB5V,EAAAtK,MAC5B8L,EAAKmD,MAAL,aAAwBiR,EAAS5f,KAASsf,EAAcM,EAAS5f,MAAQ,IAf9D,MAAAqK,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAAA,OAAAyB,qUAFErE,EAAAlG,QAAMmG,uDAqBViG,GACb,IAAI7O,EAAI,GACRA,EAAE6O,EAAEuC,OAAO3Q,MAAQoO,EAAEuC,OAAOlQ,MAFZ,IAAAmgB,GAAA,EAAAC,GAAA,EAAAC,OAAAjf,EAAA,IAGhB,QAAAkf,EAAAC,EAAiBjB,EAAjBxf,OAAA0K,cAAA2V,GAAAG,EAAAC,EAAA9V,QAAAC,MAAAyV,GAAA,EAAgC,KAAvBtT,EAAuByT,EAAAtgB,MACxB,aAAa6M,GAAUc,EAAEuC,OAAO3Q,OAEI,KAApCwI,KAAKkH,MAAL,aAAwBpC,KACxB/N,eAAe+N,GAAUc,EAAEuC,OAAOlQ,SAP1B,MAAA2K,GAAAyV,GAAA,EAAAC,EAAA1V,EAAA,aAAAwV,GAAAI,EAAA3V,QAAA2V,EAAA3V,SAAA,WAAAwV,EAAA,MAAAC,GAUhBtY,KAAKiI,SAASlR,wCAGL6O,GACT,IAAI7O,EAAI,GACJS,EAAOoO,EAAEuC,OAAO3Q,KAChBS,EAAQ2N,EAAEuC,OAAOlQ,MAGrB,GAFAlB,EAAES,GAAQS,EACV+H,KAAKiI,SAASlR,GACTS,EAAKsC,WAAW,eAA4B,IAAT7B,EAAc,CAClD,IAAIqB,EAAQ,GACZA,EAAM9B,EAAKwF,UAAUxF,EAAKyC,QAAQ,KAAK,EAAGzC,EAAK7B,SAAWsC,EAC1D+H,KAAKyY,gBAAgBnf,4CAIbA,GAAO,IAAAiU,EAAAvN,MACnB,EAAAM,EAAArH,SAAQ,0BAA2B,CAC/BU,cAAa,EACbL,MAAOA,IACRqJ,KAAK,SAAAxN,GACJ,IAAI4B,EAAI,CAAC2hB,mBAAoBvjB,EAAK0d,IAClC,IAAK,IAAIta,KAAOpD,EAAKgiB,UACb,aAAa5e,KAASgV,EAAKrG,QAC3BnQ,eAAewB,GAASpD,EAAKgiB,UAAU5e,IAG/CgV,EAAKtF,SAASlR,4CAIP+N,GACX,IAAIgT,EAAY,GADCa,GAAA,EAAAC,GAAA,EAAAC,OAAAxf,EAAA,IAEjB,QAAAyf,EAAAC,EAAqB5B,EAArBpf,OAAA0K,cAAAkW,GAAAG,EAAAC,EAAArW,QAAAC,MAAAgW,GAAA,EAAgC,KAAvBR,EAAuBW,EAAA7gB,MACxBkgB,EAAS,YAAYrT,IACrBgT,EAAUjiB,KAAKsiB,IAJN,MAAAvV,GAAAgW,GAAA,EAAAC,EAAAjW,EAAA,aAAA+V,GAAAI,EAAAlW,QAAAkW,EAAAlW,SAAA,WAAA+V,EAAA,MAAAC,GAOjB,OACInZ,EAAAlG,QAAA0G,cAAA,YAAUC,UAAU,aAAa5H,IAAKuM,GAClCpF,EAAAlG,QAAA0G,cAAA,uBAAe4E,EAAf,SACApF,EAAAlG,QAAA0G,cAAA,UACI1I,KAAM,aAAasN,EACnB3E,UAAU,yBACVmI,SAAUtI,KAAKyX,mBACfxf,MAAO+H,KAAKkH,MAAL,aAAwBpC,IAE/BpF,EAAAlG,QAAA0G,cAAA,UAAQjI,MAAM,KACb6f,EAAU/C,IAAI,SAACoD,GAAD,OACXzY,EAAAlG,QAAA0G,cAAA,UAAQ3H,IAAK4f,EAAS5f,IAAKN,MAAOkgB,EAAS5f,KACtC4f,EAASvb,qDAQhB,IAAA2S,EAAAvP,KACd,OACImX,EAAUpC,IAAI,SAACoD,GAAD,OACVzY,EAAAlG,QAAA0G,cAAA,YAAU3H,IAAK4f,EAAS5f,IAAK4H,UAAU,cACnCT,EAAAlG,QAAA0G,cAAA,aAAQiY,EAASvb,MAAjB,OAA4Bub,EAASf,SAAS1X,EAAAlG,QAAA0G,cAAA,cAAS,IACvDR,EAAAlG,QAAA0G,cAAA,SACI1I,KAAA,aAAmB2gB,EAAS5f,IAC5B4H,UAAU,eACViX,SAAUe,EAASf,SACnBnf,MAAOsX,EAAKrI,MAAL,aAAwBiR,EAAS5f,KACxC+P,SAAUiH,EAAKoI,gBAElBQ,EAASf,SACN1X,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,cAAjB,0CACA,uCAOX,IAAAuP,EAAA1P,KACL,OACIN,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,YACXT,EAAAlG,QAAA0G,cAAA,uBACCF,KAAKgZ,kBAENtZ,EAAAlG,QAAA0G,cAAA,uBACCqX,EAAcxC,IAAI,SAACjQ,GAAD,OACf4K,EAAKuJ,eAAenU,MAI5BpF,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,YACXT,EAAAlG,QAAA0G,cAAA,qBACAR,EAAAlG,QAAA0G,cAAA,YAAUC,UAAU,cAChBT,EAAAlG,QAAA0G,cAAA,mCACAR,EAAAlG,QAAA0G,cAAAgZ,EAAA1f,QAAA,CACIL,QAAS6G,KAAKkH,MAAMgR,sBAI5BxY,EAAAlG,QAAA0G,cAAA,YAAUC,UAAU,cAChBT,EAAAlG,QAAA0G,cAAA,6BACAR,EAAAlG,QAAA0G,cAAA,UACI1I,KAAK,eACL2I,UAAU,eACVgZ,aAAcnZ,KAAKkH,MAAM3K,cAEzBmD,EAAAlG,QAAA0G,cAAA,UAAQjI,MAAM,KAAd,mBACAyH,EAAAlG,QAAA0G,cAAA,UAAQjI,MAAM,KAAd,kBACAyH,EAAAlG,QAAA0G,cAAA,UAAQjI,MAAM,KAAd,yBAQ5Buf,EAAWnY,UAAYA,YAERmY,mWC7Lf1gB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEAA,EAAA,IAEA,IAAMuI,EAAY,CACd+Z,MAAO7Z,EAAA/F,QAAU6f,MAAM7R,WACvB8R,eAAgB/Z,EAAA/F,QAAUgG,MAOxB+Z,grBAAa7Z,EAAAlG,QAAMmG,iDAEVtD,GACP,OACIqD,EAAAlG,QAAA0G,cAAA,OAAK3H,IAAK8D,EAAKwW,GAAI1S,UAAU,+CACzBT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAemB,EAAKwW,IACnBnT,EAAAlG,QAAA0G,cAAA,OACItD,MAAOP,EAAKO,MACZ4c,IAAKnd,EAAKO,MACVoG,IAAwB,MAAnB3G,EAAKod,aAAmBpd,EAAKod,aAAavgB,IAAM,SAAS,GAC9DiH,UAAU,iDAOrB,IAAAoN,EAAAvN,KACD1I,GAAI,EAAAuI,EAAArG,SAAW,CACfkgB,KAAK,EACL7D,OAAU7V,KAAKC,MAAMqZ,iBAEzB,OACI5Z,EAAAlG,QAAA0G,cAAA,OAAKC,UAAW7I,GACX0I,KAAKC,MAAMmZ,MAAMrE,IAAI,SAAA1Y,GAAA,OAClBkR,EAAKoM,WAAWtd,eAMpCkd,EAAKla,UAAYA,EACjBka,EAAKnZ,aApCgB,CACjBkZ,gBAAgB,aAqCLC,8VCgCCK,mBAjFhB,QAAA9iB,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,sDAEAA,EAAA,IAEA,IAAMuI,EAAY,CACdwa,QAASta,EAAA/F,QAAUgD,OACnB0L,KAAM3I,EAAA/F,QAAUgD,OAChBsd,MAAOva,EAAA/F,QAAU6f,OASfU,cAEF,SAAAA,EAAY9Z,gGAAOc,CAAAf,KAAA+Z,GAAA,IAAAhW,mKAAA4D,CAAA3H,MAAA+Z,EAAAnS,WAAA9R,OAAA+R,eAAAkS,IAAA9jB,KAAA+J,OAAA,OAEf+D,EAAKmD,MAAQ,CACT4S,MAAO,IAHI/V,qUAFKrE,EAAAlG,QAAMmG,0DAUrBK,KAAKC,MAAM6Z,MAGZ9Z,KAAKiI,SAAS,CAAC6R,MAAO9Z,KAAKC,MAAM6Z,QAFjC9Z,KAAKga,4CAMH,IAAAzM,EAAAvN,KACN4Z,EAAiB5Z,KAAKC,MAAM4Z,QAAS7Z,KAAKC,MAAMiI,MAAM1D,KAAK,SAACrP,GACxDoY,EAAKtF,SAAS,CAAC6R,MAAO3kB,EAAK2kB,6CAIxBG,GACP,IAAI5d,EAAO4d,EAAK5d,KACZC,EAAU2d,EAAK3d,QACnB,OACIoD,EAAAlG,QAAA0G,cAAA,OAAK3H,IAAK8D,EAAKwW,GAAI1S,UAAU,sCACzBT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAemB,EAAKwW,IACnBnT,EAAAlG,QAAA0G,cAAA,OACItD,MAAOP,EAAKO,MACZ4c,IAAKnd,EAAKO,MACVoG,IAAwB,MAAnB3G,EAAKod,aAAmBpd,EAAKod,aAAavgB,IAAM,SAAS,GAC9DiH,UAAU,eAGlBT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cAAa,EAAAI,EAAAnE,eAAcC,EAAMC,sCAKnD,IAAAiT,EAAAvP,KACL,OAA+B,GAA3BA,KAAKkH,MAAM4S,MAAMnkB,OAEb+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBAAf,2DAKJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACVH,KAAKkH,MAAM4S,MAAM/E,IAAI,SAAAkF,GAAA,OAClB1K,EAAK2K,WAAWD,eAW7B,SAASL,EAAiBC,EAAS3R,GACtC,OAAO,IAAIlE,QAAQ,SAACC,EAASC,IACzB,EAAA5D,EAAArH,SAAA,aAAoB,EAAAsH,EAAArE,aAApB,wBAAwD,CACpD5C,MAAO,CACH6gB,SAAYN,EACZ3R,KAAMA,KAEXvF,KAAK,SAACxN,EAAMilB,EAAY7S,GACvBtD,EAAQ,CAAC6V,MAAO3kB,EAAMoS,MAAOA,MAC9BkJ,KAAK,SAAC7K,GACL1B,EAAO0B,OAfnBmU,EAAc1a,UAAYA,EAC1B0a,EAAc3Z,aAhEO,CACjByZ,QAAS,EACT3R,KAAM,EACN4R,MAAO,gBA+DIC,4UCFCM,aA7EhB,QAAAvjB,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,sDAEA,IAAMuI,EAAY,CACdwa,QAASta,EAAA/F,QAAUgD,OACnB0L,KAAM3I,EAAA/F,QAAUgD,OAChBsd,MAAOva,EAAA/F,QAAU6f,OASfiB,cAEF,SAAAA,EAAYra,gGAAOc,CAAAf,KAAAsa,GAAA,IAAAvW,mKAAA4D,CAAA3H,MAAAsa,EAAA1S,WAAA9R,OAAA+R,eAAAyS,IAAArkB,KAAA+J,OAAA,OAEf+D,EAAKmD,MAAQ,CACTkS,MAAO,IAHIrV,qUAFDrE,EAAAlG,QAAMmG,0DAUfK,KAAKC,MAAM6Z,MAGZ9Z,KAAKiI,SAAS,CAACmR,MAAOpZ,KAAKC,MAAM6Z,QAFjC9Z,KAAKga,4CAMH,IAAAzM,EAAAvN,KACNqa,EAAWra,KAAKC,MAAM4Z,QAAS7Z,KAAKC,MAAMiI,MAAM1D,KAAK,SAACrP,GAClDoY,EAAKtF,SAAS,CAACmR,MAAOjkB,EAAK2kB,6CAIxBzd,EAAMC,GACb,OACIoD,EAAAlG,QAAA0G,cAAA,OAAK3H,IAAK8D,EAAKwW,GAAI1S,UAAU,sCACzBT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAemB,EAAKwW,IACnBnT,EAAAlG,QAAA0G,cAAA,OACItD,MAAOP,EAAKO,MACZ4c,IAAKnd,EAAKO,MACVoG,IAAwB,MAAnB3G,EAAKod,aAAmBpd,EAAKod,aAAavgB,IAAM,SAAS,GAC9DiH,UAAU,eAGlBT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cAAa,EAAAI,EAAAnE,eAAcC,EAAMC,sCAKnD,IAAAiT,EAAAvP,KACL,OAA+B,GAA3BA,KAAKkH,MAAMkS,MAAMzjB,OAEb+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBAAf,uCAKJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACVH,KAAKkH,MAAMkS,MAAMrE,IAAI,SAAAkF,GAAA,OAClB1K,EAAKoK,WAAWM,EAAMA,EAAKM,cAAcje,qBAWtD,SAAS+d,EAAWR,EAAS3R,GAChC,OAAO,IAAIlE,QAAQ,SAACC,EAASC,IACzB,EAAA5D,EAAArH,SAAA,aAAoB,EAAAsH,EAAArE,aAApB,iBAAiD,CAC7C5C,MAAO,CACH6gB,SAAYN,EACZ3R,KAAMA,KAEXvF,KAAK,SAACxN,EAAMilB,EAAY7S,GACvBtD,EAAQ,CAAC6V,MAAO3kB,EAAMoS,MAAOA,MAC9BkJ,KAAK,SAAC7K,GACL1B,EAAO0B,OAfnB0U,EAAQjb,UAAYA,EACpBib,EAAQla,aA9Da,CACjByZ,QAAS,EACT3R,KAAM,EACN4R,MAAO,gBA6DIQ,4UCGCE,eA9EhB,QAAA1jB,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,sDAEA,IAAMuI,EAAY,CACdwa,QAASta,EAAA/F,QAAUgD,OACnB0L,KAAM3I,EAAA/F,QAAUgD,OAChBsd,MAAOva,EAAA/F,QAAU6f,OASfoB,cAEF,SAAAA,EAAYxa,gGAAOc,CAAAf,KAAAya,GAAA,IAAA1W,mKAAA4D,CAAA3H,MAAAya,EAAA7S,WAAA9R,OAAA+R,eAAA4S,IAAAxkB,KAAA+J,OAAA,OAEf+D,EAAKmD,MAAQ,CACT4S,MAAO,IAHI/V,qUAFCrE,EAAAlG,QAAMmG,0DAUjBK,KAAKC,MAAM6Z,MAGZ9Z,KAAKiI,SAAS,CAAC6R,MAAO9Z,KAAKC,MAAM6Z,QAFjC9Z,KAAKga,4CAMH,IAAAzM,EAAAvN,KACNwa,EAAaxa,KAAKC,MAAM4Z,QAAS7Z,KAAKC,MAAMiI,MAAM1D,KAAK,SAACrP,GACpDoY,EAAKtF,SAAS,CAAC6R,MAAO3kB,EAAK2kB,6CAIxBzd,EAAMC,GACb,OACIoD,EAAAlG,QAAA0G,cAAA,OAAK3H,IAAK8D,EAAKwW,GAAI1S,UAAU,sCACzBT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,aAAf,OAA+B,EAAAI,EAAAjD,YAAWhB,EAAQoe,eAClDhb,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAemB,EAAKwW,IACnBnT,EAAAlG,QAAA0G,cAAA,OACItD,MAAOP,EAAKO,MACZ4c,IAAKnd,EAAKO,MACVoG,IAAwB,MAAnB3G,EAAKod,aAAmBpd,EAAKod,aAAavgB,IAAM,SAAS,GAC9DiH,UAAU,eAGlBT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cAAa,EAAAI,EAAAnE,eAAcC,EAAMC,sCAKnD,IAAAiT,EAAAvP,KACL,OAA+B,GAA3BA,KAAKkH,MAAM4S,MAAMnkB,OAEb+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBAAf,yDAKJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACVH,KAAKkH,MAAM4S,MAAM/E,IAAI,SAAAkF,GAAA,OAClB1K,EAAKoK,WAAWM,EAAK5d,KAAM4d,EAAK3d,qBAW7C,SAASke,EAAaX,EAAS3R,GAClC,OAAO,IAAIlE,QAAQ,SAACC,EAASC,IACzB,EAAA5D,EAAArH,SAAA,aAAoB,EAAAsH,EAAArE,aAApB,mBAAmD,CAC/C5C,MAAO,CACH6gB,SAAYN,EACZ3R,KAAMA,KAEXvF,KAAK,SAACxN,EAAMilB,EAAY7S,GACvBtD,EAAQ,CAAC6V,MAAO3kB,EAAMoS,MAAOA,MAC9BkJ,KAAK,SAAC7K,GACL1B,EAAO0B,OAfnB6U,EAAUpb,UAAYA,EACtBob,EAAUra,aA/DW,CACjByZ,QAAS,EACT3R,KAAM,EACN4R,MAAO,gBA8DIW,4UCGCE,qBA/EhB,QAAA7jB,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,sDAEA,IAAMuI,EAAY,CACdwa,QAASta,EAAA/F,QAAUgD,OACnB0L,KAAM3I,EAAA/F,QAAUgD,OAChBsd,MAAOva,EAAA/F,QAAU6f,OASfuB,cAEF,SAAAA,EAAY3a,gGAAOc,CAAAf,KAAA4a,GAAA,IAAA7W,mKAAA4D,CAAA3H,MAAA4a,EAAAhT,WAAA9R,OAAA+R,eAAA+S,IAAA3kB,KAAA+J,OAAA,OAEf+D,EAAKmD,MAAQ,CACT4S,MAAO,IAHI/V,qUAFOrE,EAAAlG,QAAMmG,0DAUvBK,KAAKC,MAAM6Z,MAGZ9Z,KAAKiI,SAAS,CAAC6R,MAAO9Z,KAAKC,MAAM6Z,QAFjC9Z,KAAKga,4CAMH,IAAAzM,EAAAvN,KACN2a,EAAmB3a,KAAKC,MAAM4Z,QAAS7Z,KAAKC,MAAMiI,MAAM1D,KAAK,SAACrP,GAC1DoY,EAAKtF,SAAS,CAAC6R,MAAO3kB,EAAK2kB,6CAIxBG,GACP,IAAI5d,EAAO4d,EAAK5d,KACZC,EAAU2d,EAAK3d,QACnB,OACIoD,EAAAlG,QAAA0G,cAAA,OAAK3H,IAAK8D,EAAKwW,GAAI1S,UAAU,sCACzBT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAemB,EAAKwW,IACnBnT,EAAAlG,QAAA0G,cAAA,OACItD,MAAOP,EAAKO,MACZ4c,IAAKnd,EAAKO,MACVoG,IAAwB,MAAnB3G,EAAKod,aAAmBpd,EAAKod,aAAavgB,IAAM,SAAS,GAC9DiH,UAAU,eAGlBT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cAAa,EAAAI,EAAAnE,eAAcC,EAAMC,sCAKnD,IAAAiT,EAAAvP,KACL,OAA+B,GAA3BA,KAAKkH,MAAM4S,MAAMnkB,OAEb+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBAAf,uCAKJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACVH,KAAKkH,MAAM4S,MAAM/E,IAAI,SAAAkF,GAAA,OAClB1K,EAAK2K,WAAWD,eAW7B,SAASU,EAAmBd,EAAS3R,GACxC,OAAO,IAAIlE,QAAQ,SAACC,EAASC,IACzB,EAAA5D,EAAArH,SAAA,aAAoB,EAAAsH,EAAArE,aAApB,aAA6C,CACzC5C,MAAO,CACH6gB,SAAYN,EACZ3R,KAAMA,KAEXvF,KAAK,SAACxN,EAAMilB,EAAY7S,GACvBtD,EAAQ,CAAC6V,MAAO3kB,EAAMoS,MAAOA,MAC9BkJ,KAAK,SAAC7K,GACL1B,EAAO0B,OAfnBgV,EAAgBvb,UAAYA,EAC5Bub,EAAgBxa,aAhEK,CACjByZ,QAAS,EACT3R,KAAM,EACN4R,MAAO,gBA+DIc,iFC7Ef9jB,EAAA,IACAA,EAAA,IAEA,MAAAwJ,EAAAxJ,EAAA,GACA+jB,EAAA/jB,EAAA,kDAEc,CACVgkB,MAAOC,EAAQ,GACfC,SAAUD,EAAQ,IAClBE,EAAGF,EAAQ,GACX/V,OAAQ,CACJkW,OAAQH,EAAQ,IAChBhhB,sCACAohB,OAAQJ,EAAQ,KAChBja,4YCdRhK,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEAA,EAAA,IAEA,IAAMuI,EAAY,CACdiJ,SAAU/I,EAAA/F,QAAU8M,MAGlB8U,cAEF,SAAAA,EAAYnb,gGAAOc,CAAAf,KAAAob,GAAA,IAAArX,mKAAA4D,CAAA3H,MAAAob,EAAAxT,WAAA9R,OAAA+R,eAAAuT,IAAAnlB,KAAA+J,KACTC,IADS,OAEf8D,EAAKsX,kBAAoBtX,EAAKuX,gBAAgB9iB,KAArBuL,GACzBA,EAAKwR,cAAgBxR,EAAKyR,YAAYhd,KAAjBuL,GACrBA,EAAKwX,YAAcxX,EAAKkT,UAAUze,KAAfuL,GAEnBA,EAAKmD,MAAQ,CACTsU,QAA+C,KAArCnhB,aAAaC,QAAQ,WAAa,GAC5C+B,MAAM,EACNof,OAAO,GAEX1X,EAAKmQ,gBAAkBnQ,EAAKoQ,cAAc3b,KAAnBuL,GAXRA,qUAFCrE,EAAAlG,QAAMmG,0DAiBtB,IAAI4L,EAASlR,aAAaC,QAAQ,WAAa,EAC3C0F,KAAKC,MAAMqI,UACXtI,KAAKC,MAAMqI,SAASiD,GACxBxI,SAASwJ,iBAAiB,QAASvM,KAAKkU,gEAIxCnR,SAASqR,oBAAoB,QAASpU,KAAKkU,uDAGjCtO,GACL5F,KAAKqU,KAAKC,SAAS1O,EAAEuC,SACtBnI,KAAKiI,SAAS,CAAC5L,MAAM,4CAIbgK,GACS,GAAjBA,EAAMqV,SACV1b,KAAKuV,cAAclP,uCAGXA,GACRA,EAAM+I,iBACN/I,EAAMsV,kBACN,IAAIC,EAAWvV,EAAM8B,OAAO0T,cAAc,aACtCC,EAAIzV,EAAM0V,QACdD,GAAKzV,EAAM8B,OAAO6T,UAAYJ,EAASI,WACvCF,EAAIF,EAASK,aAAeH,GACpBF,EAASK,eACbH,EAAIF,EAASK,cACbH,EAAI,IACJA,EAAI,GACR,IACIvQ,EADO,EAAIqQ,EAASK,aACNH,EACdvQ,EAAS,IACTA,EAAS,GACbvL,KAAKiI,SAAS,CAACuT,QAAgB,IAAPjQ,IACpBvL,KAAKC,MAAMqI,UACXtI,KAAKC,MAAMqI,SAASiD,GACxBlR,aAAa6hB,QAAQ,SAAU3Q,qCAGzBlF,GACNrG,KAAKiI,SAAS,CAAC5L,MAAO2D,KAAKkH,MAAM7K,2CAIjC,GAAK2D,KAAKkH,MAAM7K,KAChB,OACIqD,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,gBACVgc,YAAanc,KAAKqb,kBAClB3R,QAAS1J,KAAKuV,eAEd7V,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,YACXT,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,sBACVsR,MAAO,CAAC2K,OAAQpc,KAAKkH,MAAMsU,QAAQ,OAEvC9b,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,gBACVsR,MAAO,CAACgC,OAAQzT,KAAKkH,MAAMsU,QAAQ,0CAO9C,IAAAjO,EAAAvN,KACDuL,GAAS,EAAA1L,EAAArG,SAAW,CACpByY,IAAI,EACJoK,eAAiBrc,KAAKkH,MAAMsU,SAAW,KAAQxb,KAAKkH,MAAMuU,MAC1Da,iBAAmBtc,KAAKkH,MAAMsU,QAAU,IACnCxb,KAAKkH,MAAMsU,SAAW,IAAOxb,KAAKkH,MAAMuU,MAC7Cc,gBAAkBvc,KAAKkH,MAAMsU,QAAU,GAAMxb,KAAKkH,MAAMuU,QAE5D,OACI/b,EAAAlG,QAAA0G,cAAA,QACIC,UAAWoL,EACX7B,QAAS1J,KAAKub,YACdtI,IAAK,SAACA,GAAD,OAAS1F,EAAK8G,KAAOpB,IAEzBjT,KAAKwc,sBAMtBpB,EAAU/b,UAAYA,YAEP+b,4MCrHf,QAAAtkB,EAAA,IACA2lB,EAAA3lB,EAAA,OAEAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UAEAA,EAAA,UAEAA,EAAA,UACAA,EAAA,UACAA,EAAA,UAEAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,mEAGI4I,EAAAlG,QAAA0G,cAAAuc,EAAAC,OAAA,CAAQC,QAAAF,EAAAG,gBACJld,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,WAAWC,UAAAC,EAAAxjB,UACvBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,YAAYC,UAAAE,EAAAzjB,UACxBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,eAAeC,UAAAG,EAAA1jB,UAC3BkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,gBAAgBC,UAAAI,EAAA3jB,SACxBkG,EAAAlG,QAAA0G,cAAAuc,EAAAW,cAAA,CAAeC,GAAG,uBAClB3d,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,OAAOC,UAAAO,EAAA9jB,UACnBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,OAAOC,UAAAQ,EAAA/jB,UACnBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,UAAUC,UAAAS,EAAAhkB,UACtBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,QAAQC,UAAAU,EAAAjkB,UACpBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,OAAOC,UAAAW,EAAAlkB,WAEvBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,qCAAqCC,UAAAY,EAAAnkB,UACjDkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,YAAYC,UAAAa,EAAApkB,UACxBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,UAAUC,UAAAc,EAAArkB,UACtBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,kBAAkBC,UAAAe,EAAAtkB,UAC9BkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,iBAAiBC,UAAAgB,EAAAvkB,UAC7BkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,aAAaC,UAAAiB,EAAAxkB,UACzBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,qBAAqBC,UAAAkB,EAAAzkB,UACjCkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,QAAQC,UAAAmB,EAAA1kB,UACpBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,aAAaC,UAAAoB,EAAA3kB,UACzBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,WAAWC,UAAAqB,EAAA5kB,UACvBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,YAAYC,UAAAsB,EAAA7kB,UACxBkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,gBAAgBC,UAAAuB,EAAA9kB,UAC5BkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,eAAeC,UAAAwB,EAAA/kB,UAC3BkG,EAAAlG,QAAA0G,cAAAuc,EAAAI,MAAA,CAAOC,KAAK,oBAAoBC,UAAAyB,EAAAhlB,iXCxDxC1C,EAAA,QACAA,EAAA,OACAA,EAAA,GACAA,EAAA,KAEAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEAA,EAAA,KAEA,IAAMuI,EAAY,CACdof,OAAQlf,EAAA/F,QAAUd,OAAO8O,YAGvBkX,cAEF,SAAAA,EAAYze,gGAAOc,CAAAf,KAAA0e,GAAA,IAAA3a,mKAAA4D,CAAA3H,MAAA0e,EAAA9W,WAAA9R,OAAA+R,eAAA6W,IAAAzoB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACT7K,KAAM0G,SAAS4b,gBAHJ5a,qUAFJrE,EAAAlG,QAAMmG,mDAUjB,IAAItD,EAAO2D,KAAKkH,MAAM7K,KACtB,OACIqD,EAAAlG,QAAA0G,cAAA,WACIR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,sBACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,sBACXT,EAAAlG,QAAA0G,cAAA0e,EAAAplB,QAAA,CAAWqK,OAAQxH,EAAKwW,MAE5BnT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,SACV9D,EAAKO,MADV,IAGI8C,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,cAA8B,MAAhB9D,EAAKwiB,UAAgBxiB,EAAKwiB,UAAU7hB,UAAU,EAAE,GAAG,MAI1F0C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,wDACXT,EAAAlG,QAAA0G,cAAA,OACI8C,IAAwB,MAAnB3G,EAAKod,aAAmBpd,EAAKod,aAAavgB,IAAM,SAAS,GAC9Dsd,MAAM,UAGd9W,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBAEfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,mBACXT,EAAAlG,QAAA0G,cAAA4e,EAAAtlB,QAAA,CAASqK,OAAQgH,SAAS7K,KAAKkH,MAAM7K,KAAKwW,MACzCnT,EAAAlG,QAAMulB,aAAa/e,KAAKC,MAAM+e,SAAU,CAAC3iB,KAAMA,qDAWhE,OAHAkF,WAAW,WACPtG,SAASgkB,UACV,KAECvf,EAAAlG,QAAA0G,cAAA,cACIR,EAAAlG,QAAA0G,cAAA,uDACAR,EAAAlG,QAAA0G,cAAA,+BACAR,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,kBACVjF,KAAA,SAAe8E,KAAKkH,MAAM7K,KAAKwW,GAA/B,SAFJ,aAMAnT,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,wCAMR,OAAKwG,KAAKkH,MAAM7K,KAMe,GAA1B2D,KAAKkH,MAAM7K,KAAKxB,QACZmF,KAAKC,MAAMhF,SAASikB,SAASC,SAAS,UACL,MAAlCnf,KAAKkH,MAAM7K,KAAKyb,UAAU5N,KAIvBlK,KAAK2Z,aAHL3Z,KAAKof,sBAPR1f,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,eAchBklB,EAAKrf,UAAYA,YAEFqf,8UC/Ff5nB,EAAA,QACAA,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,sDAEAA,EAAA,KAEA,IAAMuI,EAAY,CACdwE,OAAQtE,EAAA/F,QAAUgD,OAAOgL,WACzB6X,MAAO9f,EAAA/F,QAAUgG,MAGf8f,cAEF,SAAAA,EAAYrf,gGAAOc,CAAAf,KAAAsf,GAAA,IAAAvb,mKAAA4D,CAAA3H,MAAAsf,EAAA1X,WAAA9R,OAAA+R,eAAAyX,IAAArpB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTmY,MAAOpf,EAAMof,OAEjBtb,EAAK2F,QAAU3F,EAAK2F,QAAQlR,KAAbuL,GALAA,qUAFCrE,EAAAlG,QAAMmG,0DAWEtG,MAApB2G,KAAKC,MAAMof,OACXrf,KAAKuf,2CAGL3Z,GAAG,IAAA2H,EAAAvN,KACP4F,EAAEwJ,iBACFpP,KAAKiI,SAAS,CAACoX,OAAQrf,KAAKkH,MAAMmY,SAClC,EAAA/e,EAAArH,SAAA,aAAoB,EAAAsH,EAAArE,aAApB,WAA0C8D,KAAKC,MAAM4D,OAAU,CAC3DnK,OAAQsG,KAAKkH,MAAMmY,MAAM,SAAS,QACnC5O,KAAK,WACJlD,EAAKtF,SAAS,CAACoX,OAAQ9R,EAAKrG,MAAMmY,6CAI/B,IAAA9P,EAAAvP,MACF,EAAAO,EAAAnF,cAEL,EAAAkF,EAAArH,SAAA,aACgB,EAAAsH,EAAArE,aADhB,WACsC2O,SAAS7K,KAAKC,MAAM4D,SACxDlB,KAAK,SAAA6c,GACHjQ,EAAKtH,SAAS,CAACoX,MAAOG,EAAOA,4CAKjC,IAAIC,GAAW,EAAA5f,EAAArG,SAAW,CACtBkmB,KAAK,EACLC,WAAW,EACXC,kBAAmB5f,KAAKkH,MAAMmY,QAElC,OACI3f,EAAAlG,QAAA0G,cAAA,UACIC,UAAWsf,EACX/V,QAAS1J,KAAK0J,QACd9M,MAAOoD,KAAKkH,MAAMmY,MAAM,QAAQ,eAChCQ,aAAY7f,KAAKkH,MAAMmY,MAAM,QAAQ,gBAEpCrf,KAAKkH,MAAMmY,MACR3f,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,eAEhBT,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,2BAMpCmf,EAAUjgB,UAAYA,YAEPigB,iWCxEfxoB,EAAA,QACAA,EAAA,IACA2lB,EAAA3lB,EAAA,sDAEAA,EAAA,KAEA,IAAIuI,EAAY,CACZwE,OAAQtE,EAAA/F,QAAUgD,OAAOgL,YAGvBsY,grBAAgBpgB,EAAAlG,QAAMmG,+CAGpB,OACID,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,sCACVT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,YACVT,EAAAlG,QAAA0G,cAAAuc,EAAAsD,KAAA,CACI5f,UAAU,WACVkd,GAAA,SAAard,KAAKC,MAAM4D,OAAxB,QACAmc,gBAAgB,UAHpB,SAQJtgB,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,YACVT,EAAAlG,QAAA0G,cAAAuc,EAAAsD,KAAA,CACI5f,UAAU,WACVkd,GAAA,SAAard,KAAKC,MAAM4D,OAAxB,QACAmc,gBAAgB,UAHpB,SAQJtgB,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,YACVT,EAAAlG,QAAA0G,cAAAuc,EAAAsD,KAAA,CACI5f,UAAU,WACVkd,GAAA,SAAard,KAAKC,MAAM4D,OAAxB,WACAmc,gBAAgB,UAHpB,YAQJtgB,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,YACVT,EAAAlG,QAAA0G,cAAAuc,EAAAsD,KAAA,CACI5f,UAAU,WACVkd,GAAA,SAAard,KAAKC,MAAM4D,OAAxB,SACAmc,gBAAgB,UAHpB,UAQJtgB,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,oBACVT,EAAAlG,QAAA0G,cAAAuc,EAAAsD,KAAA,CACI5f,UAAU,WACVkd,GAAA,SAAard,KAAKC,MAAM4D,OAAxB,QACAmc,gBAAgB,UAEhBtgB,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,0BAOrC2f,EAAQzgB,UAAYA,YAELygB,oXClEfhpB,EAAA,QACAA,EAAA,QAEAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAGUyI,EAAA/F,QAAUd,OAAO8O,WAD3B,IAIMyY,cAEF,SAAAA,EAAYhgB,GAAO,mGAAAc,CAAAf,KAAAigB,oKAAAtY,CAAA3H,MAAAigB,EAAArY,WAAA9R,OAAA+R,eAAAoY,IAAAhqB,KAAA+J,KACTC,uUAHKP,EAAAlG,QAAMmG,uDAOjB,KAAIK,KAAKC,MAAM5D,KAAKxB,OAAS,GAG7B,OACI6E,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,8BACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,eAGAT,EAAAlG,QAAA0G,cAAAggB,EAAA1mB,QAAA,CACIqK,OAAQgH,SAAS7K,KAAKC,MAAM5D,KAAKwW,mDAO7C,OACInT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,8BACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACfT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,YAGAT,EAAAlG,QAAA0G,cAAAigB,EAAA3mB,QAAA,CACIqK,OAAQgH,SAAS7K,KAAKC,MAAM5D,KAAKwW,IACjCuN,iBAAkB,KAGtB1gB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACfT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,oBAGAT,EAAAlG,QAAA0G,cAAAmgB,EAAA7mB,QAAA,CAAoBqK,OAAQgH,SAAS7K,KAAKC,MAAM5D,KAAKwW,0CAQjE,OACInT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACVH,KAAKsgB,oBACLtgB,KAAKugB,qCAMPN,8UCnEfnpB,EAAA,QACAA,EAAA,IACAwJ,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,OACAA,EAAA,KACA0pB,EAAA1pB,EAAA,uDAEA,IAAMuI,EAAY,CACdwE,OAAQtE,EAAA/F,QAAUgD,OAAOgL,YAGvBiZ,cAEF,SAAAA,EAAYxgB,gGAAOc,CAAAf,KAAAygB,GAAA,IAAA1c,mKAAA4D,CAAA3H,MAAAygB,EAAA7Y,WAAA9R,OAAA+R,eAAA4Y,IAAAxqB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACT5K,QAAS,MAEbyH,EAAK2c,SAAW3c,EAAKlM,IAAIW,KAATuL,GAChBhB,SAASwJ,iBAATiU,EAAA5X,6BAAwD7E,EAAK2c,UAC7D3d,SAASwJ,iBAAiB,mBAAoBxI,EAAK2c,UAPpC3c,qUAFGrE,EAAAlG,QAAMmG,0DAaxBK,KAAKnI,qDAILkL,SAASqR,oBAAToM,EAAA5X,6BAA2D5I,KAAK0gB,UAChE3d,SAASqR,oBAAoB,mBAAoBpU,KAAK0gB,wCAG5C,IAAAnT,EAAAvN,KAAA5G,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,IAAAA,UAAA,GACN2J,SAAS4d,UACR,EAAApgB,EAAAnF,aASL,EAAAkF,EAAArH,SAAA,YACgB+G,KAAKC,MAAM4D,OAD3B,sBAEElB,KAAK,SAAArG,GACHiR,EAAKtF,SAAS,CAAC3L,QAASA,OAXxB,EAAAgE,EAAArH,SAAA,YACgB+G,KAAKC,MAAM4D,OAD3B,eAEElB,KAAK,SAAArG,GACHiR,EAAKtF,SAAS,CAAC3L,QAASA,wCAahC,OAA0B,MAAtB0D,KAAKkH,MAAM5K,QACJoD,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,cAAb,wBAGPT,EAAAlG,QAAA0G,cAAA0gB,EAAApnB,QAAA,CACIjB,IAAKyH,KAAKkH,MAAM5K,QAAQE,OACxBqH,OAAQ7D,KAAKC,MAAM4D,OACnBvH,QAAS0D,KAAKkH,MAAM5K,QACpBuM,eAAe,aAK/B4X,EAAYphB,UAAYA,YAETohB,8UClEf3pB,EAAA,QACAA,EAAA,QACAA,EAAA,IAEAwJ,GADAxJ,EAAA,GACAA,EAAA,IACA0pB,EAAA1pB,EAAA,uDAEAA,EAAA,IACAA,EAAA,KAEA,IAAMuI,EAAY,CACdwE,OAAQtE,EAAA/F,QAAUgD,OAAOgL,WACzBpL,cAAemD,EAAA/F,QAAUgD,OAAOgL,WAChCgC,QAASjK,EAAA/F,QAAUd,QAGjBmoB,cAEF,SAAAA,EAAY5gB,gGAAOc,CAAAf,KAAA6gB,GAAA,IAAA9c,mKAAA4D,CAAA3H,MAAA6gB,EAAAjZ,WAAA9R,OAAA+R,eAAAgZ,IAAA5qB,KAAA+J,KACTC,IADS,OAEf8D,EAAK+c,kBACL/c,EAAKgd,cAAgBhd,EAAKgd,cAAcvoB,KAAnBuL,GACrBA,EAAKid,cAAgBjd,EAAKid,cAAcxoB,KAAnBuL,GACrBA,EAAKkd,eAAiBld,EAAKkd,eAAezoB,KAApBuL,GALPA,qUAFKrE,EAAAlG,QAAMmG,wDAWtBK,KAAKC,MAAMuJ,QACXxJ,KAAKkH,MAAQlH,KAAKC,MAAMuJ,QAExBxJ,KAAKkH,MAAQ,CACTga,MAAO,EACPzc,SAAU,gDAQlB,kBAFSzE,KAAKC,MAAM4D,OAEpB,aADQ7D,KAAKC,MAAM7D,cACnB,iDAEUwJ,GAAG,IAAA2H,EAAAvN,KACbA,KAAKiI,SAAS,CAACiZ,QAASlhB,KAAKkH,MAAMga,SACnC,EAAA5gB,EAAArH,SAAQ+G,KAAKmhB,qBAAsB,CAC/BznB,OAAQ,QACTiJ,KAAK,SAACxN,IACL,EAAAqrB,EAAAhY,gCACI,OACA+E,EAAKtN,MAAM4D,OACX0J,EAAKtN,MAAM7D,eAEfmR,EAAKtF,SAAS9S,KACfsb,KAAK,WACJlD,EAAKtF,SAAS,CAACiZ,QAAS3T,EAAKrG,MAAMga,gDAG7Btb,GAAG,IAAA2J,EAAAvP,KACTA,KAAKkH,MAAMzC,SAAW,GACtB,EAAAnE,EAAArH,SAAQ+G,KAAKmhB,qBACRC,QAAQ,UAAW,YAAa,CACjC1nB,OAAQ,WACTiJ,KAAK,SAACxN,IACL,EAAAqrB,EAAAhY,gCACI,OACA+G,EAAKtP,MAAM4D,OACX0L,EAAKtP,MAAM7D,eAEfmT,EAAKtH,SAAS,CAACxD,SAAU,MAEtBzE,KAAKkH,MAAMga,MAAQ,IAC1BlhB,KAAKiI,SAAS,CAACiZ,QAASlhB,KAAKkH,MAAMga,SACnC,EAAA5gB,EAAArH,SAAQ+G,KAAKmhB,qBAAsB,CAC/BhsB,KAAM,CAAC+rB,OAAQ,GACfxnB,OAAQ,QACTiJ,KAAK,SAACxN,IACL,EAAAqrB,EAAAhY,gCACI,OACA+G,EAAKtP,MAAM4D,OACX0L,EAAKtP,MAAM7D,eAEXjH,EACAoa,EAAKtH,SAAS9S,GAEdoa,EAAKtH,SAAS,CACViZ,MAAO,EACPzc,SAAU,MAGnBgM,KAAK,WACJlB,EAAKtH,SAAS,CAACiZ,QAAS3R,EAAKrI,MAAMga,kDAIhCtb,GACN5F,KAAKkH,MAAMga,MAAQ,GAAOlhB,KAAKkH,MAAMzC,SAAW,GAErDzE,KAAK+gB,cAAcnb,4CAInB,OACIlG,EAAAlG,QAAA0G,cAAA,MACIC,UAAU,oCACVkhB,KAAK,QAEL3hB,EAAAlG,QAAA0G,cAAA,MAAIwJ,QAAS1J,KAAK+gB,eACdrhB,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAEjBT,EAAAlG,QAAA0G,cAAA,MAAIwJ,QAAS1J,KAAKghB,eACdthB,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,mDAOzB,IAAImhB,EAAYthB,KAAKkH,MAAMga,MAAM,GAAOlhB,KAAKkH,MAAMzC,SAAS,EACxDgb,GAAW,EAAA5f,EAAArG,SAAW,CACtBkmB,KAAK,EACL6B,eAAe,EACf/X,QAASxJ,KAAKkH,MAAMga,MAAM,EAC1BM,SAAUxhB,KAAKkH,MAAMzC,SAAS,EAC9Bgd,mBAAoBzhB,KAAKkH,MAAMzC,SAAS,GAAKzE,KAAKkH,MAAMga,MAAM,IAElE,OACIxhB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,gDACVH,KAAK0hB,iBACNhiB,EAAAlG,QAAA0G,cAAA,UACIC,UAAWsf,EACXkC,cAAaL,EAAS,WAAW,OACjC5X,QAAS1J,KAAKihB,gBAHlB,WAOAvhB,EAAAlG,QAAA0G,cAAA,UAAQC,UAAU,iBACbH,KAAKkH,MAAMga,iBAOhCL,EAAcxhB,UAAYA,YAEXwhB,qXCjJf/pB,EAAA,QACAA,EAAA,QACAA,EAAA,MACAwJ,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,sDAEAA,EAAA,KAEA,IAAMuI,EAAY,CACdwE,OAAQtE,EAAA/F,QAAUgD,OAAOgL,WACzB4Y,iBAAkB7gB,EAAA/F,QAAUgD,QAO1BolB,cAEF,SAAAA,EAAY3hB,gGAAOc,CAAAf,KAAA4hB,GAAA,IAAA7d,mKAAA4D,CAAA3H,MAAA4hB,EAAAha,WAAA9R,OAAA+R,eAAA+Z,IAAA3rB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACT+Q,SAAU,IAEdlU,EAAK8d,cALU9d,qUAFarE,EAAAlG,QAAMmG,0DAUlBrD,GAChB,OAAIA,EAAQA,QAEJoD,EAAAlG,QAAA0G,cAAA,gBACM5D,EAAQG,OADd,OAC0BH,EAAQA,QADlC,MAGMA,EAAQE,OAHd,KAQAkD,EAAAlG,QAAA0G,cAAA,uBAAe5D,EAAQE,8CAKrB,IAAA+Q,EAAAvN,KACN8hB,EAAUC,EAAAvoB,QAAMsR,QAAO,IAAItN,MAAOE,UAAW,eACjD,EAAA4C,EAAArH,SAAA,YAAoB+G,KAAKC,MAAM4D,OAA/B,YAAkD,CAC9CvK,MAAO,CACH0oB,eAAgBF,EAAhB,SACA3H,SAAUna,KAAKC,MAAMmgB,iBACrB6B,KAAM,gBAEXtf,KAAK,SAACsV,GACL1K,EAAKtF,SAAS,CAACgQ,SAASA,8CAIhB3b,GACZ,OAAKA,EAAQoe,aAEJ,IAAIld,KAAKlB,EAAQoe,eACf,IAAIld,MAAOE,UACd,EACG,UAAS,EAAA6C,EAAAjD,YAAWhB,EAAQoe,cAE5B,OAAM,EAAAna,EAAAjD,YAAWhB,EAAQoe,cAAc,OANvC,oCAUN,IAAAnL,EAAAvP,KACL,OAAkC,GAA9BA,KAAKkH,MAAM+Q,SAAStiB,OAEhB+J,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,cAAb,4BAIJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,4BACVH,KAAKkH,MAAM+Q,SAASlD,IAAI,SAACkF,EAAMxkB,GAAP,OACrBiK,EAAAlG,QAAA0G,cAAA,OAAK3H,IAAK0hB,EAAKzd,OAAQ2D,UAAU,QAC7BT,EAAAlG,QAAA0G,cAAA,SAAI+Z,EAAKrd,OACT8C,EAAAlG,QAAA0G,cAAA,SAAIqP,EAAKlG,oBAAoB4Q,IAC7Bva,EAAAlG,QAAA0G,cAAA,SAAI+Z,EAAKvd,SAAT,IAAoB6S,EAAK2S,gBAAgBjI,iBAOjE2H,EAAsBviB,UAAYA,EAClCuiB,EAAsBxhB,aA3ED,CACjBggB,iBAAkB,aA4EPwB,kWC1Ff9qB,EAAA,QACAA,EAAA,IACAwJ,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,OACAA,EAAA,KACA0pB,EAAA1pB,EAAA,uDAEA,IAAMuI,EAAY,CACdwE,OAAUtE,EAAA/F,QAAUgD,OAAOgL,YAGzB2a,cAEF,SAAAA,EAAYliB,gGAAOc,CAAAf,KAAAmiB,GAAA,IAAApe,mKAAA4D,CAAA3H,MAAAmiB,EAAAva,WAAA9R,OAAA+R,eAAAsa,IAAAlsB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACT5K,QAAS,MAEbyH,EAAK2c,SAAW3c,EAAKlM,IAAIW,KAATuL,GAChBhB,SAASwJ,iBAATiU,EAAA5X,6BAAwD7E,EAAK2c,UAC7D3d,SAASwJ,iBAAiB,mBAAoBxI,EAAK2c,UAPpC3c,qUAFUrE,EAAAlG,QAAMmG,0DAa/BK,KAAKnI,qDAILkL,SAASqR,oBAAToM,EAAA5X,6BAA2D5I,KAAK0gB,UAChE3d,SAASqR,oBAAoB,mBAAoBpU,KAAK0gB,wCAG5C,IAAAnT,EAAAvN,KAAA5G,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,IAAAA,UAAA,GACN2J,SAAS4d,SACR,EAAApgB,EAAAnF,cAEL,EAAAkF,EAAArH,SAAA,YACgB+G,KAAKC,MAAM4D,OAD3B,0BAEElB,KAAK,SAAArG,GACHiR,EAAKtF,SAAS,CAAC3L,QAASA,uCAK5B,OAAK0D,KAAKkH,MAAM5K,QAIZoD,EAAAlG,QAAA0G,cAAA0gB,EAAApnB,QAAA,CACIjB,IAAKyH,KAAKkH,MAAM5K,QAAQE,OACxBqH,OAAQ7D,KAAKC,MAAM4D,OACnBvH,QAAS0D,KAAKkH,MAAM5K,QACpBuM,eAAe,IAPZnJ,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,cAAb,yCAanBgiB,EAAmB9iB,UAAYA,YAEhB8iB,8UC5DfrrB,EAAA,IACA2lB,EAAA3lB,EAAA,OACAA,EAAA,6DAEMsrB,cAEF,SAAAA,EAAYniB,gGAAOc,CAAAf,KAAAoiB,GAAA,IAAAre,mKAAA4D,CAAA3H,MAAAoiB,EAAAxa,WAAA9R,OAAA+R,eAAAua,IAAAnsB,KAAA+J,KACTC,IACN8D,EAAKse,eAAiBte,EAAKue,aAAa9pB,KAAlBuL,GACtB,IAAItH,EAASoO,SAAS9G,EAAK9D,MAAMhF,SAAS3B,MAAMmD,SAAW,KAH5C,OAIVA,GACGsH,EAAK9D,MAAM5D,KAAKkmB,QAAQ5sB,OAAS,IACjC8G,EAASsH,EAAK9D,MAAM5D,KAAKkmB,QAAQvpB,OAAO,GAAG,GAAGyD,QAEtDsH,EAAKmD,MAAQ,CACTzK,OAAQA,GATGsH,qUAFDrE,EAAAlG,QAAMmG,mDAeXlD,GACTuD,KAAKiI,SAAS,CACVxL,OAAQA,IAEZggB,EAAAG,eAAe/mB,KAAK,CAChBqpB,SAAUlf,KAAKC,MAAMhF,SAASikB,SAC9B5lB,MAAO,CACHmD,OAAQA,sCAMhB,OACIiD,EAAAlG,QAAA0G,cAAAsiB,EAAAhpB,QAAA,CACIjB,IAAKyH,KAAKkH,MAAMzK,OAChBoH,OAAQ7D,KAAKC,MAAM5D,KAAKwW,GACxB0P,QAASviB,KAAKC,MAAM5D,KAAKkmB,QACzBE,aAAcziB,KAAKkH,MAAMzK,OACzB4lB,eAAgBriB,KAAKqiB,oCAMtBD,8UC5CftrB,EAAA,QACAA,EAAA,IAEAwJ,KADAxJ,EAAA,KACAA,EAAA,IACAyJ,EAAAzJ,EAAA,OACAA,EAAA,QAEAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAMuI,EAAY,CACdwE,OAAUtE,EAAA/F,QAAUgD,OAAOgL,WAC3B+a,QAAWhjB,EAAA/F,QAAU6f,MAAM7R,WAC3Bib,aAAgBljB,EAAA/F,QAAUgD,OAAOgL,WACjC6a,eAAgB9iB,EAAA/F,QAAU8M,MAGxBoc,cAEF,SAAAA,EAAYziB,gGAAOc,CAAAf,KAAA0iB,GAAA,IAAA3e,mKAAA4D,CAAA3H,MAAA0iB,EAAA9a,WAAA9R,OAAA+R,eAAA6a,IAAAzsB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACT+Q,SAAU,GACVwK,aAAc1e,EAAK9D,MAAMwiB,cAE7B1e,EAAKse,eAAiBte,EAAKse,eAAe7pB,KAApBuL,GANPA,qUAFErE,EAAAlG,QAAMmG,0DAYvBK,KAAK6hB,oDAGK,IAAAtU,EAAAvN,KACV,KAAIA,KAAKC,MAAMsiB,QAAQ5sB,OAAS,GAAhC,CAEA,IAAI8O,GAAW,EAAAlL,EAAAC,SAAEV,QAAQ6pB,YACzB3iB,KAAKiI,SAAS,CAACgQ,SAAU,KACzB,IAAIxb,EAASuD,KAAK4iB,qBAAqB5iB,KAAKkH,MAAMub,cAC9CnpB,EAAQ,GACZA,EAAM0oB,EAAN,WAAqBvlB,EAAOomB,KAA5B,OAAuCpmB,EAAO4gB,GAA9C,IACA/jB,EAAM6gB,SAAW1d,EAAOqmB,OACpB,EAAAviB,EAAAnF,cACA9B,EAAMypB,OAAS,iBAEnB,EAAAziB,EAAArH,SAAA,YAAoB+G,KAAKC,MAAM4D,OAA/B,YAAkD,CAC9CvK,MAAOA,IACRqJ,KAAK,SAACsV,GACL1K,EAAKtF,SAAS,CAACgQ,SAAUA,GAAW,YAChC,EAAA1e,EAAAC,SAAEV,QAAQ6pB,UAAUle,qDAKXge,GAAc,IAAArgB,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAC/B,QAAAkJ,EAAAC,EAAcxC,KAAKC,MAAMsiB,QAAzBxqB,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAkC,KAAzBrL,EAAyBwL,EAAAtK,MAC9B,GAAIlB,EAAE0F,QAAUgmB,EACZ,OAAO1rB,GAHgB,MAAA6L,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAM/B,OAAO,4CAGIsD,GAAG,IAAA2J,EAAAvP,KACVgjB,EAAYnY,SAASjF,EAAEuC,OAAOlQ,OAClC+H,KAAKiI,SACD,CAACwa,aAAcO,GACf,WACQzT,EAAKtP,MAAMoiB,eACX9S,EAAKtP,MAAMoiB,eAAeW,GAG1BzT,EAAKsS,iDAMZ,IAAAnS,EAAA1P,KACL,OAAIA,KAAKC,MAAMsiB,QAAQ5sB,OAAS,EAExB+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBACXT,EAAAlG,QAAA0G,cAAA,4CAIRR,EAAAlG,QAAA0G,cAAA,YACAR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uDACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,eACXT,EAAAlG,QAAA0G,cAAA+iB,EAAAzpB,QAAA,CACIqK,OAAQ7D,KAAKC,MAAM4D,OACnB0e,QAASviB,KAAKC,MAAMsiB,YAIhC7iB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,mBACXT,EAAAlG,QAAA0G,cAAAgjB,EAAA1pB,QAAA,CACI+oB,QAASviB,KAAKC,MAAMsiB,QACpBY,eAAgBnjB,KAAKkH,MAAMub,aAC3Bna,SAAUtI,KAAKqiB,mBAI3B3iB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,wBACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,gCACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACVH,KAAKkH,MAAM+Q,SAASlD,IAAI,SAACkF,EAAMtF,GAAP,OACrBjV,EAAAlG,QAAA0G,cAAA,OACI3H,IAAK0hB,EAAKzd,OACV2D,UAAU,4BAEVT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iCACfT,EAAAlG,QAAA0G,cAAA0gB,EAAApnB,QAAA,CACIqK,OAAQ6L,EAAKzP,MAAM4D,OACnBvH,QAAS2d,oBAY7CyI,EAAWrjB,UAAYA,YAERqjB,8UClIf5rB,EAAA,QACAA,EAAA,QACAA,EAAA,MACAwJ,EAAAxJ,EAAA,GACAA,EAAA,sDAEAA,EAAA,IACAA,EAAA,IACAA,EAAA,KAEA,IAAMuI,EAAY,CACdwE,OAAQtE,EAAA/F,QAAUgD,OAAOgL,WACzB+a,QAAShjB,EAAA/F,QAAU6f,MAAM7R,YAGvB4b,cAEF,SAAAA,EAAYnjB,gGAAOc,CAAAf,KAAAojB,GAAA,IAAArf,mKAAA4D,CAAA3H,MAAAojB,EAAAxb,WAAA9R,OAAA+R,eAAAub,IAAAntB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTmc,UAAU,EACVC,WAAY,EACZC,SAAU,EACVC,QAAQ,GAEZzf,EAAK0f,oBAAsB1f,EAAK0f,oBAAoBjrB,KAAzBuL,GAC3BA,EAAK2f,aAAe3f,EAAK2f,aAAalrB,KAAlBuL,GACpBA,EAAK4f,WAAa5f,EAAK4f,WAAWnrB,KAAhBuL,GAVHA,qUAFUrE,EAAAlG,QAAMmG,mDAetBiG,GACT5F,KAAKkH,MAAMtB,EAAEuC,OAAO3Q,MAAQqT,SAASjF,EAAEuC,OAAOlQ,OAC1C+H,KAAKkH,MAAMoc,WAAatjB,KAAKkH,MAAMqc,WACnCvjB,KAAKkH,MAAMqc,SAAWvjB,KAAKkH,MAAMoc,YACrCtjB,KAAKiI,SAASjI,KAAKkH,mDAGHtB,GAChB5F,KAAK4jB,0DAGQ,IAAArW,EAAAvN,MACb,EAAAM,EAAArH,SAAA,YACgB+G,KAAKC,MAAM4D,OAD3B,sBAEElB,KAAK,SAAArG,IACyB,IAAxBiR,EAAKrG,MAAMmc,UAGX9V,EAAKtF,SAAS,CAACob,UAAS,IAC5B9V,EAAKtF,SAAS,CACVqb,WAAYhnB,EAAQE,OACpB+mB,SAAUjnB,EAAQE,WAEvBiU,KAAK,SAAA/V,GAC4B,OAA5BA,EAAMI,aAAaC,MACnBwS,EAAKtF,SAAS,CAACob,UAAS,yCAKzBzd,GAAG,IAAA2J,EAAAvP,KACV4F,EAAEwJ,iBACFpP,KAAKiI,SAAS,CAACub,QAAU,IACzB,IAAI3Q,EAAK7S,KAAKC,MAAM4D,OAChBggB,EAAQ7jB,KAAKkH,MAAMoc,WACnBQ,EAAM9jB,KAAKkH,MAAMqc,UACrB,EAAAjjB,EAAArH,SAAA,YACgB4Z,EADhB,aAC+BgR,EAD/B,IACwCC,EADxC,WAEI,CAACpqB,OAAQ,QACX+W,KAAK,WACHlB,EAAKtH,SAAS,CAACub,QAAU,MAC1B7gB,KAAK,WACJ1H,SAASgkB,gDAKb,OACIvf,EAAAlG,QAAA0G,cAAA,QAAM6jB,SAAU/jB,KAAK2jB,YACjBjkB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,6BACAR,EAAAlG,QAAA0G,cAAA8jB,EAAAxqB,QAAA,CACI+oB,QAASviB,KAAKC,MAAMsiB,QACpB/qB,KAAK,aACL8Q,SAAUtI,KAAK0jB,aACfO,eAAgBjkB,KAAKkH,MAAMoc,cAGnC5jB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,2BACAR,EAAAlG,QAAA0G,cAAA8jB,EAAAxqB,QAAA,CACI+oB,QAASviB,KAAKC,MAAMsiB,QACpB/qB,KAAK,WACL8Q,SAAUtI,KAAK0jB,aACfO,eAAgBjkB,KAAKkH,MAAMqc,YAGnC7jB,EAAAlG,QAAA0G,cAAA,UACI4E,KAAK,SACL3E,UAAU,kBACV+jB,SAAUlkB,KAAKkH,MAAMsc,QAEpBxjB,KAAKkH,MAAMsc,OAAO,iBAAiB,6CAOhD,OACI9jB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,gCACXT,EAAAlG,QAAA0G,cAAA,UACIC,UAAU,+CACVwhB,cAAY,WACZjY,QAAS1J,KAAKyjB,qBAHlB,mBAOA/jB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qCACVH,KAAKkH,MAAMmc,SAASrjB,KAAKmkB,aAAa,cAO3Df,EAAmB/jB,UAAYA,YAEhB+jB,8UChIftsB,EAAA,QACAA,EAAA,uDAEA,IAAMuI,EAAY,CACdkjB,QAAShjB,EAAA/F,QAAU6f,MAAM7R,WACzByc,eAAgB1kB,EAAA/F,QAAUgD,OAC1B8L,SAAU/I,EAAA/F,QAAU8M,KACpB9O,KAAM+H,EAAA/F,QAAUwQ,QAGdoa,grBAA4B1kB,EAAAlG,QAAMmG,mDAEvBsa,GAET,IADA,IAAIoK,EAAO,GACF5uB,EAAIwkB,EAAK4I,KAAMptB,GAAKwkB,EAAKoD,GAAI5nB,IAClC4uB,EAAKxuB,KACD6J,EAAAlG,QAAA0G,cAAA,UACI3H,IAAK9C,EACLwC,MAAOxC,GAFX,IAIMwkB,EAAKxd,OAJX,aAI6BhH,EAAEwkB,EAAK4I,KAAK,IAIjD,OACInjB,EAAAlG,QAAA0G,cAAA,YAAU3H,IAAK0hB,EAAKxd,OAAQ6nB,MAAA,UAAiBrK,EAAKxd,QAC7C4nB,oCAKJ,IAAA9W,EAAAvN,KACL,OACIN,EAAAlG,QAAA0G,cAAA,UACI1I,KAAMwI,KAAKC,MAAMzI,KACjB2I,UAAU,eACVmI,SAAUtI,KAAKC,MAAMqI,SACrBrQ,MAAO+H,KAAKC,MAAMgkB,gBAEjBjkB,KAAKC,MAAMsiB,QAAQxN,IAAI,SAACkF,EAAMtF,GAAP,OACpBpH,EAAKgX,aAAatK,eAMtCmK,EAAoB/kB,UAAYA,YAEjB+kB,iWChDfttB,EAAA,QACAA,EAAA,uDAEA,IAAMuI,EAAY,CACdkjB,QAAShjB,EAAA/F,QAAU6f,MAAM7R,WACzB2b,eAAgB5jB,EAAA/F,QAAUgD,OAC1B8L,SAAU/I,EAAA/F,QAAU8M,MAGlBke,grBAAqB9kB,EAAAlG,QAAMmG,+CAGzB,OACID,EAAAlG,QAAA0G,cAAA,UACIC,UAAU,eACVlI,MAAO+H,KAAKC,MAAMkjB,eAClB7a,SAAUtI,KAAKC,MAAMqI,UAEpBtI,KAAKC,MAAMsiB,QAAQxN,IAAI,SAACkF,EAAM1hB,GAAP,OACpBmH,EAAAlG,QAAA0G,cAAA,UACI3H,IAAK0hB,EAAKxd,OACVxE,MAAOgiB,EAAKxd,QAFhB,UAIYwd,EAAKxd,oBAQrC+nB,EAAanlB,UAAYA,YAEVmlB,4UCjCfC,EAAA3tB,EAAA,uCACAwJ,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,OAEM4tB,cAEF,SAAAA,EAAYzkB,gGAAOc,CAAAf,KAAA0kB,GAAA,IAAA3gB,mKAAA4D,CAAA3H,MAAA0kB,EAAA9c,WAAA9R,OAAA+R,eAAA6c,IAAAzuB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTyd,UAAW,MAHA5gB,qUAFHrE,EAAAlG,QAAMmG,2DAUd,EAAAY,EAAAnF,aACA4E,KAAK4kB,sDAGE,IAAArX,EAAAvN,MACX,EAAAM,EAAArH,SAAA,YAAoB+G,KAAKC,MAAM5D,KAAKwW,GAApC,eAAqDlQ,KAAK,SAACkiB,GACvDtX,EAAKtF,SAAS,CACV0c,UAAWE,8CAMnB,IAAK7kB,KAAKC,MAAM5D,KAAKkmB,QACjB,OAAO,EACX,IAAIuC,EAAgB,EAHR1iB,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAIZ,QAAAkJ,EAAAC,EAAmBxC,KAAKC,MAAM5D,KAAKkmB,QAAnCxqB,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAA4C,CACxC0iB,GADwCviB,EAAAtK,MAChB6qB,OALhB,MAAAlgB,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAOZ,OAAOwiB,4CAIP,OAAK9kB,KAAKkH,MAAMyd,UAGZjlB,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,aAAd,cACAT,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,uBACbT,EAAAlG,QAAA0G,cAAA,aACAR,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,MAAIsW,MAAM,SAAV,oBAAuC9W,EAAAlG,QAAA0G,cAAA,UAAKF,KAAKkH,MAAMyd,UAAUI,mBACrErlB,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,iCACAR,EAAAlG,QAAA0G,cAAA,WAAK,EAAAK,EAAAnC,iBAA8D,GAA9C4B,KAAKkH,MAAMyd,UAAUK,0BAA6B,QAR5E,sCAgBX,IAAIC,EAAejlB,KAAKklB,gBACxB,OACIxlB,EAAAlG,QAAA0G,cAAA,YACKF,KAAKmlB,kBAENzlB,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,cACAT,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,uBACbT,EAAAlG,QAAA0G,cAAA,aACAR,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,MAAIsW,MAAM,SAAV,kBAAqC9W,EAAAlG,QAAA0G,cAAA,UAAK+kB,IAC9CvlB,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,6BACAR,EAAAlG,QAAA0G,cAAA,WAAK,EAAAK,EAAAnC,iBAAgB4B,KAAKC,MAAM5D,KAAK+oB,QAAQH,EAAa,IAAI,2BASvEP,4UCzEfD,EAAA3tB,EAAA,2CAGMuuB,grBAAa3lB,EAAAlG,QAAMmG,mDAER9E,GACT,OAAQA,GACJ,KAAK,EAAG,MAAO,UACf,KAAK,EAAG,MAAO,QACf,QAAS,MAAO,mDAKpB,IAAIwB,EAAO2D,KAAKC,MAAM5D,KACtB,OACIqD,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACXT,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,6BACbT,EAAAlG,QAAA0G,cAAA,aACAR,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,oBAAeR,EAAAlG,QAAA0G,cAAA,UAAKF,KAAKslB,aAAajpB,EAAKxB,UAC/C6E,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,MAAIsW,MAAM,OAAV,aAA8B9W,EAAAlG,QAAA0G,cAAA,UAAK7D,EAAKwiB,WAAa,YACzDnf,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,qBAAgBR,EAAAlG,QAAA0G,cAAA,UAAK7D,EAAK+oB,QAAQ/oB,EAAK+oB,QAAU,WAAW,YAChE1lB,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,oBAAeR,EAAAlG,QAAA0G,cAAA,UAAK7D,EAAKkpB,OAAOpnB,KAAK,uDAQrD,IAAIqnB,EAAOxlB,KAAKC,MAAM5D,KAAKgX,YAC3B,OACI3T,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBACXT,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBACRqlB,EAAKC,KACN/lB,EAAAlG,QAAA0G,cAAA,WACAR,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,cAAhB,WAHJ,IAIUT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAMsqB,EAAKtsB,IAAKiP,OAAO,UAAUqd,EAAK5oB,0CAO3D,OACI8C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACVH,KAAK0lB,gBAEL1lB,KAAK2lB,wCAMPN,8UCtDfvuB,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,KACA8uB,EAAA9uB,EAAA,IACAwJ,EAAAxJ,EAAA,sDAEA,IAAMuI,EAAY,CACdhD,KAAMkD,EAAA/F,QAAUd,QAGdmtB,cAEF,SAAAA,EAAY5lB,gGAAOc,CAAAf,KAAA6lB,GAAA,IAAA9hB,mKAAA4D,CAAA3H,MAAA6lB,EAAAje,WAAA9R,OAAA+R,eAAAge,IAAA5vB,KAAA+J,KACTC,IADS,OAEf8D,EAAKggB,SAAWhgB,EAAK+hB,OAAOttB,KAAZuL,GAChBA,EAAKmD,MAAQ,CACTxM,MAAO,KACP+I,QAAS,KACT0I,SAAS,GANEpI,qUAFJrE,EAAAlG,QAAMmG,6CAYdiG,GAAG,IAAA2H,EAAAvN,KACN4F,EAAEwJ,iBACFpP,KAAKiI,SAAS,CACVxE,QAAS,KACT/I,MAAO,KACPyR,SAAS,IAEb,IAAIhX,GAAO,EAAAywB,EAAAG,YACP,EAAAC,EAAAxsB,SAAUoM,EAAEuC,OAAQ,CAAC8d,MAAM,MAE/B,EAAA3lB,EAAArH,SAAA,YAAoB+G,KAAKC,MAAM5D,KAAKwW,GAAM,CACtC1d,KAAMA,EACNuE,OAAQ,QACTiJ,KAAK,SAAAtG,GACJkR,EAAKtF,SAAS,CAACxE,QAASpH,KACxB,EAAAiE,EAAArH,SAAA,YAAoBsU,EAAKtN,MAAM5D,KAAKwW,GAApC,UAAiD,CAC7CnZ,OAAQ,WAEb+W,KAAK,SAAA7K,GACJ2H,EAAKtF,SAAS,CAACvN,MAAOkL,EAAE9K,iBACzB+O,OAAO,WACN0D,EAAKtF,SAAS,CAACkE,SAAS,4CAK5B,OAAKnM,KAAKkH,MAAMxM,MAEZgF,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,sBACVH,KAAKkH,MAAMxM,MAAMoP,SAHI,2CAS9B,OAAK9J,KAAKkH,MAAMzD,QAEZ/D,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBAAf,sCAF4B,oCAShC,OACIT,EAAAlG,QAAA0G,cAAA,QAAMxG,OAAO,OAAOqqB,SAAU/jB,KAAK+jB,UAC/BrkB,EAAAlG,QAAA0G,cAAAgmB,EAAA1sB,QAAA,CAAY6C,KAAM2D,KAAKC,MAAM5D,OAC5B2D,KAAKmmB,cACLnmB,KAAKomB,gBACN1mB,EAAAlG,QAAA0G,cAAA,UACI4E,KAAK,SACL3E,UAAU,kBACV+jB,SAAUlkB,KAAKkH,MAAMiF,SAEpBnM,KAAKkH,MAAMiF,QAAQ,YAAY,kBAMpD0Z,EAAKxmB,UAAYA,YAEFwmB,8UCrFf/uB,EAAA,QACAA,EAAA,QAEAA,EAAA,uDACAA,EAAA,KACAA,EAAA,KAEA,IAAMuI,EAAY,CACdlG,QAASoG,EAAA/F,QAAU6sB,QAAQ9mB,EAAA/F,QAAUwQ,SAOnCsc,grBAA8B5mB,EAAAlG,QAAMmG,2DAGlC,EAAApG,EAAAC,SAAE,6BAA6B+sB,QAAQ,CACnC9R,MAAM,qCAKV,OACI/U,EAAAlG,QAAA0G,cAAA,QAAMuR,MAAO,CAACrI,MAAM,YAChB1J,EAAAlG,QAAA0G,cAAA,UACI1I,KAAK,qBACLqb,GAAG,qBACH1S,UAAU,eACVgZ,aAAcnZ,KAAKC,MAAM9G,QACzBqtB,UAAA,GAECxmB,KAAKC,MAAM9G,QAAQ4b,IAAI,SAACnY,GAAD,OACpB8C,EAAAlG,QAAA0G,cAAA,UAAQ3H,IAAKqE,EAAO3E,MAAO2E,GAAQA,gBAO3D0pB,EAAsBjnB,UAAYA,EAClCinB,EAAsBlmB,aA/BD,CACjBjH,QAAS,cAgCEmtB,kVC5CfxvB,EAAA,IACAuJ,EAAAvJ,EAAA,eACAA,EAAA,QACAA,EAAA,KACAwJ,EAAAxJ,EAAA,GAEAyJ,GADAzJ,EAAA,GACAA,EAAA,2DAEM2vB,cAEF,SAAAA,EAAYxmB,gGAAOc,CAAAf,KAAAymB,GAAA,IAAA1iB,mKAAA4D,CAAA3H,MAAAymB,EAAA7e,WAAA9R,OAAA+R,eAAA4e,IAAAxwB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTwf,oBAAoB,EACpBC,aAAa,EACbC,gBAAgB,EAChBC,oBAAoB,EACpBC,aAAa,EACbC,kBAAkB,EAClB7hB,WAAY,KACZ8hB,gBAAiB,KACjB3qB,KAAM,KACNC,QAAS,KACT2qB,YAAa,KACb3hB,WAAY,KACZD,cAAe,KACfT,SAAU,KACVd,UAAW,GAEfC,EAAKuG,cAAgBvG,EAAKsH,YAAY7S,KAAjBuL,GACrBA,EAAKwG,iBAAmBxG,EAAKuH,eAAe9S,KAApBuL,GACxBA,EAAKyG,aAAezG,EAAKmjB,WAAW1uB,KAAhBuL,GAEpBA,EAAKF,OAASE,EAAK9D,MAAMwe,OAAO5a,OAChCE,EAAKvH,OAASuH,EAAK9D,MAAMwe,OAAOjiB,OAChCuH,EAAKX,SAAU,EAAA7C,EAAA1D,QACfkH,EAAKojB,QAAU,EACfpjB,EAAKrC,KAAO,KACZqC,EAAKqjB,iBAAkB,EA5BRrjB,qUAFGrE,EAAAlG,QAAMmG,0DAkCxBK,KAAKqnB,UACLrnB,KAAKsnB,aACLtnB,KAAKunB,iBACLvnB,KAAKwnB,iBACLxnB,KAAKynB,cACLznB,KAAK0nB,kDAGE5b,GAAM,IAAAyB,EAAAvN,MACb8L,EAAO9P,KAAKC,MAAM6P,KACN9L,KAAKmnB,UAEjBnnB,KAAKmnB,QAAUrb,EACXA,EAAO,IAENA,EAAO,IAAO,IAGFA,EAAO,IAAO,GADhBjB,SAAS7K,KAAKkH,MAAMtC,SAAX,iBACuBkH,EAEtC9L,KAAKonB,kBACN,EAAA9mB,EAAArH,SAAA,YAAoB+G,KAAK6D,OAAzB,aAA4C7D,KAAKxD,OAAjD,WAAmE,CAC/D9C,OAAQ,QACTiJ,KAAK,WACJ4K,EAAK6Z,iBAAkB,KAI/BpnB,KAAKonB,iBAAkB,GACvB,EAAA9mB,EAAArH,SAAA,YAAoB+G,KAAK6D,OAAzB,aAA4C7D,KAAKxD,OAAjD,YAAoE,CAChE9C,OAAQ,MACRvE,KAAM,CACFsP,SAAYqH,iDAMX,IAAAyD,EAAAvP,KACT9G,cAAkB8G,KAAK6D,OAAvB,aAA0C7D,KAAKxD,OAA/C,iBACJ,EAAA6D,EAAAkE,eAAcrL,GAAKsL,KAAK,SAACmjB,GACrBpY,EAAKtH,SAAS,CACVye,oBAAoB,EACpBxhB,WAAYyiB,EAAIziB,WAChBN,SAAU+iB,EAAI/iB,aAEnBgjB,MAAM,SAACltB,GACN6U,EAAKtH,SAAS,CACVye,oBAAoB,EACpBM,gBAAiBtsB,wCAKnB,IAAAgV,EAAA1P,MACN,EAAAM,EAAArH,SAAA,YACgB+G,KAAK6D,QACnBlB,KAAK,SAAAxN,GACHua,EAAKzH,SAAS,CAAC5L,KAAMlH,MACtB0U,OAAO,WACN6F,EAAKzH,SAAS,CAAC0e,aAAa,2CAIvB,IAAAzW,EAAAlQ,KACLxD,EAASqO,SAAS7K,KAAKxD,SAC3B,EAAA8D,EAAArH,SAAA,YACgB+G,KAAK6D,OADrB,aACwCrH,GACtCmG,KAAK,SAAAxN,GACH+a,EAAKjI,SAAS,CAAC3L,QAASnH,MACzB0U,OAAO,WACNqG,EAAKjI,SAAS,CAAC2e,gBAAgB,+CAItB,IAAAtW,EAAAtQ,KACTxD,EAASqO,SAAS7K,KAAKxD,QAAU,GACrC,EAAA8D,EAAArH,SAAA,YACgB+G,KAAK6D,OADrB,aACwCrH,GACtCmG,KAAK,SAAAxN,GACHmb,EAAKrI,SAAS,CAACgf,YAAa9xB,MAC7B0U,OAAO,WACNyG,EAAKrI,SAAS,CAAC4e,oBAAoB,4CAI7B,IAAArW,EAAAxQ,MACV,EAAAM,EAAArH,SAAA,YACgB+G,KAAK6D,OADrB,uBAEElB,KAAK,SAAAxN,GACEA,IACDA,EAAO,IACXqb,EAAKvI,SAAS,CACV3C,WAAYnQ,EAAKmQ,YAAc,KAC/BD,cAAelQ,EAAKkQ,eAAiB,SAE1CwE,OAAO,WACN2G,EAAKvI,SAAS,CAAC6e,aAAa,6CAIrB,IAAAlU,EAAA5S,MACX,EAAAM,EAAArH,SAAA,YACgB+G,KAAK6D,OADrB,aACwC7D,KAAKxD,OAD7C,YAEEmG,KAAK,SAAAxN,GACCA,EACAyd,EAAK3K,SAAS,CACVnE,UAAW3O,EAAKsP,WAGpBmO,EAAK3K,SAAS,CACVnE,UAAW,MAGpB+F,OAAO,WACN+I,EAAK3K,SAAS,CAAC8e,kBAAkB,0CAI7BzV,GACI,IAARA,IACAA,EAAO,MACXtR,KAAK6nB,QAAQ,CACTviB,WAAYgM,2CAILA,GACC,IAARA,IACAA,EAAO,MACXtR,KAAK6nB,QAAQ,CACTxiB,cAAeiM,oCAIfnc,IACJ,EAAAmL,EAAArH,SAAA,YAAoB+G,KAAK6D,OAAzB,sBAAsD,CAClDnK,OAAQ,QACRvE,KAAMA,sCAKV,OAAK6K,KAAKkH,MAAM7K,KACT,CACHO,MAAOoD,KAAKkH,MAAM7K,KAAKO,OAFE,0CAMpBP,EAAMC,GACf,OAAO,EAAAiE,EAAA5D,cAAaN,EAAMC,6CAI1B,IAAK0D,KAAKkH,MAAM7K,OAAS2D,KAAKkH,MAAM+f,YAAa,OAAO,KACxD,IAAI5qB,EAAO2D,KAAKkH,MAAM7K,KAClBC,EAAU0D,KAAKkH,MAAM+f,YAEzB,MAAO,CACHrqB,MAFQoD,KAAKrD,aAAaN,EAAMC,GAGhCpD,aAAcmD,EAAKwW,GAAnB,YAAiCvW,EAAQE,OAAzC,iDAKJ,OAAKwD,KAAKkH,MAAM7K,KACT,CACHO,kBAAmBoD,KAAKkH,MAAM7K,KAAKO,MACnC1D,aAAc8G,KAAK6D,QAHM,8CAQ7B,IAAK7D,KAAKkH,MAAM7K,OAAS2D,KAAKkH,MAAM5K,QAAS,OAAO,KACpD,IAAID,EAAO2D,KAAKkH,MAAM7K,KAClBO,EAAWP,EAAKO,MAAhB,MAEJ,MAAO,CACHA,MAFJA,GAASoD,KAAKrD,aAAaN,EAAM2D,KAAKkH,MAAM5K,6CAMrC,IAAAwrB,EAAA9nB,KACPA,KAAK0B,KAAK6K,iBACN,cACA,SAAC3G,GACQA,EAAE3N,OAEF8vB,gBAAgBD,EAAKE,iBAAiBprB,MAAtC,OAAkDkrB,EAAKpmB,KAAKumB,kBAA5D,QAEL,EAAA3nB,EAAArH,SAAQ6uB,EAAK3e,aAAa,kBAC1B2e,EAAKpmB,KAAKwH,YAAY4e,EAAKjkB,OAAQikB,EAAKtrB,QAAQgI,KAAK,WACjDvJ,SAASC,KAAT,SAAyB4sB,EAAKjkB,+CAOtC7D,KAAK0B,OAET1B,KAAK0B,KAAO,IAAAuH,EAAAzP,QACZwG,KAAK0B,KAAKgM,KAAK1N,KAAKmB,SAAS3I,KAAKwH,6CAIlC,OAAUA,KAAKkH,MAAMhC,WAAWC,SAAzB,iBACSnF,KAAKkH,MAAMhC,WAAWE,QAD/B,YAESpF,KAAKoD,+DAIrB,OAAuC,GAAnCpD,KAAKkH,MAAM8f,gBAAgBjsB,KAEvB2E,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,SACCF,KAAKkH,MAAM7K,KAAKO,MADjB,KACyB,EAAA2D,EAAA5D,cAAaqD,KAAKkH,MAAM7K,KAAM2D,KAAKkH,MAAM5K,UAFtE,wCAOD0D,KAAKkH,MAAM8f,gBAAgBld,wDAIlC,OACIpK,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,sBACVsR,MAAO,CAAC+E,MAAO,MAAO0R,OAAQ,OAAQC,UAAW,UAEjDzoB,EAAAlG,QAAA0G,cAAA,UAAKF,KAAKooB,gCAJd,cAMe1oB,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAe8E,KAAK6D,QAC7B7D,KAAKkH,MAAM7K,KAAKO,yCAO7B,OAAIoD,KAAKkH,MAAMwf,oBAAsB1mB,KAAKkH,MAAMyf,aAC5C3mB,KAAKkH,MAAM0f,gBAAkB5mB,KAAKkH,MAAM2f,oBACxC7mB,KAAKkH,MAAM4f,aAAe9mB,KAAKkH,MAAM6f,iBAC9BrnB,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,MACPwG,KAAKkH,MAAM8f,gBACJhnB,KAAKqoB,yBAEhBroB,KAAKsoB,WACE5oB,EAAAlG,QAAA0G,cAAAqoB,EAAA/uB,QAAA,CACHuQ,cAAA,GAAkB/J,KAAKkH,MAAMhC,WAAWC,SACxC8E,OAAQjK,KAAKkH,MAAMhC,WAAWE,QAC9BR,SAAU5E,KAAKkH,MAAMtC,SACrBsF,KAAMlK,KAAKwoB,UACXre,SAAUnK,KAAKyoB,kBACfre,WAAYpK,KAAK0oB,gBACjBre,YAAarK,KAAKgoB,iBAClB1d,cAAetK,KAAKsK,cACpBC,iBAAkBvK,KAAKuK,iBACvBjF,WAAYtF,KAAKkH,MAAM5B,WACvBD,cAAerF,KAAKkH,MAAM7B,cAC1BmF,aAAcxK,KAAKwK,aACnB1G,UAAW9D,KAAKkH,MAAMpD,UACtBV,QAASpD,KAAKoD,8BAIXqjB,8UCpTf3vB,EAAA,QACAA,EAAA,SACAA,EAAA,KACA8uB,EAAA9uB,EAAA,IACAwJ,EAAAxJ,EAAA,0DAEM6xB,cAEF,SAAAA,EAAY1oB,gGAAOc,CAAAf,KAAA2oB,GAAA,IAAA5kB,mKAAA4D,CAAA3H,MAAA2oB,EAAA/gB,WAAA9R,OAAA+R,eAAA8gB,IAAA1yB,KAAA+J,KACTC,IADS,OAEf8D,EAAKggB,SAAWhgB,EAAK+hB,OAAOttB,KAAZuL,GAChBA,EAAKmD,MAAQ,CACTzD,QAAS,KACT/I,MAAO,KACPyR,SAAS,GANEpI,qUAFLrE,EAAAlG,QAAMmG,6CAYbiG,GAAG,IAAA2H,EAAAvN,KACN4F,EAAEwJ,iBACFpP,KAAKiI,SAAS,CACVxE,QAAS,KACT/I,MAAO,KACPyR,SAAS,IAEb,IAAIhX,GAAO,EAAAywB,EAAAG,YACP,EAAAC,EAAAxsB,SAAUoM,EAAEuC,OAAQ,CAAC8d,MAAM,MAE/B,EAAA3lB,EAAArH,SAAQ,WAAY,CAChB9D,KAAMA,EACNuE,OAAQ,SACTiJ,KAAK,SAAAtG,GACJkR,EAAKtF,SAAS,CAACxE,QAASpH,MACzBoU,KAAK,SAAA7K,GACJ2H,EAAKtF,SAAS,CAACvN,MAAOkL,EAAE9K,iBACzB+O,OAAO,WACN0D,EAAKtF,SAAS,CAACkE,SAAS,4CAK5B,IAAKnM,KAAKkH,MAAMxM,MAAO,MAAO,GAC9B,OAAQsF,KAAKkH,MAAMxM,MAAMK,MACrB,KAAK,KACD,IAAI6B,EAAQoD,KAAKkH,MAAMxM,MAAMkuB,MAAMvsB,KAAKO,OAAS,WACjD,OACI8C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,sBACVH,KAAKkH,MAAMxM,MAAMoP,QADtB,IAC+BpK,EAAAlG,QAAA0G,cAAA,WAC3BR,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAe8E,KAAKkH,MAAMxM,MAAMkuB,MAAMvsB,KAAKwW,IAA9C,SACWjW,GAHf,KAQR,QACI,OACI8C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,sBACVH,KAAKkH,MAAMxM,MAAMoP,kDAQlC,OACIpK,EAAAlG,QAAA0G,cAAA,YACAR,EAAAlG,QAAA0G,cAAA,uCACAR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBAAf,0DAEIT,EAAAlG,QAAA0G,cAAA,UACIR,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAA,SAAe8E,KAAKkH,MAAMzD,QAAQoP,IAArC,mBACJnT,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAK,aAAR,4DAQhB,OAA0B,MAAtB8E,KAAKkH,MAAMzD,QACJzD,KAAKomB,gBAGZ1mB,EAAAlG,QAAA0G,cAAA,QAAMxG,OAAO,OAAOqqB,SAAU/jB,KAAK+jB,UAC/BrkB,EAAAlG,QAAA0G,cAAA,sBACAR,EAAAlG,QAAA0G,cAAAgmB,EAAA1sB,QAAA,MACCwG,KAAKmmB,cACNzmB,EAAAlG,QAAA0G,cAAA,UACI4E,KAAK,SACL3E,UAAU,kBACV+jB,SAAUlkB,KAAKkH,MAAMiF,SAEpBnM,KAAKkH,MAAMiF,QAAQ,cAAc,8BAOvCwc,8UCpGf7xB,EAAA,IAEAwJ,KADAxJ,EAAA,IACAA,EAAA,uDAEAA,EAAA,QAEM+xB,cAEF,SAAAA,EAAY5oB,gGAAOc,CAAAf,KAAA6oB,GAAA,IAAA9kB,mKAAA4D,CAAA3H,MAAA6oB,EAAAjhB,WAAA9R,OAAA+R,eAAAghB,IAAA5yB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTxM,MAAO,GACPouB,MAAO,GACPC,SAAU,IAEdhlB,EAAKilB,SAAWjlB,EAAKilB,SAASxwB,KAAduL,GAChBA,EAAKklB,aAAellB,EAAKklB,aAAazwB,KAAlBuL,GARLA,qUAFFrE,EAAAlG,QAAMmG,+CAadiG,GAAG,IAAA2H,EAAAvN,KACR4F,EAAEwJ,kBACF,EAAA9O,EAAArH,SAAQ,WAAY,CAChB9D,KAAM,CACF+zB,UAAW5oB,EAAAvG,kBAAkBoB,SAC7BguB,WAAY,WACZL,MAAO9oB,KAAKkH,MAAM4hB,MAClBC,SAAU/oB,KAAKkH,MAAM6hB,YAE1BtY,KAAK,SAAA7K,GACJ2H,EAAKtF,SAAS,CACVvN,MAAOkL,EAAE9K,aAAagP,QACtBif,SAAU,OAEfpmB,KAAK,SAAAxN,GACJkF,aAAa6hB,QAAQ,eAAgB/mB,EAAKiF,cAC1CmT,EAAK6b,2EAKT,EAAA9oB,EAAArH,SAAQ,oBAAoB0J,KAAK,SAAA0mB,GAC7BhvB,aAAa6hB,QAAQ,UAAWmN,EAAKxW,IACrCxY,aAAa6hB,QAAQ,aAAcmN,EAAKC,OACxCruB,SAASC,KAAO,2CAIX0K,GACT5F,KAAKkH,MAAMtB,EAAEuC,OAAO3Q,MAAQoO,EAAEuC,OAAOlQ,MACrC+H,KAAKiI,SAAS,CAACvN,MAAM,0CAIrB,OACIgF,EAAAlG,QAAA0G,cAAA,QAAM6jB,SAAU/jB,KAAKgpB,UACjBtpB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,SACI1I,KAAK,QACLsN,KAAK,OACL3E,UAAU,iCACVopB,YAAY,gBACZjhB,SAAUtI,KAAKipB,aACfhxB,MAAO+H,KAAKkH,MAAM4hB,MAClBU,WAAA,EACApS,UAAA,KAGR1X,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,SACI1I,KAAK,WACLsN,KAAK,WACL3E,UAAU,iCACVopB,YAAY,WACZjhB,SAAUtI,KAAKipB,aACfhxB,MAAO+H,KAAKkH,MAAM6hB,SAClB3R,UAAA,KAGR1X,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,MAAMjF,KAAK,gBAAxB,eACAwE,EAAAlG,QAAA0G,cAAA,UACI4E,KAAK,SACL3E,UAAU,8BAFd,kDAWR,GAAKH,KAAKkH,MAAMxM,MAChB,OACIgF,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,8CACVkhB,KAAK,SAEL3hB,EAAAlG,QAAA0G,cAAA,cAASF,KAAKkH,MAAMxM,yCAM5B,OACIgF,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iBACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,QAAf,UACAT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,SAAf,WACCH,KAAKmmB,cACLnmB,KAAKmkB,iCAMP0E,6UCjHfpE,EAAA3tB,EAAA,2CAEM2yB,grBAAgB/pB,EAAAlG,QAAMmG,0DAGpBtF,aAAaW,WAAW,gBACxBX,aAAaW,WAAW,WACxBX,aAAaW,WAAW,eACxBC,SAASC,KAAO,4CAIhB,OAAO,wBAIAuuB,4UChBfhF,EAAA3tB,EAAA,uCACAwJ,EAAAxJ,EAAA,GACA2lB,EAAA3lB,EAAA,GAEAA,EAAA,QAEM4yB,cAEF,SAAAA,EAAYzpB,gGAAOc,CAAAf,KAAA0pB,GAAA,IAAA3lB,mKAAA4D,CAAA3H,MAAA0pB,EAAA9hB,WAAA9R,OAAA+R,eAAA6hB,IAAAzzB,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTxM,MAAO,MAEXqJ,EAAKggB,SAAWhgB,EAAKggB,SAASvrB,KAAduL,GALDA,qUAFErE,EAAAlG,QAAMmG,+CAUlBiG,GAAG,IAAA2H,EAAAvN,KACR4F,EAAEwJ,iBACFpP,KAAKiI,SAAS,CACVvN,MAAO,OAEX,IAAIouB,EAAQljB,EAAEuC,OAAO2gB,MAAM7wB,MACvB8wB,EAAWnjB,EAAEuC,OAAO4gB,SAAS9wB,OACjC,EAAAqI,EAAArH,SAAQ,WAAY,CAChB9D,KAAM,CACFqC,KAAMoO,EAAEuC,OAAO3Q,KAAKS,MACpB6wB,MAAOA,EACPC,SAAUA,KAEftY,KAAK,SAAA7K,GACJ2H,EAAKtF,SAAS,CACVvN,MAAOkL,EAAE9K,iBAEd6H,KAAK,SAAAxN,GACJkF,aAAa6hB,QAAQ,UAAW/mB,EAAK0d,IACrCxY,aAAa6hB,QAAQ,aAAc/mB,EAAKm0B,OACxC/b,EAAKoc,OAAOb,EAAOC,oCAIpBD,EAAOC,GAAU,IAAAxZ,EAAAvP,MACpB,EAAAM,EAAArH,SAAQ,WAAY,CAChB9D,KAAM,CACF+zB,UAAW5oB,EAAAvG,kBAAkBoB,SAC7BguB,WAAY,WACZL,MAAOA,EACPC,SAAUA,KAEftY,KAAK,SAAA7K,GACJ2J,EAAKtH,SAAS,CACVvN,MAAOkL,EAAE9K,iBAEd6H,KAAK,SAAAxN,GACJkF,aAAa6hB,QAAQ,eAAgB/mB,EAAKiF,cAC1Ca,SAASC,KAAO,2CAKpB,OACIwE,EAAAlG,QAAA0G,cAAA,QAAM6jB,SAAU/jB,KAAK+jB,UACjBrkB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,yBACCF,KAAK4pB,iBAAiB,QACvBlqB,EAAAlG,QAAA0G,cAAA,SACI1I,KAAK,OACLsN,KAAK,OACL3E,UAAU,iCACVqpB,WAAA,EACApS,UAAA,KAGR1X,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,sBACCF,KAAK4pB,iBAAiB,SACvBlqB,EAAAlG,QAAA0G,cAAA,SACI1I,KAAK,QACLsN,KAAK,OACL3E,UAAU,iCACVopB,YAAY,mBACZnS,UAAA,KAGR1X,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,yBACCF,KAAK4pB,iBAAiB,YACvBlqB,EAAAlG,QAAA0G,cAAA,SACI1I,KAAK,WACLsN,KAAK,WACL3E,UAAU,iCACVopB,YAAY,kBACZnS,UAAA,KAGR1X,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,MAAMjF,KAAK,YAAxB,WACAwE,EAAAlG,QAAA0G,cAAA,UACI4E,KAAK,SACL3E,UAAU,8BAFd,sDAWR,GAAKH,KAAKkH,MAAMxM,MAChB,OACIgF,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,+CACXT,EAAAlG,QAAA0G,cAAA,cAASF,KAAKkH,MAAMxM,MAAMoP,mDAKrB3C,GACb,GAAMnH,KAAKkH,MAAMxM,OAAasF,KAAKkH,MAAMxM,MAAMmvB,OAA/C,CADoB,IAAAznB,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAEpB,QAAAkJ,EAAAC,EAAkBxC,KAAKkH,MAAMxM,MAAMmvB,OAAnC9xB,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAA2C,KAAlC1H,EAAkC6H,EAAAtK,MACvC,GAAIyC,EAAMyM,OAASA,EACf,OACIzH,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,eAAezF,EAAMoP,UAL1B,MAAAlH,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,sCAYpB,OACI5C,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iBACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,QAAf,UACAT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,SAAf,eACCH,KAAKmmB,cACLnmB,KAAKmkB,kCAMP,EAAA1H,EAAAqN,YAAWJ,+UCzI1B5yB,EAAA,IACA2lB,EAAA3lB,EAAA,GACAwJ,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,OACAA,EAAA,QACAA,EAAA,SACAA,EAAA,4DAGMizB,cAEF,SAAAA,EAAY9pB,gGAAOc,CAAAf,KAAA+pB,GAAA,IAAAhmB,mKAAA4D,CAAA3H,MAAA+pB,EAAAniB,WAAA9R,OAAA+R,eAAAkiB,IAAA9zB,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAK0D,aAAe1D,EAAKgE,WAAWvP,KAAhBuL,GACpBA,EAAKmD,MAAQ,CACTiF,SAAS,EACTiN,MAAO,GACP7R,MAAO,KACPyiB,WAAY,MACZ9hB,KAAMnE,EAAK9D,MAAMhF,SAAS3B,MAAM4O,MAAQ,GAT7BnE,qUAFHrE,EAAAlG,QAAMmG,uDAgBlB8c,EAAAG,eAAe/mB,KAAK,CAChBqpB,SAAUlf,KAAKC,MAAMhF,SAASikB,SAC9B5lB,MAAO,CACH4O,KAAMlI,KAAKkH,MAAMgB,2CAKlBtC,GAAG,IAAA2H,EAAAvN,KACVA,KAAKiI,SAAS,CACVC,KAAMtC,EAAEuC,OAAOlQ,MACfkU,SAAS,GACV,WACCoB,EAAK0c,iBACL1c,EAAK2c,yDAKTlqB,KAAKkqB,8CAGE,IAAA3a,EAAAvP,KACHmqB,GAAS,EAAA5pB,EAAArE,cACb,EAAAoE,EAAArH,SAAA,YAAoBkxB,EAApB,UAAqC,CACjC7wB,MAAO,CACH4O,KAAMlI,KAAKkH,MAAMgB,KACjBiS,SAAU,MAEfxX,KAAK,SAACyW,EAAOgB,EAAY7S,GACxBgI,EAAKtH,SAAS,CACVmR,MAAOA,EACPjN,SAAS,EACT5E,MAAOA,EACPyiB,WAAYziB,EAAMc,kBAAkB,sDAM5C,OAAwB,GAApBrI,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,oBAAYF,KAAKkH,MAAM8iB,WAAvB,UACAtqB,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,OAIRkG,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,6BACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,UACYH,KAAKkH,MAAM8iB,WADvB,WAIJtqB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,iBAI/B/H,EAAAlG,QAAA0G,cAAAmqB,EAAA7wB,QAAA,CAAU4f,MAAOpZ,KAAKkH,MAAMkS,QAC5B1Z,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,qCAShCsiB,sVCtGfjzB,EAAA,IACA2lB,EAAA3lB,EAAA,MACAA,EAAA,KACAA,EAAA,SACAA,EAAA,KACAwzB,EAAAxzB,EAAA,WAEAyJ,EAAAzJ,EAAA,0DAEMijB,cAEF,SAAAA,EAAY9Z,gGAAOc,CAAAf,KAAA+Z,GAAA,IAAAhW,mKAAA4D,CAAA3H,MAAA+Z,EAAAnS,WAAA9R,OAAA+R,eAAAkS,IAAA9jB,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAK0D,aAAe1D,EAAKgE,WAAWvP,KAAhBuL,GACpBA,EAAKmD,MAAQ,CACTiF,SAAS,EACT2N,MAAO,GACPvS,MAAO,KACPW,KAAMnE,EAAK9D,MAAMhF,SAAS3B,MAAM4O,MAAQ,GAR7BnE,qUAFKrE,EAAAlG,QAAMmG,uDAe1B8c,EAAAG,eAAe/mB,KAAK,CAChBqpB,SAAUlf,KAAKC,MAAMhF,SAASikB,SAC9B5lB,MAAO,CACH4O,KAAMlI,KAAKkH,MAAMgB,2CAKlBtC,GAAG,IAAA2H,EAAAvN,KACVA,KAAKiI,SAAS,CACVC,KAAMtC,EAAEuC,OAAOlQ,MACfkU,SAAS,GACV,WACCoB,EAAK0c,iBACL1c,EAAKgd,yDAKTvqB,KAAKuqB,8CAGE,IAAAhb,EAAAvP,MACP,EAAAsqB,EAAA1Q,kBAAiB,GAAI5Z,KAAKkH,MAAMgB,MAAM1D,KAAK,SAACrP,GACxCoa,EAAKtH,SAAS,CACV6R,MAAO3kB,EAAK2kB,MACZvS,MAAOpS,EAAKoS,MACZ4E,SAAS,uCAMjB,OAAwB,GAApBnM,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,kBACAT,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,OAIRkG,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,6BACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,mBAEJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,iBAI/B/H,EAAAlG,QAAA0G,cAAA4d,EAAAtkB,QAAA,CAAoBsgB,MAAO9Z,KAAKkH,MAAM4S,QACtCpa,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,qCAShCsS,8UC5FfjjB,EAAA,IACA2lB,EAAA3lB,EAAA,MACAA,EAAA,KACAA,EAAA,SACAA,EAAA,KACA0zB,EAAA1zB,EAAA,WAEAyJ,EAAAzJ,EAAA,0DAEM2zB,cAEF,SAAAA,EAAYxqB,gGAAOc,CAAAf,KAAAyqB,GAAA,IAAA1mB,mKAAA4D,CAAA3H,MAAAyqB,EAAA7iB,WAAA9R,OAAA+R,eAAA4iB,IAAAx0B,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAK0D,aAAe1D,EAAKgE,WAAWvP,KAAhBuL,GACpBA,EAAKmD,MAAQ,CACTiF,SAAS,EACT2N,MAAO,GACPvS,MAAO,KACPW,KAAMnE,EAAK9D,MAAMhF,SAAS3B,MAAM4O,MAAQ,EACxC8hB,WAAY,OATDjmB,qUAFIrE,EAAAlG,QAAMmG,uDAgBzB8c,EAAAG,eAAe/mB,KAAK,CAChBqpB,SAAUlf,KAAKC,MAAMhF,SAASikB,SAC9B5lB,MAAO,CACH4O,KAAMlI,KAAKkH,MAAMgB,2CAKlBtC,GAAG,IAAA2H,EAAAvN,KACVA,KAAKiI,SAAS,CACVC,KAAMtC,EAAEuC,OAAOlQ,MACfkU,SAAS,GACV,WACCoB,EAAK0c,iBACL1c,EAAKgd,yDAKTvqB,KAAKuqB,8CAGE,IAAAhb,EAAAvP,MACP,EAAAwqB,EAAAnQ,YAAW,GAAIra,KAAKkH,MAAMgB,MAAM1D,KAAK,SAACrP,GAClCoa,EAAKtH,SAAS,CACV6R,MAAO3kB,EAAK2kB,MACZvS,MAAOpS,EAAKoS,MACZ4E,SAAS,EACT6d,WAAY70B,EAAKoS,MAAMc,kBAAkB,sDAMjD,OAAwB,GAApBrI,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,WAAgCH,KAAKkH,MAAM8iB,WAA3C,UACAtqB,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,OAIRkG,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,6BACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,WAAgCH,KAAKkH,MAAM8iB,WAA3C,WAEJtqB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,iBAI/B/H,EAAAlG,QAAA0G,cAAAwqB,EAAAlxB,QAAA,CAASsgB,MAAO9Z,KAAKkH,MAAM4S,QAC3Bpa,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,qCAShCgjB,8UC9Ff3zB,EAAA,IACA2lB,EAAA3lB,EAAA,MACAA,EAAA,KACAA,EAAA,SACAA,EAAA,KACA6zB,EAAA7zB,EAAA,WAEAyJ,EAAAzJ,EAAA,0DAEM2jB,cAEF,SAAAA,EAAYxa,gGAAOc,CAAAf,KAAAya,GAAA,IAAA1W,mKAAA4D,CAAA3H,MAAAya,EAAA7S,WAAA9R,OAAA+R,eAAA4S,IAAAxkB,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAK0D,aAAe1D,EAAKgE,WAAWvP,KAAhBuL,GACpBA,EAAKmD,MAAQ,CACTiF,SAAS,EACT2N,MAAO,GACPvS,MAAO,KACPW,KAAMnE,EAAK9D,MAAMhF,SAAS3B,MAAM4O,MAAQ,GAR7BnE,qUAFCrE,EAAAlG,QAAMmG,uDAetB8c,EAAAG,eAAe/mB,KAAK,CAChBqpB,SAAUlf,KAAKC,MAAMhF,SAASikB,SAC9B5lB,MAAO,CACH4O,KAAMlI,KAAKkH,MAAMgB,2CAKlBtC,GAAG,IAAA2H,EAAAvN,KACVA,KAAKiI,SAAS,CACVC,KAAMtC,EAAEuC,OAAOlQ,MACfkU,SAAS,GACV,WACCoB,EAAK0c,iBACL1c,EAAKgd,yDAKTvqB,KAAKuqB,8CAGE,IAAAhb,EAAAvP,MACP,EAAA2qB,EAAAnQ,cAAa,GAAIxa,KAAKkH,MAAMgB,MAAM1D,KAAK,SAACrP,GACpCoa,EAAKtH,SAAS,CACV6R,MAAO3kB,EAAK2kB,MACZvS,MAAOpS,EAAKoS,MACZ4E,SAAS,uCAMjB,OAAwB,GAApBnM,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,aACAT,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,OAIRkG,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,6BACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,cAEJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,iBAI/B/H,EAAAlG,QAAA0G,cAAA8d,EAAAxkB,QAAA,CAAoBsgB,MAAO9Z,KAAKkH,MAAM4S,QACtCpa,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,qCAShCgT,8UC5Ff3jB,EAAA,IACA2lB,EAAA3lB,EAAA,MACAA,EAAA,KACAA,EAAA,SACAA,EAAA,KACA8zB,EAAA9zB,EAAA,WAEAyJ,EAAAzJ,EAAA,0DAEM8jB,cAEF,SAAAA,EAAY3a,gGAAOc,CAAAf,KAAA4a,GAAA,IAAA7W,mKAAA4D,CAAA3H,MAAA4a,EAAAhT,WAAA9R,OAAA+R,eAAA+S,IAAA3kB,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAK0D,aAAe1D,EAAKgE,WAAWvP,KAAhBuL,GACpBA,EAAKmD,MAAQ,CACTiF,SAAS,EACT2N,MAAO,GACPvS,MAAO,KACPW,KAAMnE,EAAK9D,MAAMhF,SAAS3B,MAAM4O,MAAQ,GAR7BnE,qUAFOrE,EAAAlG,QAAMmG,uDAe5B8c,EAAAG,eAAe/mB,KAAK,CAChBqpB,SAAUlf,KAAKC,MAAMhF,SAASikB,SAC9B5lB,MAAO,CACH4O,KAAMlI,KAAKkH,MAAMgB,2CAKlBtC,GAAG,IAAA2H,EAAAvN,KACVA,KAAKiI,SAAS,CACVC,KAAMtC,EAAEuC,OAAOlQ,MACfkU,SAAS,GACV,WACCoB,EAAK0c,iBACL1c,EAAKgd,yDAKTvqB,KAAKuqB,8CAGE,IAAAhb,EAAAvP,MACP,EAAA4qB,EAAAjQ,oBAAmB,GAAI3a,KAAKkH,MAAMgB,MAAM1D,KAAK,SAACrP,GAC1Coa,EAAKtH,SAAS,CACV6R,MAAO3kB,EAAK2kB,MACZvS,MAAOpS,EAAKoS,MACZ4E,SAAS,uCAMjB,OAAwB,GAApBnM,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,qBACAT,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,OAIRkG,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,6BACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,UAAd,sBAEJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,iBAI/B/H,EAAAlG,QAAA0G,cAAA+d,EAAAzkB,QAAA,CAAqBsgB,MAAO9Z,KAAKkH,MAAM4S,QACvCpa,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACXT,EAAAlG,QAAA0G,cAAAkqB,EAAA5wB,QAAA,CACI+N,MAAOvH,KAAKkH,MAAMK,MAClBE,aAAczH,KAAKyH,qCAShCmT,8UC5Ff9jB,EAAA,QACAA,EAAA,IACA0zB,EAAA1zB,EAAA,WACA6zB,EAAA7zB,EAAA,WACAwzB,EAAAxzB,EAAA,WACA8zB,EAAA9zB,EAAA,WACAyJ,EAAAzJ,EAAA,0DAEMmpB,cAEF,SAAAA,EAAYhgB,gGAAOc,CAAAf,KAAAigB,GAAA,IAAAlc,mKAAA4D,CAAA3H,MAAAigB,EAAArY,WAAA9R,OAAA+R,eAAAoY,IAAAhqB,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAK8mB,UAAY9mB,EAAK+mB,iBAAiBtyB,KAAtBuL,GACjBhB,SAASwJ,iBAAiB,mBAAoBxI,EAAK8mB,WACnD9mB,EAAKmD,MAAQ,CACT3O,IAAK,EACL4T,SAAS,EACT4e,QAAQ,GARGhnB,qUAFJrE,EAAAlG,QAAMmG,0DAejBK,KAAKga,yDAILjX,SAASqR,oBAAoB,mBAAoBpU,KAAK6qB,6CAGhD,IAAAtd,EAAAvN,KACNA,KAAKiI,SAAS,CACVkE,SAAS,EACT4e,QAAQ,IAEZ/mB,QAAQM,IAAI,EACR,EAAAkmB,EAAAnQ,YAAW,EAAG,IACd,EAAAsQ,EAAAnQ,cAAa,EAAG,IAChB,EAAA8P,EAAA1Q,kBAAiB,EAAG,IACpB,EAAAgR,EAAAjQ,oBAAmB,EAAG,KACvBnW,KAAK,SAAChO,GACL+W,EAAKtF,SAAS,CACVkE,SAAW,EACX4e,QAAU,EACVvhB,QAAWhT,EAAO,GAAGsjB,MACrBkR,UAAax0B,EAAO,GAAGsjB,MACvBmR,gBAAmBz0B,EAAO,GAAGsjB,MAC7BoR,gBAAmB10B,EAAO,GAAGsjB,UAElC8N,MAAM,WACLra,EAAKtF,SAAS,CACVkE,SAAS,EACT4e,QAAQ,EACRxyB,IAAKgV,EAAKrG,MAAM3O,IAAM,iDAM1BwK,SAAS4d,QACb3gB,KAAKga,2CAIL,OAAIha,KAAKkH,MAAM6jB,OAEPrrB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBAAf,mCAIJH,KAAKkH,MAAMiF,QACJzM,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,MAEPkG,EAAAlG,QAAA0G,cAAA,YACAR,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,wBACVT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAK,kBAAR,qBAEJwE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,eACXT,EAAAlG,QAAA0G,cAAAwqB,EAAAlxB,QAAA,CAAcjB,IAAA,MAAWyH,KAAKkH,MAAM3O,IAAOuhB,MAAO9Z,KAAKkH,MAAMsC,WAGjE9J,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,wBACVT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAK,mBAAR,mBAEJwE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,eACXT,EAAAlG,QAAA0G,cAAA4d,EAAAtkB,QAAA,CAAoBjB,IAAA,OAAYyH,KAAKkH,MAAM3O,IAAOuhB,MAAO9Z,KAAKkH,MAAM+jB,mBAGxEvrB,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,wBACVT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAK,cAAR,cAEJwE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,eACXT,EAAAlG,QAAA0G,cAAA8d,EAAAxkB,QAAA,CAAgBjB,IAAA,MAAWyH,KAAKkH,MAAM3O,IAAOuhB,MAAO9Z,KAAKkH,MAAM8jB,aAGnEtrB,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,wBACVT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAK,sBAAR,sBAEJwE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,eACXT,EAAAlG,QAAA0G,cAAA+d,EAAAzkB,QAAA,CAAsBjB,IAAA,OAAYyH,KAAKkH,MAAM3O,IAAOuhB,MAAO9Z,KAAKkH,MAAMgkB,uCAOvEjL,8UC1GfnpB,EAAA,QACAA,EAAA,MACAyJ,EAAAzJ,EAAA,0DAEMq0B,cAEF,SAAAA,EAAYlrB,gGAAOc,CAAAf,KAAAmrB,GAAA,IAAApnB,mKAAA4D,CAAA3H,MAAAmrB,EAAAvjB,WAAA9R,OAAA+R,eAAAsjB,IAAAl1B,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBAFe0I,qUAFArE,EAAAlG,QAAMmG,+CASrB,OACID,EAAAlG,QAAA0G,cAAAie,EAAA3kB,QAAA,yBAKG2xB,8UCnBfr0B,EAAA,IACAwJ,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,OACAA,EAAA,QACAA,EAAA,wDAEA,IACMs0B,EAAW,CACb,SACA,SACA,UACA,YACA,WACA,SACA,YAGEnL,cAEF,SAAAA,EAAYhgB,gGAAOc,CAAAf,KAAAigB,GAAA,IAAAlc,mKAAA4D,CAAA3H,MAAAigB,EAAArY,WAAA9R,OAAA+R,eAAAoY,IAAAhqB,KAAA+J,OAAA,OAEf+D,EAAKmD,MAAQ,CACTiF,SAAS,EACThX,KAAM,IAJK4O,qUAFJrE,EAAAlG,QAAMmG,0DAWjBK,KAAKga,4CAGC,IAAAzM,EAAAvN,MACN,EAAAM,EAAArH,SAAA,aAAoB,EAAAsH,EAAArE,aAApB,cACKyG,KAAK,SAACxN,GACHoY,EAAKtF,SAAS,CACVkE,SAAS,EACThX,KAAMA,4CAKRk2B,GACV,IAAI9zB,EAAI,IAAIiG,KAAK6tB,GACjB,OAAOD,EAAS7zB,EAAE+zB,mDAGLD,GACb,IAAIE,EAAK/tB,KAAKguB,MAAMH,GAChBI,EAAKjuB,KAAKkuB,MAMd,OALW1vB,KAAKuC,MACZvC,KAAK2vB,MACAJ,EAAKE,GA7CP,SAiDH,KAAM,EACF,OAAQ/rB,EAAAlG,QAAA0G,cAAA,yBAAgBR,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,cAAcH,KAAK4rB,cAAcP,KAE9E,KAAK,EACD,OAAQ3rB,EAAAlG,QAAA0G,cAAA,qBAAYR,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,cAAcH,KAAK4rB,cAAcP,KAE1E,KAAK,EACD,OAAQ3rB,EAAAlG,QAAA0G,cAAA,wBAAeR,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,cAAcH,KAAK4rB,cAAcP,KAE7E,QACI,OAAOrrB,KAAK4rB,cAAcP,yCAKzB,IAAA9b,EAAAvP,KACT,OAA8B,GAA1BA,KAAKkH,MAAM/R,KAAKQ,OAEZ+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBACXT,EAAAlG,QAAA0G,cAAA,iDADJ,wBAEyBR,EAAAlG,QAAA0G,cAAA,WAFzB,oFASAR,EAAAlG,QAAA0G,cAAA,YACKF,KAAKkH,MAAM/R,KAAK4f,IAAI,SAAAjZ,GAAA,OACrB4D,EAAAlG,QAAA0G,cAAA,QAAM3H,IAAKuD,EAAEY,UACTgD,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,uBAAuBvD,MAAOd,EAAEY,UACzC6S,EAAKsc,iBAAiB/vB,EAAEY,WAE7BgD,EAAAlG,QAAA0G,cAAAmqB,EAAA7wB,QAAA,CACI4f,MAAOtd,EAAEsd,6CAS7B,OAAIpZ,KAAKkH,MAAMiF,QACJzM,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,MACJwG,KAAK8rB,gCAIL7L,4UCxGfwE,EAAA3tB,EAAA,uCACAyJ,EAAAzJ,EAAA,OAEMi1B,cAEF,SAAAA,EAAY9rB,gGAAOc,CAAAf,KAAA+rB,GAAA,IAAAhoB,mKAAA4D,CAAA3H,MAAA+rB,EAAAnkB,WAAA9R,OAAA+R,eAAAkkB,IAAA91B,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBAFe0I,qUAFDrE,EAAAlG,QAAMmG,+CAQpB,OACID,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACXT,EAAAlG,QAAA0G,cAAA,sBAEJR,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACXT,EAAAlG,QAAA0G,cAAA,KAAGhF,KAAK,aAAR,wCAOL6wB,4UCxBftH,EAAA3tB,EAAA,uCACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,OAGMk1B,cAEF,SAAAA,EAAY/rB,gGAAOc,CAAAf,KAAAgsB,GAAA,IAAAjoB,mKAAA4D,CAAA3H,MAAAgsB,EAAApkB,WAAA9R,OAAA+R,eAAAmkB,IAAA/1B,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAKmD,MAAQ,CACTxM,MAAO,KACP+I,QAAS,KACT0I,SAAS,GAEbpI,EAAKggB,SAAWhgB,EAAKggB,SAASvrB,KAAduL,GARDA,qUAFArE,EAAAlG,QAAMmG,+CAahBiG,GAAG,IAAA2H,EAAAvN,KACR4F,EAAEwJ,iBACFpP,KAAKiI,SAAS,CAACvN,MAAM,KAAM+I,QAAS,KAAM0I,SAAS,KACnD,EAAA7L,EAAArH,SAAQ,mCAAoC,CACxC9D,KAAM,CACF4zB,SAAY/oB,KAAK+oB,SAAS9wB,MAC1Bg0B,aAAgBjsB,KAAKksB,YAAYj0B,SAEtCwY,KAAK,SAAA7K,GACJ2H,EAAKwb,SAASoD,QACd5e,EAAKtF,SAAS,CAACvN,MAAOkL,EAAE9K,aAAcqR,SAAS,MAChDxJ,KAAK,WACJ4K,EAAKtF,SAAS,CAACxE,SAAS,EAAM0I,SAAS,MACxCtC,OAAO,WACN0D,EAAKwb,SAAS9wB,MAAQ,GACtBsV,EAAK2e,YAAYj0B,MAAQ,2CAK7B,GAAK+H,KAAKkH,MAAMxM,MAChB,OACIgF,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,+CACXT,EAAAlG,QAAA0G,cAAA,cAASF,KAAKkH,MAAMxM,MAAMoP,mDAKrB3C,GACb,GAAMnH,KAAKkH,MAAMxM,OAAasF,KAAKkH,MAAMxM,MAAMmvB,OAA/C,CADoB,IAAAznB,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAEpB,QAAAkJ,EAAAC,EAAkBxC,KAAKkH,MAAMxM,MAAMmvB,OAAnC9xB,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAA2C,KAAlC1H,EAAkC6H,EAAAtK,MACvC,GAAIyC,EAAMyM,OAASA,EACf,OACIzH,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,eAAezF,EAAMoP,UAL1B,MAAAlH,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,6CAYpB,GAAKtC,KAAKkH,MAAMzD,QAChB,OACI/D,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,uBACXT,EAAAlG,QAAA0G,cAAA,iGAMR,OAA0B,GAAtBF,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,UAAQ4E,KAAK,SAAS3E,UAAU,mBAAhC,QAEkB,GAAtBH,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,UAAQ4E,KAAK,SAAS3E,UAAU,kBAAkB+jB,UAAU,GAA5D,kCAFR,mCAQK,IAAA3U,EAAAvP,KACL,OACIN,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,cAAd,oBAEJT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,4BACVH,KAAKomB,gBACLpmB,KAAKmmB,cACNzmB,EAAAlG,QAAA0G,cAAA,QAAMxG,OAAO,OAAOqqB,SAAU/jB,KAAK+jB,UAC/BrkB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,iCACCF,KAAK4pB,iBAAiB,YACvBlqB,EAAAlG,QAAA0G,cAAA,SACI+S,IAAK,SAACA,GAAD,OAAU1D,EAAKwZ,SAAW9V,GAC/BnO,KAAK,WACLtN,KAAK,WACL2I,UAAU,oCAGlBT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,6BACCF,KAAK4pB,iBAAiB,gBACvBlqB,EAAAlG,QAAA0G,cAAA,SACI+S,IAAK,SAACA,GAAD,OAAU1D,EAAK2c,YAAcjZ,GAClCnO,KAAK,WACLtN,KAAK,eACL2I,UAAU,oCAGjBH,KAAKosB,qCAQfJ,8UCrHfl1B,EAAA,IACA2lB,EAAA3lB,EAAA,OACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,0DAEMu1B,cAEF,SAAAA,EAAYpsB,gGAAOc,CAAAf,KAAAqsB,GAAA,IAAAtoB,mKAAA4D,CAAA3H,MAAAqsB,EAAAzkB,WAAA9R,OAAA+R,eAAAwkB,IAAAp2B,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAKmD,MAAQ,CACTiF,SAAS,EACTxC,YAAa,IALF5F,qUAFGrE,EAAAlG,QAAMmG,0DAYxBK,KAAKunB,0DAGQ,IAAAha,EAAAvN,KACbA,KAAKiI,SAAS,CAACkE,SAAS,KACxB,EAAA7L,EAAArH,SAAA,kBAA2B,CACvBqzB,KAAM,CACFnS,SAAU,OAEfxX,KAAK,SAAAxN,GACJoY,EAAKtF,SAAS,CAAC0B,YAAaxU,EAAMgX,SAAS,kDAK/C,OAAqC,GAAjCnM,KAAKkH,MAAMyC,YAAYhU,OAEnB+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBAAf,6BAKJT,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,SACjBT,EAAAlG,QAAA0G,cAAA,aACCF,KAAKkH,MAAMyC,YAAYoL,IAAI,SAAAhe,GAAA,OACxB2I,EAAAlG,QAAA0G,cAAA,MAAI3H,IAAKxB,EAAE8b,IACPnT,EAAAlG,QAAA0G,cAAA,UAAKnJ,EAAES,MACPkI,EAAAlG,QAAA0G,cAAA,UAAKnJ,EAAEmC,KACPwG,EAAAlG,QAAA0G,cAAA,MAAIsW,MAAM,QACN9W,EAAAlG,QAAA0G,cAAAuc,EAAAsD,KAAA,CAAM1C,GAAA,mBAAuBtmB,EAAE8b,IAC3BnT,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,mEAWjC,OAAIH,KAAKkH,MAAMiF,QACJzM,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,MAEPkG,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,4BACXT,EAAAlG,QAAA0G,cAAAuc,EAAAsD,KAAA,CACI1C,GAAG,eACHld,UAAU,8BAFd,mBAMCH,KAAKusB,sDAMd,OACI7sB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,cAAd,iBAEHH,KAAKwsB,8BAMPH,8UCtFfv1B,EAAA,QACAA,EAAA,IACA2lB,EAAA3lB,EAAA,OACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,sDAEA,IAAMuI,EAAY,CACdpE,SAAUsE,EAAA/F,QAAUd,OAAO8O,YAGzBilB,cAEF,SAAAA,EAAYxsB,gGAAOc,CAAAf,KAAAysB,GAAA,IAAA1oB,mKAAA4D,CAAA3H,MAAAysB,EAAA7kB,WAAA9R,OAAA+R,eAAA4kB,IAAAx2B,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAKggB,SAAWhgB,EAAKggB,SAASvrB,KAAduL,GAChBA,EAAK2oB,SAAW3oB,EAAK2oB,SAASl0B,KAAduL,GAChBA,EAAK4oB,aAAe5oB,EAAK4oB,aAAan0B,KAAlBuL,GACpBA,EAAK6oB,mBAAqB7oB,EAAK6oB,mBAAmBp0B,KAAxBuL,GAC1BA,EAAKmD,MAAQ,CACTiF,QAAS,EACTzR,MAAO,KACP+I,SAAS,EACTyB,WAAY,CACR1N,KAAM,GACN0B,IAAK,GACL2zB,OAAQ,IAEZC,MAAO,IAhBI/oB,qUAFErE,EAAAlG,QAAMmG,0DAuBnBK,KAAKC,MAAMhF,SAAS3B,MAAMuZ,KAC1B7S,KAAKuE,gBACLvE,KAAK+sB,yDAIFC,GACPhtB,KAAKiI,SAAS,SAACf,GACX,MAAO,CAACiF,QAASjF,EAAMiF,QAAU6gB,6CAIzB,IAAAzf,EAAAvN,KACZA,KAAKitB,WAAW,IAChB,EAAA3sB,EAAArH,SAAA,mBACuB+G,KAAKC,MAAMhF,SAAS3B,MAAMuZ,IAC/CpC,KAAK,SAAA7K,MAEJjD,KAAK,SAAAxN,GACJoY,EAAKtF,SAAS,CAAC/C,WAAY/P,MAC5B0U,OAAO,WACN0D,EAAK0f,YAAY,kDAIJ,IAAA1d,EAAAvP,KACjBA,KAAKitB,WAAW,IAChB,EAAA3sB,EAAArH,SAAA,mBACuB+G,KAAKC,MAAMhF,SAAS3B,MAAMuZ,GADjD,UAEEpC,KAAK,SAAA7K,MAEJjD,KAAK,SAAAxN,GACJoa,EAAKtH,SAAS,CAAC6kB,MAAO33B,MACvB0U,OAAO,WACN0F,EAAK0d,YAAY,sCAIhBrnB,GAAG,IAAA8J,EAAA1P,KACR4F,EAAEwJ,iBACF,IAAIlW,oBACA8G,KAAKC,MAAMhF,SAAS3B,MAAMuZ,KAC1B3Z,OAAW8G,KAAKC,MAAMhF,SAAS3B,MAAMuZ,KAEzC,EAAAvS,EAAArH,SAAQC,EAAK,CACTQ,OAAQsG,KAAKC,MAAMhF,SAAS3B,MAAMuZ,GAAG,MAAM,OAC3C1d,KAAM,CACFqC,KAAMwI,KAAKxI,KAAKS,MAChBiB,IAAK8G,KAAK9G,IAAIjB,MACd40B,OAAQ7sB,KAAK6sB,OAAO50B,SAEzBwY,KAAK,SAAA7K,GACJ8J,EAAKzH,SAAS,CAACvN,MAAOkL,EAAE9K,iBACzB6H,KAAK,SAAAxN,GACJua,EAAKzP,MAAMitB,OAAOr3B,KAAlB,mBAA0CV,EAAK0d,uCAI9CjN,GAAG,IAAAsK,EAAAlQ,KACR4F,EAAEwJ,iBACG2Y,QAAQ,wDAEb,EAAAznB,EAAArH,SAAA,mBAA2B+G,KAAKC,MAAMhF,SAAS3B,MAAMuZ,GAAM,CACvDnZ,OAAQ,WACT+W,KAAK,SAAA7K,GACJsK,EAAKjI,SAAS,CAACvN,MAAOkL,EAAE9K,iBACzB6H,KAAK,WACJuN,EAAKjQ,MAAMitB,OAAOr3B,KAAK,wDAIlB+P,GAAG,IAAA0K,EAAAtQ,KACZ4F,EAAEwJ,iBACF,IAAInX,EAAQ2N,EAAEuC,OAAO3Q,KAAKS,OAC1B,EAAAqI,EAAArH,SAAQ,WAAY,CAChBK,MAAO,CACH6zB,SAAUl1B,KAEfwY,KAAK,SAAA7K,GACJwnB,MAAMxnB,EAAEkE,WACTnH,KAAK,SAAAxN,GACJ,GAAmB,GAAfA,EAAKQ,OAAT,CAIA,IAAIkd,EAAKvC,EAAKrQ,MAAMhF,SAAS3B,MAAMuZ,IACnC,EAAAvS,EAAArH,SAAA,mBAA2B4Z,EAA3B,UAAuC1d,EAAK,GAAG0d,GAAM,CAClDnZ,OAAQ,QACR+W,KAAK,SAAA7K,GACJwnB,MAAMxnB,EAAEkE,WACTnH,KAAK,WACJ2N,EAAKyc,4BATLK,uBAAuBn1B,gDAchB2N,GAAG,IAAA4K,EAAAxQ,KAClB4F,EAAEwJ,iBACF,IAAIyD,EAAK7S,KAAKC,MAAMhF,SAAS3B,MAAMuZ,IACnC,EAAAvS,EAAArH,SAAA,mBAA2B4Z,EAA3B,UAAuCjN,EAAEuC,OAAOgiB,OAAOlyB,MAAS,CAC7DyB,OAAQ,WACR+W,KAAK,SAAA7K,GACJwnB,MAAMxnB,EAAEkE,WACTnH,KAAK,WACJ6N,EAAKuc,6DAIC,IAAAna,EAAA5S,KACV,OAA+B,GAA3BA,KAAKkH,MAAM4lB,MAAMn3B,OAEb+J,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,oBAAf,0CAKJT,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,kBACbT,EAAAlG,QAAA0G,cAAA,aACKF,KAAKkH,MAAM4lB,MAAM/X,IAAI,SAAAsY,GAAA,OAClB3tB,EAAAlG,QAAA0G,cAAA,MAAI3H,IAAK80B,EAAExa,IACPnT,EAAAlG,QAAA0G,cAAA,MAAIuR,MAAO,CAAC6b,cAAe,WAAYD,EAAE71B,MACzCkI,EAAAlG,QAAA0G,cAAA,MAAIsW,MAAM,OAAOrW,UAAU,iBACvBT,EAAAlG,QAAA0G,cAAA,QAAM6jB,SAAUnR,EAAKga,oBACjBltB,EAAAlG,QAAA0G,cAAA,SACI4E,KAAK,SACLtN,KAAK,SACLS,MAAOo1B,EAAExa,KAEbnT,EAAAlG,QAAA0G,cAAA,UAAQ4E,KAAK,SAAS3E,UAAU,iBAAiBvD,MAAM,eACnD8C,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,uEAY7C,OACIT,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,iBAAiB4jB,SAAU/jB,KAAK2sB,cAC5CjtB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,SACfT,EAAAlG,QAAA0G,cAAA,SACI4E,KAAK,OACLtN,KAAK,OACL2I,UAAU,iCACVopB,YAAY,cAGhB7pB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,SACfT,EAAAlG,QAAA0G,cAAA,UAAQC,UAAU,mBAAlB,iEASR,GAAKH,KAAKC,MAAMhF,SAAS3B,MAAMuZ,GAC/B,OACInT,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,cAAd,qBACCH,KAAKutB,uBACLvtB,KAAKwtB,4DAMd,GAAKxtB,KAAKC,MAAMhF,SAAS3B,MAAMuZ,GAC/B,OACInT,EAAAlG,QAAA0G,cAAA,UAAQC,UAAU,iBAAiBuJ,QAAS1J,KAAK0sB,UAAjD,gDAOJ,GAAK1sB,KAAKkH,MAAMxM,MAChB,OACIgF,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,0DACXT,EAAAlG,QAAA0G,cAAA,cAASF,KAAKkH,MAAMxM,MAAMoP,mDAKrB3C,GACb,GAAMnH,KAAKkH,MAAMxM,OAAasF,KAAKkH,MAAMxM,MAAMmvB,OAA/C,CADoB,IAAAznB,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAEpB,QAAAkJ,EAAAC,EAAkBxC,KAAKkH,MAAMxM,MAAMmvB,OAAnC9xB,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAA2C,KAAlC1H,EAAkC6H,EAAAtK,MACvC,GAAIyC,EAAMyM,OAASA,EACf,OACIzH,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,eAAezF,EAAMoP,UAL1B,MAAAlH,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,uCAWd,IAAAwlB,EAAA9nB,KACN,OAAIA,KAAKkH,MAAMiF,QAAU,EACdzM,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,MAEPkG,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,4BACVH,KAAKmmB,cACNzmB,EAAAlG,QAAA0G,cAAA,QACIxG,OAAO,OACPyG,UAAU,aACV4jB,SAAU/jB,KAAK+jB,UAEfrkB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,qBACCF,KAAK4pB,iBAAiB,QACvBlqB,EAAAlG,QAAA0G,cAAA,SACI+S,IAAK,SAACA,GAAD,OAAU6U,EAAKtwB,KAAOyb,GAC3BnO,KAAK,OACL3E,UAAU,iCACVgZ,aAAcnZ,KAAKkH,MAAMhC,WAAW1N,KACpC+xB,YAAY,oBAGpB7pB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,oBACCF,KAAK4pB,iBAAiB,OACvBlqB,EAAAlG,QAAA0G,cAAA,SACI+S,IAAK,SAACA,GAAD,OAAU6U,EAAK5uB,IAAM+Z,GAC1BnO,KAAK,OACL3E,UAAU,iCACVgZ,aAAcnZ,KAAKkH,MAAMhC,WAAWhM,IACpCqwB,YAAY,yBAGpB7pB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,cACXT,EAAAlG,QAAA0G,cAAA,uBACCF,KAAK4pB,iBAAiB,UACvBlqB,EAAAlG,QAAA0G,cAAA,SACI+S,IAAK,SAACA,GAAD,OAAU6U,EAAK+E,OAAS5Z,GAC7BnO,KAAK,OACL3E,UAAU,iCACVgZ,aAAcnZ,KAAKkH,MAAMhC,WAAW2nB,OACpCtD,YAAY,yBAGpB7pB,EAAAlG,QAAA0G,cAAA,UAAQ4E,KAAK,SAAS3E,UAAU,yBAAhC,QAGCH,KAAKytB,sBAGTztB,KAAK0tB,0DAMd,OACIhuB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,UACXT,EAAAlG,QAAA0G,cAAA,MAAIC,UAAU,cAAd,gBAEHH,KAAKwsB,oBAKtBC,EAAWptB,UAAYA,aAER,EAAAod,EAAAqN,YAAW2C,+UC9S1B31B,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,GACAwJ,EAAAxJ,EAAA,0DAEM62B,cAEF,SAAAA,EAAY1tB,gGAAOc,CAAAf,KAAA2tB,GAAA,IAAA5pB,mKAAA4D,CAAA3H,MAAA2tB,EAAA/lB,WAAA9R,OAAA+R,eAAA8lB,IAAA13B,KAAA+J,KACTC,IADS,OAEf,EAAAM,EAAAlF,iBACA0I,EAAKmD,MAAQ,CACTiF,SAAS,EACT0Y,MAAO,MALI9gB,qUAFMrE,EAAAlG,QAAMmG,0DAY3BK,KAAK4tB,8CAGE,IAAArgB,EAAAvN,KACHmqB,GAAS,EAAA5pB,EAAArE,cACb,EAAAoE,EAAArH,SAAA,YAAoBkxB,EAApB,eAAyCxnB,KAAK,SAACkiB,GAC3CtX,EAAKtF,SAAS,CACVkE,SAAS,EACT0Y,MAAOA,uCAMf,OAAI7kB,KAAKkH,MAAMiF,QAEPzM,EAAAlG,QAAA0G,cAAA,YACIR,EAAAlG,QAAA0G,cAAAyS,EAAAnZ,QAAA,MACAkG,EAAAlG,QAAA0G,cAAA,cAAQR,EAAAlG,QAAA0G,cAAA,kCAIhBR,EAAAlG,QAAA0G,cAAA,YACAR,EAAAlG,QAAA0G,cAAA,gCACAR,EAAAlG,QAAA0G,cAAA,SAAOC,UAAU,uBACbT,EAAAlG,QAAA0G,cAAA,aACAR,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,MAAIsW,MAAM,SAAV,UACA9W,EAAAlG,QAAA0G,cAAA,UAAKF,KAAKkH,MAAM2d,MAAMgJ,OAAtB,WACJnuB,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,iCACAR,EAAAlG,QAAA0G,cAAA,WAAK,EAAAK,EAAAnC,iBAA0D,GAA1C4B,KAAKkH,MAAM2d,MAAMG,0BAA6B,KACvEtlB,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,8BACAR,EAAAlG,QAAA0G,cAAA,UAAKF,KAAKkH,MAAM2d,MAAME,mBAC1BrlB,EAAAlG,QAAA0G,cAAA,UAAIR,EAAAlG,QAAA0G,cAAA,mCACAR,EAAAlG,QAAA0G,cAAA,UAAKF,KAAKkH,MAAM2d,MAAMiJ,cAAtB,iCAQLH,8UC1Df72B,EAAA,IAEAyJ,GADAzJ,EAAA,GACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yDAEAA,EAAA,SAEMqkB,grBAAezb,EAAAlG,QAAMmG,2DAGnB,OACID,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,YACZT,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,uBACVwhB,cAAY,YAFhB,SAMAjiB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iBACXT,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,cAAlC,aACAwE,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,WAAlC,UACAwE,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,sBAAlC,qBACAwE,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,mBAAlC,kBACAwE,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,kBAAlC,WACAwE,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,qBAAlC,SACAwE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACfT,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,aAAlC,mDAOZ,OACIwE,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,OACVjF,KAAK,SAFT,iDAUJ,OACIwE,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,OACVjF,KAAK,cAFT,sDAUJ,IAAK,EAAAqF,EAAAnF,YAEL,OACIsE,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,YACZT,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,uBACVwhB,cAAY,YAEZjiB,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAEjBT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qCACXT,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,YAAlC,WACAwE,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,iBAAlC,gBACAwE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,qBACfT,EAAAlG,QAAA0G,cAAA,KAAGC,UAAU,gBAAgBjF,KAAK,aAAlC,yDAOZ,IAAK,EAAAqF,EAAAnF,YAEL,OACIsE,EAAAlG,QAAA0G,cAAA,QAAMC,UAAU,QACZT,EAAAlG,QAAA0G,cAAA6tB,EAAAv0B,QAAA,MACAkG,EAAAlG,QAAA0G,cAAA0R,EAAApY,QAAA,8CAMR,KAAI,EAAA+G,EAAAnF,YAEJ,OACIsE,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,OACVjF,KAAK,YAFT,sDAUJ,KAAI,EAAAqF,EAAAnF,YAEJ,OACIsE,EAAAlG,QAAA0G,cAAA,KACIC,UAAU,OACVjF,KAAK,gBAFT,gDAUJ,OACIwE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iBACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,aACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,YACVH,KAAK8rB,aACL9rB,KAAKugB,iBACLvgB,KAAKguB,sBAGVtuB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,2CACVH,KAAKiuB,mBACLjuB,KAAKkuB,mBACLluB,KAAKmuB,eACLnuB,KAAKouB,kBAGV1uB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iDACXT,EAAAlG,QAAA0G,cAAAmuB,EAAA70B,QAAA,CAAQjB,IAAI,kCAUzB4iB,4UC/IfsJ,EAAA3tB,EAAA,uCACAwJ,EAAAxJ,EAAA,GAEAA,EAAA,KAEA,IAIMw3B,cAEF,SAAAA,EAAYruB,gGAAOc,CAAAf,KAAAsuB,GAAA,IAAAvqB,mKAAA4D,CAAA3H,MAAAsuB,EAAA1mB,WAAA9R,OAAA+R,eAAAymB,IAAAr4B,KAAA+J,KACTC,IADS,OAEf8D,EAAKwqB,eAAiBxqB,EAAK6T,aAAapf,KAAlBuL,GACtBA,EAAKyqB,UAAYzqB,EAAK0qB,QAAQj2B,KAAbuL,GACjBA,EAAK2qB,YAAc3qB,EAAK4qB,UAAUn2B,KAAfuL,GACnBA,EAAK6qB,WAAa7qB,EAAK8qB,SAASr2B,KAAduL,GAClBA,EAAKggB,SAAWhgB,EAAK+hB,OAAOttB,KAAZuL,GAChBA,EAAK2F,QAAU3F,EAAK8P,MAAMrb,KAAXuL,GACfA,EAAKmD,MAAQ,CACT4nB,QAAS,GACTzyB,MAAM,EACN0yB,iBAAkB,MAEtBhrB,EAAKirB,WAAa,KAClBjrB,EAAKgrB,iBAAmB,KACxBhrB,EAAKmQ,gBAAkBnQ,EAAKoQ,cAAc3b,KAAnBuL,GAfRA,qUAFFrE,EAAAlG,QAAMmG,0DAqBnBoD,SAASwJ,iBAAiB,QAASvM,KAAKkU,gEAIxCnR,SAASqR,oBAAoB,QAASpU,KAAKkU,uDAGjCtO,GACL5F,KAAKivB,KAAK3a,SAAS1O,EAAEuC,SACtBnI,KAAKiI,SAAS,CAAC5L,MAAM,yCAIhBuJ,GAAG,IAAA2H,EAAAvN,KACRA,KAAKgvB,YACLhvB,KAAKgvB,WAAWE,QAET,IADDtpB,EAAEuC,OAAOlQ,MAAMk3B,OASzBnvB,KAAKgvB,YAAa,EAAA1uB,EAAArH,SAAQ,WAAY,CAClCK,MAAO,CACH81B,cAAexpB,EAAEuC,OAAOlQ,MAAMk3B,OAC9BhV,SAAU,GACVkV,OAAQ,kCAEb1sB,KAAK,SAAAxN,GACJoY,EAAK+hB,YAAY3M,UAAY,EAC7BpV,EAAKtF,SAAS,CACV6mB,QAAS35B,EACTkH,MAAM,EACN0yB,iBAAkB,OAEtBxhB,EAAKgiB,kBAAkB,KApBvBvvB,KAAKiI,SAAS,CACV6mB,QAAS,GACTzyB,MAAM,EACN0yB,iBAAkB,uCAqBtBnpB,GACJ,OAAQA,EAAE4pB,SACN,KArEG,GAsECxvB,KAAKuvB,mBAAmB,GACxB,MACJ,KAvEK,GAwEDvvB,KAAKuvB,kBAAkB,GACvB,MACJ,KAzEM,GA0EEvvB,KAAKkH,MAAM6nB,mBACX9zB,SAASC,KAAT,SAAyB8E,KAAKkH,MAAM6nB,qDAK1CnpB,GACN5F,KAAKkH,MAAM6nB,iBAAmBlkB,SAASjF,EAAEuC,OAAO0M,aAAa,YAC7D7U,KAAKuvB,kBAAkB,GAAG,oCAGrB3pB,GACL5F,KAAKiI,SAAS,CAAC8mB,iBAAkB,iDAGnB/B,EAAKyC,GACnB,GAAiC,GAA7BzvB,KAAKkH,MAAM4nB,QAAQn5B,OAAvB,CAEA,IAAIF,GAAK,EACT,GAAIuK,KAAKkH,MAAM6nB,iBAAkB,CAC7Bt5B,EAAI,EADyB,IAAA2M,GAAA,EAAAC,GAAA,EAAAC,OAAAjJ,EAAA,IAE7B,QAAAkJ,EAAAC,EAAmBxC,KAAKkH,MAAM4nB,QAA9B/2B,OAAA0K,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAuC,CACnC,GADmCG,EAAAtK,MACxB4a,IAAM7S,KAAKkH,MAAM6nB,iBACxB,MAEJt5B,KANyB,MAAAmN,GAAAP,GAAA,EAAAC,EAAAM,EAAA,aAAAR,GAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,KASjC7M,GAAQu3B,GACA,IACJv3B,EAAI,GACJA,EAAKuK,KAAKkH,MAAM4nB,QAAQn5B,OAAS,IACjCF,EAAIuK,KAAKkH,MAAM4nB,QAAQn5B,OAAS,GACpC,IAAIkd,EAAK7S,KAAKkH,MAAM4nB,QAAQr5B,GAAGod,GAI/B,GAHA7S,KAAKiI,SAAS,CACV8mB,iBAAkBlc,KAElB4c,EAAJ,CAEA,IAAIrT,EAASrZ,SAAS+N,eAAe,WAAW+B,GAAIoJ,aACpD,IAAMxmB,EAAE,GAAK2mB,EAAUpc,KAAKsvB,YAAYrT,aAAc,CAClD,IACIyT,EAAKj6B,EADDuG,KAAKC,MAAM+D,KAAKsvB,YAAYrT,aAAeG,GACtC,EACThlB,EAAI4I,KAAKsvB,YAAYrT,aAAeG,EACxCpc,KAAKsvB,YAAY3M,UAAa+M,EAAEtT,EAAQhlB,OAExC4I,KAAKsvB,YAAY3M,UAAY,mCAI9B/c,GACHA,EAAEwJ,+CAGAxJ,GACE5F,KAAKkH,MAAM6nB,mBACX9zB,SAASC,KAAT,SAAyB8E,KAAKkH,MAAM6nB,0DAG5Bv4B,GACZ,IAAI2J,EAAY,SAGhB,OAFI3J,EAAOqc,IAAM7S,KAAKkH,MAAM6nB,mBACxB5uB,GAAa,aACVA,mCAGF,IAAAoP,EAAAvP,KACL,OACIN,EAAAlG,QAAA0G,cAAA,QACI2S,GAAG,SACH1S,UAAU,cACV4jB,SAAU/jB,KAAK+jB,SACf9Q,IAAK,SAACA,GAAD,OAAS1D,EAAK0f,KAAOhc,IAE1BvT,EAAAlG,QAAA0G,cAAA,SACIC,UAAU,eACV2E,KAAK,OACLykB,YAAY,SACZjhB,SAAUtI,KAAKuuB,eACfC,UAAWxuB,KAAKwuB,YAEpB9uB,EAAAlG,QAAA0G,cAAA,OACIC,UAAU,UACV8S,IAAK,SAACA,GAAD,OAAS1D,EAAK+f,YAAcrc,GACjCxB,MAAO,CAACke,QAAQ3vB,KAAKkH,MAAM7K,KAAK,QAAQ,SAEvC2D,KAAKkH,MAAM4nB,QAAQ/Z,IAAI,SAAAjd,GAAA,OACpB4H,EAAAlG,QAAA0G,cAAA,OACI3H,IAAKT,EAAE+a,GACPA,GAAA,WAAe/a,EAAE+a,GACjB+c,UAAS93B,EAAE+a,GACX3X,KAAA,SAAepD,EAAE+a,GACjB1S,UAAWoP,EAAKsgB,gBAAgB/3B,GAChC42B,YAAanf,EAAKmf,YAClBE,WAAYrf,EAAKqf,WACjBllB,QAAS6F,EAAK7F,SAEdhK,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,OACXT,EAAAlG,QAAA0G,cAAA,OACI8C,IAAqB,MAAhBlL,EAAE2hB,aAAmB3hB,EAAE2hB,aAAavgB,IAAM,SAAS,MAGhEwG,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,SACVrI,EAAE8E,MADP,KACgB9E,EAAE+mB,UAAU/mB,EAAE+mB,UAAU7hB,UAAU,EAAG,GAAG,GADxD,6BAWbsxB,iWClMfx3B,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KAEAyJ,KADAzJ,EAAA,KACAA,EAAA,IACAwJ,EAAAxJ,EAAA,GACA0pB,EAAA1pB,EAAA,uDAEAA,EAAA,SAEMg5B,cAEF,SAAAA,EAAY7vB,gGAAOc,CAAAf,KAAA8vB,GAAA,IAAA/rB,mKAAA4D,CAAA3H,MAAA8vB,EAAAloB,WAAA9R,OAAA+R,eAAAioB,IAAA75B,KAAA+J,KACTC,IADS,OAEf8D,EAAKmD,MAAQ,CACTyP,WAAW,EACXoZ,WAAY,GACZrsB,YAAa,GACbwG,KAAM,KACNiG,YAAa,EACbhE,SAAS,EACT6jB,cAAc,GAElBjsB,EAAKrC,KAAO,KAEZqC,EAAK0H,0BAA4B1H,EAAK2H,wBAAwBlT,KAA7BuL,GACjCA,EAAK4H,gBAAkB5H,EAAK6H,cAAcpT,KAAnBuL,GACvBA,EAAK2G,iBAAmB3G,EAAK4G,eAAenS,KAApBuL,GACxBA,EAAKuG,cAAgBvG,EAAKsH,YAAY7S,KAAjBuL,GACrBA,EAAKwG,iBAAmBxG,EAAKuH,eAAe9S,KAApBuL,GACxBA,EAAKksB,qBAAuBlsB,EAAKmsB,gBAAgB13B,KAArBuL,GAlBbA,qUAFKrE,EAAAlG,QAAMmG,0DAwB1BK,KAAK0B,KAAO,IAAAuH,EAAAzP,QACZwG,KAAK0B,KAAKgM,KAAK1N,KAAKmB,SAAS3I,KAAKwH,sDAIlCA,KAAK0B,KAAK0S,oBACN,aACApU,KAAKmwB,iBAAiB33B,KAAKwH,OAG/B,IAAIoD,EAAUpD,KAAK0B,KAAKgD,aACpBtB,GACAA,EAAQgtB,sBACJ,kCACApwB,KAAKqwB,gBAAgB73B,KAAKwH,2CAK1BsR,GACI,IAARA,IACAA,EAAO,MACXtR,KAAKswB,gBAAgB,CAAChrB,WAAYgM,2CAGvBA,GACC,IAARA,IACAA,EAAO,MACXtR,KAAKswB,gBAAgB,CAACjrB,cAAeiM,4CAGzBnc,GAAM,IAAAoY,EAAAvN,KACd3D,EAAO2D,KAAKkH,MAAMgD,KAAK7N,KACvBC,EAAU0D,KAAKkH,MAAMgD,KAAK5N,SAC9B,EAAAgE,EAAArH,SAAA,YAAoBoD,EAAKwW,GAAzB,sBAAkD,CAC9CnZ,OAAQ,QACRvE,KAAMA,IACPwN,KAAK,WACJ4K,EAAK7L,KAAKwH,YAAY7M,EAAKwW,GAAIvW,EAAQE,OAAQ+Q,EAAKrG,MAAMiJ,kDAK9DnQ,KAAK0B,KAAK6K,iBACN,aACAvM,KAAKmwB,iBAAiB33B,KAAKwH,8CAIpBqG,GACXrG,KAAK0B,KAAK6uB,uDAGGlqB,GACb,OAAQA,EAAMc,OACV,IAAK,cACDnH,KAAKwwB,mBAAmBnqB,GACxB,MACJ,IAAK,cACDrG,KAAKywB,mBACL,MACJ,IAAK,cACDzwB,KAAK0wB,mBAAmBrqB,+CAMhC,IAAIsQ,EAAY3W,KAAK0B,KAAKyC,cAC1BnE,KAAKiI,SAAS,CACV0O,UAAWA,EACXoZ,WAAapZ,EAAW3W,KAAK0B,KAAKumB,kBAAkB,KAEpDtR,GACA3W,KAAKiI,SAAS,CAACkE,SAAS,IACxBnM,KAAK0B,KAAKgD,aAAaisB,mBACnB,kCACA3wB,KAAKqwB,gBAAgB73B,KAAKwH,OAE9BA,KAAK0B,KAAKgD,aAAaC,YACnB,sCACA,KAGJ3E,KAAKiI,SAAS,CAACiC,KAAM,+CAIb0mB,EAAW9mB,GAAS,IAAAyF,EAAAvP,KAChCA,KAAKiI,SAAS,CACViC,KAAMtQ,KAAK4xB,MAAM1hB,GACjBomB,gBAAiB,MAClB,WACK3gB,EAAK7N,KAAKmvB,mBACVthB,EAAKmhB,mBAAmB,CACpBz4B,MAAOsX,EAAK7N,KAAKmvB,kBAAkBrtB,qBAG3C+L,EAAKuhB,kEAIMzqB,GACfrG,KAAKiI,SAAS,CACVvE,YAAa2C,EAAMpO,MACnBkU,QAAyB,aAAf9F,EAAMpO,OAAyB+H,KAAKgwB,eAE7ChwB,KAAKkH,MAAMgD,MACZlK,KAAK0B,KAAKgD,aAAaC,YACnB,sCACA,IAEW,QAAf0B,EAAMpO,QACN,EAAAuoB,EAAAhY,gCAA+B,UAAW,EAAG,gDAIhC,IAAAkH,EAAA1P,KACjB,GAAKA,KAAKkH,MAAMgD,KAAhB,CAEA,IAAI1N,EAASqO,SAAS7K,KAAKkH,MAAMgD,KAAK5N,QAAQE,QAAU,EACpDqH,EAAS7D,KAAKkH,MAAMgD,KAAK7N,KAAKwW,IAClC,EAAAvS,EAAArH,SAAA,YACgB4K,EADhB,aACmCrH,GACjCmG,KAAK,SAAAxN,GACHua,EAAKzH,SAAS,CAACgf,YAAa9xB,iDAIlB,IAAA+a,EAAAlQ,KACd,GAAMA,KAAKkH,MAAM+f,aAAkBjnB,KAAKkH,MAAMgD,KAA9C,CAEA,IAAIA,EAAOlK,KAAKkH,MAAMgD,KACtBA,EAAA,QAAkBlK,KAAKkH,MAAM+f,YAC7B/c,EAAA,UAAoB,EACpBlK,KAAKiI,SAAS,CACVgf,YAAa,KACb/c,KAAMA,EACNxG,YAAa,GACbyI,SAAS,EACT6jB,cAAc,EACd7f,YAAa,IAEjBnQ,KAAK0B,KAAKwH,YACNlJ,KAAKkH,MAAMgD,KAAK7N,KAAKwW,GACrB7S,KAAKkH,MAAM+f,YAAYzqB,OACvB,GACForB,MAAM,WACJ1X,EAAKjI,SAAS,CAAC+nB,cAAc,MAC9BxrB,KAAK,WAEJ0L,EAAKxO,KAAKgD,aAAaC,YACnB,sCACA,IAEJuL,EAAKjI,SAAS,CAAC+nB,cAAc,kDAIlB3pB,GACf,IAAIyF,EAAOzF,EAAMpO,MACZ+H,KAAK0B,KAAKmvB,oBAEV7wB,KAAK0B,KAAKmvB,kBAAkB/W,OAEe,GAA5C9Z,KAAK0B,KAAKmvB,kBAAkB/W,MAAMnkB,SAGrB,GADDqK,KAAK0B,KAAKmvB,kBAAkB/W,MAAM,GAAGhW,WAC/B9D,KAAKkH,MAAMgD,OAC7B4B,GAAQ9L,KAAKkH,MAAMgD,KAAKpG,WAC5B9D,KAAKiI,SAAS,CAACkI,YAAarE,4CAGlB0F,GAAS,IAAAlB,EAAAtQ,KACnBA,KAAK0B,KAAKiC,MAAM,WACZ2M,EAAKpJ,MAAMgD,KAAX,UAA+BsH,EAC/BlB,EAAKrI,SAAS,CACVkE,SAAS,EACTgE,YAAaqB,EACbwe,cAAc,IAElB1f,EAAK5O,KAAKwH,YACNoH,EAAKpJ,MAAMgD,KAAK7N,KAAKwW,GACrBvC,EAAKpJ,MAAMgD,KAAK5N,QAAQE,OACxBgV,GACFoW,MAAM,WACJtX,EAAKrI,SAAS,CAAC+nB,cAAc,MAC9BxrB,KAAK,WAEJ8L,EAAK5O,KAAKgD,aAAaC,YACnB,sCACA,IAEJ2L,EAAKrI,SAAS,CAAC+nB,cAAc,0DAMrC,OAAOhwB,KAAKkH,MAAMiJ,wDAIlB,GAAInQ,KAAKkH,MAAMiF,QACX,OACIzM,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA,OAAK8C,IAAI,6BAIrB,IAAIgP,GAAY,EAAAnS,EAAArG,SAAW,CACvByY,IAAI,EACJC,WAAsC,WAA1BlS,KAAKkH,MAAMxD,YACvByO,UAAqC,WAA1BnS,KAAKkH,MAAMxD,cAE1B,OACIhE,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA,QACIC,UAAW6R,EACXtI,QAAS1J,KAAK0K,0DAQ1B,OAAK1K,KAAKkH,MAAMgD,KAETW,SACH7K,KAAKkH,MAAMgD,KAAKtF,SAASkG,OAAOF,UAFzB,4CAOX,IAAK5K,KAAKkH,MAAMgD,OAASlK,KAAKkH,MAAMgD,KAAK7N,OAAS2D,KAAKkH,MAAM+f,YACzD,OAAO,KACX,IAAI5qB,EAAO2D,KAAKkH,MAAMgD,KAAK7N,KACvBC,EAAU0D,KAAKkH,MAAM+f,YAEzB,MAAO,CACHrqB,OAFQ,EAAA2D,EAAA5D,cAAaN,EAAMC,GAG3BpD,aAAcmD,EAAKwW,GAAnB,YAAiCvW,EAAQE,OAAzC,kDAMJ,GADWwD,KAAKyoB,kBAEhB,OAAO/oB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WAClBT,EAAAlG,QAAA0G,cAAA,QACIC,UAAU,qBACVuJ,QAAS1J,KAAKiwB,gEAMtB,IAAI5zB,EAAO2D,KAAKkH,MAAMgD,KAAK7N,KACvBC,EAAU0D,KAAKkH,MAAMgD,KAAK5N,QAC9B,OACIoD,EAAAlG,QAAA0G,cAAA,OAAK2S,GAAG,WACRnT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,aACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,QACXT,EAAAlG,QAAA0G,cAAA,aACO7D,EAAKO,MADZ,OACsB,EAAA2D,EAAA5D,cAAaN,EAAMC,IAF7C,OAIc0D,KAAKkH,MAAM6oB,YAEzBrwB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,aAEfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,YACVH,KAAK+wB,oBACNrxB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iBACV,EAAAI,EAAAtD,eAAc+C,KAAKkH,MAAMiJ,cAE9BzQ,EAAAlG,QAAA0G,cAAAqS,EAAA/Y,QAAA,CACIoR,SAAU5K,KAAKgxB,cACfxe,oBAAqBxS,KAAKyL,0BAC1BgH,UAAWzS,KAAK2L,kBAEpBjM,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,iBACV,EAAAI,EAAAtD,eAAc+C,KAAKgxB,gBAExBtxB,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,WACXT,EAAAlG,QAAA0G,cAAA2R,EAAArY,QAAA,CACIoL,SAAU5E,KAAKkH,MAAMgD,KAAKtF,SAC1B6O,QAAQ,EACRnJ,cAAetK,KAAKsK,cACpBC,iBAAkBvK,KAAKuK,oBAG9BvK,KAAK+R,6DAQlB,IAAI1V,EAAO2D,KAAKkH,MAAMgD,KAAK7N,KAEvB40B,GADUjxB,KAAKkH,MAAMgD,KAAK5N,QACf0D,KAAKyoB,mBACpB,OAAKwI,EAEDvxB,EAAAlG,QAAA0G,cAAA,OAAK2S,GAAG,WACRnT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,aACXT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,QACXT,EAAAlG,QAAA0G,cAAA,SAAIF,KAAKkH,MAAM6oB,YACfrwB,EAAAlG,QAAA0G,cAAA,WACAR,EAAAlG,QAAA0G,cAAA,+BAHJ,IAIUR,EAAAlG,QAAA0G,cAAA,KAAGwJ,QAAS1J,KAAKiwB,sBAClB5zB,EAAKO,MADJ,MACcq0B,EAAA,UATV,6CAkBtB,GAAKjxB,KAAKkH,MAAMiF,QAEhB,OAAOzM,EAAAlG,QAAA0G,cAAA,OAAK8C,IAAI,wEAIhB,OACItD,EAAAlG,QAAA0G,cAAA,OAAK2S,GAAG,WACRnT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,aACfT,EAAAlG,QAAA0G,cAAA,OAAKC,UAAU,QACXT,EAAAlG,QAAA0G,cAAA,6BAAqBF,KAAKkH,MAAM6oB,YADpC,IACoDrwB,EAAAlG,QAAA0G,cAAA,WAC/CF,KAAKoT,gBACLpT,KAAK+R,qDAQd,OAAM/R,KAAK0B,MAAW1B,KAAKkH,MAAMyP,UAG7B3W,KAAKkH,MAAMgD,MAAmC,QAA1BlK,KAAKkH,MAAMxD,cAC9B1D,KAAKkH,MAAM8oB,aACLhwB,KAAKkxB,iBACZlxB,KAAKkH,MAAMgD,KACJlK,KAAKmxB,gBACTnxB,KAAKoxB,oBAPD,wBAWJtB","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpexports\"] = window[\"webpackJsonpexports\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([68,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import $ from 'jquery';\n\nfunction handleError(error) {\n    if (error.status === 401) {\n        if (error.responseJSON.code === 1009) {\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('user_id');\n            localStorage.removeItem('accessLevel');\n            location.href = '/sign-in';\n        }\n    }\n}\n\nexport var apiClientSettings = {\n    baseUrl: '',\n    clientId: '',\n};\n\nexport function request(url, options = {}) {\n    let query = $.param(options.query || '', true);\n    let method = options.method || (options.data ? 'POST':'GET');\n    let data = options.data;\n    let localRequest = options.localRequest || false;\n\n    if (typeof data !== 'undefined' && method !== 'GET') {\n        data = JSON.stringify(data);\n    }\n    \n    if ((!url.startsWith('http')) && (!localRequest)) {\n        url = apiClientSettings.baseUrl + url;\n    }\n\n    if (query) {\n        if (url.indexOf('?') === -1) {\n            url += '?' + query;\n        } else {\n            url += '&' + query;\n        }\n    }\n\n    let headers = {\n        Accept: 'application/json; charset=utf-8',\n    }\n    if (url.startsWith(apiClientSettings.baseUrl)) {\n        let access_token = localStorage.getItem('access_token');\n        if (access_token)\n            headers.Authorization = `Bearer ${access_token}`;\n    }\n\n    return $.ajax({\n        url: url,\n        method: method,\n        data: data,\n        contentType: 'application/json',\n        headers: headers,\n        'error': handleError,\n    })\n}\n\nfunction getCookie(name) {\n    var r = document.cookie.match(\"\\\\b\" + name + \"=([^;]*)\\\\b\");\n    return r ? r[1] : null;\n}","\nexport function isAuthed() {\n    return (localStorage.getItem('access_token') !== null);\n}\n\nexport function requireAuthed() {\n    if (!isAuthed()) {\n        location.href = '/sign-in';\n        throw 'Not authed!';\n    }\n    return true;\n}\n\nexport function getUserId() {\n    requireAuthed();\n    return localStorage.getItem('user_id') || 0;\n}\n\nexport function getUserLevel() {\n    return localStorage.getItem('user_level') || null;\n}\n\nexport function pad(str, max) {\n  str = str.toString();\n  return str.length < max ? pad(\"0\" + str, max) : str;\n}\n\nexport function episodeNumber(show, episode) {\n    switch (show.episode_type) {\n        case 1: return`Episode ${episode.number}`; break;\n        case 2: return`S${pad(episode.season,2)} · E${pad(episode.episode, 2)} (${episode.number})`; break;\n        case 3: return`Airdate: ${episode.air_date}`; break;\n    }\n}\n\nexport function episodeTitle(show, episode) {\n    switch (show.episode_type) {\n        case 1: return`${episode.number}: ${episode.title}`; break;\n        case 2: return`S${pad(episode.season,2)}E${pad(episode.episode, 2)}: ${episode.title}`; break;\n        case 3: return`${episode.air_date}: ${episode.title}`; break;\n    }\n}\n\nexport function guid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n}\n\nexport function secondsToTime(secs) {\n    let hours = Math.floor(secs / 3600);\n    let minutes = Math.floor((secs - (hours * 3600)) / 60);\n    let seconds = Math.floor(secs - (hours * 3600) - (minutes * 60));\n\n    if (hours < 10) \n        hours = \"0\"+hours;\n    if (minutes < 10) \n        minutes = \"0\"+minutes;\n    if (seconds < 10)\n        seconds = \"0\"+seconds;\n    return (hours>0?hours+':':'')+minutes+':'+seconds;\n}\n\nexport function dateInDays(dt) {\n    if (typeof(dt) == \"string\") {\n        dt = new Date(dt);\n    }\n    let seconds = Math.abs(dt-new Date().getTime())/1000;\n    let minutes, hours, days;\n    let l = [];\n    [minutes, seconds] = divmod(seconds, 60);\n    [hours, minutes] = divmod(minutes, 60);\n    [days, hours] = divmod(hours, 24);\n    if (days > 0) l.push(pluralize(days, 'day'));\n    if (hours > 0) l.push(pluralize(hours, 'hour'));\n    if ((minutes > 0) && (hours < 1) && (days < 1)) \n        l.push(pluralize(minutes, 'minute'));\n    return l.join(' ');\n}\n\nexport function secondsToPretty(seconds, showTotalHours) {\n    let totalHours = Math.round((((seconds/60)/60)*10))/10;\n    if (seconds < 60) return pluralize(seconds, 'second');\n    let minutes, hours, days, months, years;\n    [minutes, seconds] = divmod(seconds, 60);\n    [hours, minutes] = divmod(minutes, 60);\n    [days, hours] = divmod(hours, 24);\n    [months, days] = divmod(days, 30.42);\n    [years, months] = divmod(months, 12);\n    let l = [];\n    if (years > 0) l.push(pluralize(years, 'year'));\n    if (months > 0) l.push(pluralize(months, 'month'));\n    if (days > 0) l.push(pluralize(days, 'day'));\n    if (hours > 0) l.push(pluralize(hours, 'hour'));\n    if (minutes > 0) l.push(pluralize(minutes, 'minute'));\n    let r = l.join(', ');\n    if ((showTotalHours) && (totalHours >= 24)) {\n        let h = pluralize(totalHours, 'hour');\n        r = r + ` (${h})`;\n    }\n    return r;\n}\n\nexport function pluralize(num, word) {\n    if (num != 1) word = word + 's';\n    return `${num} ${word}`\n}\n\nexport function divmod(a, b) {\n    return [Math.floor(a / b), a % b];\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nimport './Loader.scss';\n\nconst propTypes = {\n    hcenter: PropTypes.bool,\n}\n\nconst defaultProps = {\n    hcenter: false,\n}\n\nclass Loader extends React.Component {\n\n    render() {        \n        let cls = ClassNames({\n            loader: true,\n            'loader-hcenter': this.props.hcenter,\n        });\n        return (\n            <div className={cls}></div>\n        )\n    }\n\n}\nLoader.propTypes = propTypes;\nLoader.defaultProps = defaultProps;\n\nexport default Loader;","import {getPlayServer} from './Player';\nimport {request} from 'api';\nimport {guid} from 'utils';\n\nvar events = {\n    ANY_CHANGED: 'anyChanged',\n    AVAILABLE: 'isAvailable',\n    IS_CONNECTED: 'isConnected',\n    PLAYER_STATE: 'playerState',\n    CURRENT_TIME: 'currentTime',\n};\n\nclass Chromecast {\n \n    constructor() {\n        this.loaded = false;\n    }\n\n    load(onInit) {\n        this.onInit = onInit;\n        if (!Chromecast.initialized) {\n            this.loadCastScript();\n        } else {\n            this.initCast(true);\n        }\n    }\n \n    loadCastScript() {\n        Chromecast.initList.push(this);\n        if (Chromecast.loaded)\n            return;\n        Chromecast.loaded = true;\n        window['__onGCastApiAvailable'] = (isAvailable) => {\n            // Temp fix for cast not reconnecting randomly\n            setTimeout(() => {\n                let sessionRequest = new chrome.cast.SessionRequest(Chromecast.appId);\n                let apiConfig = new chrome.cast.ApiConfig(\n                    sessionRequest,\n                    sessionListener,\n                    receiverListener,\n                    chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n                );\n                chrome.cast.initialize(apiConfig, () => {\n                    Chromecast.initialized = true;\n                    for (let obj of Chromecast.initList) {\n                        obj.initCast(isAvailable);\n                    }\n                });\n            }, 500);\n        };\n        let script = document.createElement('script');\n        script.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js';\n        document.head.appendChild(script);\n    }\n \n    initCast(isAvailable) {\n        this.loaded = isAvailable;\n        if (!isAvailable) \n            return;\n        if (this.onInit)\n            this.onInit(this);\n    }\n\n    requestSession() {\n        chrome.cast.requestSession(sessionListener);\n    }\n\n    isConnected() {\n        if (!Chromecast.session)\n            return false;\n        return Chromecast.session.status == 'connected';\n    }\n\n    getSession() {\n        return Chromecast.session;\n    }\n\n    getMediaSession() {\n        return Chromecast.mediaSession;\n    }\n\n    getFriendlyName() {\n        return Chromecast.session.receiver.friendlyName;\n    }\n\n    getCurrentTime() {\n        return Chromecast.mediaSession.getEstimatedTime();\n    }\n\n    playOrPause(success, error) {\n        if (Chromecast.mediaSession.playerState == 'PLAYING')\n            this.pause(success, error)\n        else\n            this.play(success, error);\n    }    \n\n    play(success, error) {\n        Chromecast.mediaSession.play(null, success, error);\n    }\n\n    pause(success, error) {\n        Chromecast.mediaSession.pause(null, success, error);\n    }\n\n    playEpisode(showId, episodeNumber, startTime) {\n        return new Promise((resolve, reject) => {\n            if (!this.isConnected()) {\n                console.log('Not connected to a cast device.');\n                reject();\n                return;\n            }\n            let url =`/1/shows/${showId}/episodes/${episodeNumber}/play-servers`;\n            Promise.all([\n                getPlayServer(url),\n                request('/1/progress-token'),\n                request(`/1/shows/${showId}`),\n                request(`/1/shows/${showId}/episodes/${episodeNumber}`),\n                request(`/1/shows/${showId}/episodes/${episodeNumber}/watched`),\n                request(`/1/shows/${showId}/user-subtitle-lang`),\n            ]).then((result) => {\n                if (!startTime) {\n                    if (result[4])\n                        startTime = result[4].position\n                    else\n                        startTime = 0;\n                }\n                this.getSession().sendMessage(\n                    'urn:x-cast:net.seplis.cast.info',\n                    {\n                        play: result[0]['playServer'],\n                        metadata: result[0]['metadata'],\n                        token: result[1]['token'],\n                        type: 'episode',\n                        show: result[2],\n                        episode: result[3],\n                        startTime: startTime,\n                        apiUrl: seplis.apiClientSettings.baseUrl,\n                    },\n                    () => {},\n                    (error) => {console.log(error);},\n                );\n                let playUrl = result[0].playServer.play_url+'/play'+\n                    '?play_id='+result[0].playServer.play_id;\n                playUrl += `&session=${guid()}`;\n                if (startTime)\n                    playUrl += `&start_time=${startTime}`;\n                if (result[5]) {\n                    playUrl += `&subtitle_lang=${result[5].subtitle_lang || ''}`;\n                    playUrl += `&audio_lang=${result[5].audio_lang || ''}`;\n                }\n                let request = new chrome.cast.media.LoadRequest(\n                    this._playEpisodeMediaInfo(playUrl, result[2], result[3])\n                );\n                this.getSession().loadMedia(\n                    request,\n                    (mediaSession) => { \n                        mediaListener(mediaSession);\n                        resolve(mediaSession); \n                    },\n                    (e) => { reject(e); },Chromecast\n                );\n            });\n        });\n    }\n\n    _playEpisodeMediaInfo(url, show, episode) {\n        var mediaInfo = new chrome.cast.media.MediaInfo(url);\n        mediaInfo.metadata = new chrome.cast.media.TvShowMediaMetadata();\n        mediaInfo.metadata.seriesTitle = show.title;\n        mediaInfo.metadata.title = episode.title;\n        mediaInfo.metadata.episode = episode.episode || episode.number;\n        mediaInfo.metadata.originalAirdate = episode.air_date;\n        mediaInfo.metadata.metadataType = chrome.cast.media.MetadataType.TV_SHOW;\n        return mediaInfo;\n    }\n\n    addEventListener(event, func) {\n        if (!(event in Chromecast.eventListener))\n            Chromecast.eventListener[event] = [];\n        let e = Chromecast.eventListener[event] ;\n        if (!Chromecast.eventListener[event].includes(func))\n            Chromecast.eventListener[event].push(func);\n    }\n \n    removeEventListener(event, func) {\n        let e = Chromecast.eventListener[event] || [];\n        let i = e.indexOf(func);\n        if (i > 0)\n            e.splice(i, 1);\n    }\n}\nChromecast.initialized = false;\nChromecast.loaded = false;\nChromecast.initList = [];\nChromecast.session = null;\nChromecast.mediaSession = null;\nChromecast.eventListener = {};\nChromecast.events = events;\nChromecast.timerGetCurrentTime = null;\nChromecast.appId = '';\n\nfunction sessionListener(session) {\n    Chromecast.session = session;\n    if (session.media.length != 0) {\n        mediaListener(session.media[0]);\n    }\n    Chromecast.timerGetCurrentTime = setInterval(() => {\n        if (!Chromecast.mediaSession)\n            return;\n        if (Chromecast.mediaSession.playerState == 'PLAYING')\n            dispatchEvent(events.CURRENT_TIME, Chromecast.mediaSession.getEstimatedTime());            \n    }, 1000);\n    session.addMediaListener(mediaListener);\n    session.addUpdateListener(sessionUpdateListener);\n    dispatchEvent(events.IS_CONNECTED, true);\n}\n\nfunction sessionUpdateListener(event) {\n    if (Chromecast.session.status !== chrome.cast.SessionStatus.CONNECTED) {\n        Chromecast.session = null;\n        Chromecast.mediaSession = null;\n        dispatchEvent(events.IS_CONNECTED, false);\n    }\n}\n\nfunction mediaListener(mediaSession) {\n    Chromecast.mediaSession = mediaSession;\n    mediaSession.addUpdateListener(mediaSessionUpdateListener);        \n    dispatchEvent(events.CURRENT_TIME, Chromecast.mediaSession.getEstimatedTime());            \n    // Chrome iOS fix\n    mediaSessionUpdateListener()\n}\n\nfunction mediaSessionUpdateListener() {\n    dispatchEvent(\n        events.PLAYER_STATE, \n        Chromecast.mediaSession.playerState\n    );\n}\n\nfunction receiverListener(state) {\n    if (state == 'available')\n        dispatchEvent(events.AVAILABLE, true)\n    else        \n        dispatchEvent(events.AVAILABLE, false);\n}\n\nfunction mediaStatusUpdateListener(isAlive) {\n\n}\n\nfunction dispatchEvent(event, data) {    \n    let e = {\n        field: event,\n        value: data,\n    }    \n    _dispatchEvent('anyChanged', e);\n    _dispatchEvent(event, e);\n}\n\nfunction _dispatchEvent(event, data) {\n    let e = Chromecast.eventListener[event] || [];\n    e.forEach(f => {\n        try {\n            f(data);\n        } catch (e) {\n            console.log(e);            \n        }\n    });\n}\n \nexport default Chromecast;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkParser from 'parse-link-header';\n\nconst propTypes = {\n    jqXHR: PropTypes.object.isRequired,\n    onPageChange: PropTypes.func,\n}\n\nclass Pagination extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.parseJqXHR();\n        this.onPageChange = this.pageChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState(\n            this.parseJqXHR(nextProps.jqXHR)\n        );\n    }\n\n    pageChange(e) {\n        this.state.page = e.target.value;\n        if (this.props.onPageChange != undefined) \n            this.props.onPageChange(e);\n    }\n\n    parseJqXHR(jqXHR) {\n        return {\n            pages: this.props.jqXHR.getResponseHeader('X-Total-Pages'),\n            page: this.props.jqXHR.getResponseHeader('X-Page'),\n        };\n    }\n\n    renderOptions() {\n        let options = [];\n        for (let i = 1; i <= this.state.pages; i++) {\n            options.push(\n                <option \n                    key={i} \n                    value={i}\n                >\n                    Page {i}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    render() {\n        if (this.state.pages <= 1)\n            return null;\n        return (\n            <select\n                className=\"form-control col-margin\"\n                onChange={this.onPageChange}\n                value={this.state.page}\n            >\n                {this.renderOptions()}\n            </select>\n        )\n    }\n}\nPagination.propTypes = propTypes;\n\nexport default Pagination;","export const EVENT_EPISODE_WATCHED_STATUS = 'episode_watched_status';\n/**\n * @param {string} method - incr or decr\n * @param {int} show_id\n * @param {int} episode_number\n */\nexport function trigger_episode_watched_status(method, show_id, episode_number) {\n    let event = new Event(EVENT_EPISODE_WATCHED_STATUS, {\n        method: method,\n        show_id: show_id,\n        episode_number: episode_number,\n    });\n    document.dispatchEvent(event);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WatchedButton from './WatchedButton';\nimport Chromecast from 'seplis/components/player/Chromecast';\n\nimport './EpisodeListItem.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    episode: PropTypes.object.isRequired,\n    displaySeason: PropTypes.bool,\n}\n\nconst defaultProps = {\n    displaySeason: true,\n}\n\nclass EpisodeListItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onPlayClick = this.playClick.bind(this);\n    }\n\n    playClick(e) {\n        if (Chromecast.session && (Chromecast.session.status == 'connected')) {\n            let cc = new Chromecast();\n            cc.playEpisode(\n                this.props.showId,\n                this.props.episode.number\n            );\n        } else {\n            location.href = this.getPlayUrl();\n        }\n    }\n\n    renderEpisodeNumber() {\n        if (this.props.episode.episode) {\n            return (\n                <span>\n                    {this.props.displaySeason?`S${this.props.episode.season} `: ''}\n                    Episode {this.props.episode.episode}\n                    &nbsp;\n                    <font color=\"grey\">\n                        ({this.props.episode.number})\n                    </font> \n                </span>\n            )\n        } else {\n            return (\n                <span>Episode {this.props.episode.number}</span>\n            )   \n        }\n    }\n\n    renderAirDate() {\n        if (this.props.episode.air_date) {\n            return (\n                <span \n                    className=\"air-date\" \n                    title={this.props.episode.air_date}\n                >\n                    {this.props.episode.air_date}\n                </span> \n            )\n        } else {\n            return (\n                <span>\n                    Unknown air date.\n                </span>\n            )\n        }\n    }\n\n    getPlayUrl() {\n        return `/show/${this.props.showId}/episode/${this.props.episode.number}/play`;\n    }\n\n    render() {\n        return (\n            <div className=\"episode-box-list-item\">\n                <div \n                    className=\"title\" \n                    title={this.props.episode.title}\n                >\n                    {this.props.episode.title?this.props.episode.title:'TBA'}\n                </div>\n                <div className=\"meta\">\n                    {this.renderEpisodeNumber()}\n                    <strong> · </strong>\n                    {this.renderAirDate()}\n                </div>\n                <div className=\"button-bar\">\n                    <WatchedButton \n                        showId={this.props.showId}\n                        episodeNumber={this.props.episode.number}\n                        watched={this.props.episode.user_watched}\n                    />\n                    <div \n                        className=\"play-button float-right\"\n                        onClick={this.onPlayClick}\n                    >\n                        <i className=\"fa fa-play-circle\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nEpisodeListItem.propTypes = propTypes;\nEpisodeListItem.defaultProps = defaultProps;\n\nexport default EpisodeListItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport {request} from 'api';\nimport PlayNext from './PlayNext';\nimport VolumeBar from './VolumeBar';\nimport AudioSubBar from './AudioSubBar.jsx';\nimport Slider from './Slider.jsx';\nimport ChromecastIcon from './ChromecastIcon';\nimport Loader from 'seplis/components/Loader';\nimport {secondsToTime} from 'utils';\nimport './Player.scss';\n\nconst propTypes = {\n    playServerUrl: PropTypes.string,\n    playId: PropTypes.string,\n    session: PropTypes.string,\n    startTime: PropTypes.number,\n    metadata: PropTypes.object,\n    info: PropTypes.object,\n    nextInfo: PropTypes.object,\n    backToInfo: PropTypes.object,\n    currentInfo: PropTypes.object,\n    onAudioChange: PropTypes.func,\n    onSubtitleChange: PropTypes.func,\n    audio_lang: PropTypes.string,\n    subtitle_lang: PropTypes.string,\n    onTimeUpdate: PropTypes.func,\n}\n\nconst defaultProps = {\n    startTime: 0,\n    info: null,\n    nextInfo: null,\n}\n\nclass Player extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onPlayPauseClick = this.playPauseClick.bind(this);\n        this.duration = parseInt(props.metadata.format.duration);\n        this.pingTimer = null;\n        this.hls = null;\n        this.onFullscreenClick = this.fullscreenClick.bind(this);\n        this.onVolumeChange = this.volumeChange.bind(this);\n\n        this.onAudioChange = this.audioChange.bind(this);\n        this.onSubtitleChange = this.subtitleChange.bind(this);\n\n        this.volume = 1;\n        this.hideControlsTimer = null;\n\n        this.onSliderReturnCurrentTime = this.sliderReturnCurrentTime.bind(this);\n        this.onSliderNewTime = this.sliderNewTime.bind(this);\n\n        this.state = {\n            playing: false,\n            time: this.props.startTime,\n            startTime: this.props.startTime,\n            session: props.session,\n            fullscreen: false,\n            showControls: true,\n            audio: this.props.audio_lang,\n            subtitle: this.props.subtitle_lang,\n            loading: false,\n        }\n        \n        this.isChrome = !!window.chrome && !!window.chrome.webstore;\n    }\n\n    componentDidMount() {        \n        this.video.addEventListener('timeupdate', this.timeupdateEvent.bind(this));\n        this.video.addEventListener('pause', this.pauseEvent.bind(this));\n        this.video.addEventListener('play', this.playEvent.bind(this));\n        \n        document.addEventListener('fullscreenchange', this.fullscreenchangeEvent.bind(this));\n        document.addEventListener('webkitfullscreenchange', this.fullscreenchangeEvent.bind(this));\n        document.addEventListener('mozfullscreenchange', this.fullscreenchangeEvent.bind(this));\n        document.addEventListener('msfullscreenchange', this.fullscreenchangeEvent.bind(this));\n        \n        this.video.addEventListener('error', this.playError.bind(this));\n        this.video.addEventListener('waiting', this.playWaiting.bind(this));\n        this.video.addEventListener('click', this.playClick.bind(this));\n        this.video.addEventListener('touchstart', this.playClick.bind(this));\n        this.video.addEventListener('loadeddata', this.loadedEvent.bind(this));\n        this.setPingTimer();\n        this.video.volume = this.volume;\n        this.loadStream(this.getPlayUrl());\n        document.onmousemove = this.mouseMove.bind(this);\n        document.onkeypress = this.keypress.bind(this);\n        document.onbeforeunload = this.beforeUnload.bind(this);\n    }\n\n    loadedEvent(e) {\n        this.setState({loading: false});\n    }\n\n    loadStream(url) {\n        this.setState({loading: true});\n        if (!Hls.isSupported() || this.isChrome) {\n            this.video.src = url;\n            this.video.load();\n            this.video.play();\n            return;\n        }\n\n        if (this.hls) {\n            this.hls.destroy();\n            if (this.hls.bufferTimer) {\n                clearInterval(this.hls.bufferTimer);\n                this.hls.bufferTimer = undefined;\n            }\n            this.hls = null;\n        }\n        this.hls = new Hls({\n            startLevel: 0,\n            manifestLoadingTimeOut: 30000,\n            maxMaxBufferLength: 300,\n            maxBufferLength: 20,\n            debug: false,\n        });\n        this.hls.loadSource(url);\n        this.hls.attachMedia(this.video);\n        this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n            this.video.play();\n        });\n        this.hls.on(Hls.Events.ERROR, this.hlsError.bind(this));\n    }\n\n    hlsError(event, data) {\n        console.warn(data);\n        if (data.fatal || (data.details == Hls.ErrorTypes.BUFFER_STALLED_ERROR)) {\n            switch(data.type) {\n                case Hls.ErrorTypes.NETWORK_ERROR:\n                    console.log(\"fatal network error encountered, try to recover\");\n                    this.hls.startLoad();\n                    break;\n                case Hls.ErrorTypes.MEDIA_ERROR:\n                    console.log(\"fatal media error encountered, try to recover\");\n                    this.handleMediaError();\n                    break;\n                default:\n                    // cannot recover\n                    this.hls.destroy();\n                    break;\n            }\n        }\n    }\n\n    handleMediaError() {\n        this.setState({loading: true});\n        this.hls.recoverMediaError();\n        this.video.play();\n    }\n\n    keypress(e) {\n        if (e.code == 'Space')\n            this.playPauseClick();\n    }\n\n    playClick(e) {\n        e.preventDefault();\n        if (this.video.paused || this.state.loading)\n            return;\n        this.setState({showControls: !this.state.showControls});\n        this.setHideControlsTimer();\n    }\n\n    setPingTimer() {\n        clearTimeout(this.pingTimer);\n        this.pingTimer = setTimeout(() => {\n            request(this.getPlayUrl()+'&action=ping');\n            this.setPingTimer();\n        }, 2000);\n    }\n\n    setHideControlsTimer(timeout) {\n        if (timeout == undefined)\n            timeout = 6000;\n        clearTimeout(this.hideControlsTimer);\n        this.hideControlsTimer = setTimeout(() => {\n            if (this.video.paused || this.state.loading)\n                return;\n            this.setState({\n                showControls: false,\n            });\n        }, timeout);\n    }\n\n    mouseMove(e) {\n        if (this.state.showControls) return;\n        this.setState({\n            showControls: true,\n        });\n        this.setHideControlsTimer();\n    }\n\n    getPlayUrl() {\n        let s = `${this.props.playServerUrl}/play`+\n            `?play_id=${this.props.playId}`+\n            `&session=${this.props.session}`+\n            `&start_time=${this.state.startTime}`+\n            `&subtitle_lang=${this.state.subtitle || ''}`+\n            `&audio_lang=${this.state.audio || ''}`;\n        if (this.isChrome)\n            s += `&device=Chrome`\n        else\n            s += `&device=hls`;\n        return s;\n    }\n\n    playPauseClick() {\n        if (this.video.paused) {\n            this.video.play();\n            this.setHideControlsTimer(2000);\n        }\n        else {\n            this.video.pause();\n        }\n    }\n\n    fullscreenchangeEvent() {\n        this.setState({\n            fullscreen: !!(document.fullScreen || document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement || document.fullscreenElement),\n        });\n    }\n\n    pauseEvent() {\n        this.setState({\n            playing: false,\n            showControls: true,\n        });\n    }\n\n    playEvent() {\n        this.setState({\n            playing: true,\n            loading: true,\n        });\n    }\n\n    playError(e) {\n        this.setState({loading: false});\n        console.warn(e.currentTarget.error)\n        if (e.currentTarget.error.code == e.currentTarget.error.MEDIA_ERR_DECODE) {\n            this.handleMediaError();\n        }\n    }\n\n    playWaiting() {\n        this.setState({loading: true});\n    }\n\n    timeupdateEvent(e) {\n        if (!this.video.paused) {\n            this.setState({loading: false});\n            let time = this.video.currentTime;\n            if (this.video.seekable.length <= 1 || this.video.seekable.end(0) <= 1)\n                time += this.state.startTime;\n            this.setState({\n                time: time,\n                playing: true,\n            }, () => {\n                if (this.props.onTimeUpdate)\n                    this.props.onTimeUpdate(this.state.time);\n            });\n            if (!this.hideControlsTimer) {\n                this.setHideControlsTimer();\n            }\n        }\n    }\n\n    changeVideoState(state) {\n        this.setState({'loading': true});\n        this.cancelPlayUrl().then(() => {\n            this.setState(state, () => {\n                this.loadStream(this.getPlayUrl());\n                this.setPingTimer();\n            });\n        });\n    }\n\n    beforeUnload() {\n        this.cancelPlayUrl();\n    }\n\n    cancelPlayUrl() {\n        return new Promise((resolve, reject) => {\n            request(\n                this.getPlayUrl()+'&action=cancel'\n            ).done(() => {\n                resolve();\n            }).fail(e => {\n                reject(e);\n            });\n        });\n    }\n\n    fullscreenClick(event) {\n        if (!this.state.fullscreen) {\n            let elem = document.getElementById('player');\n            if (elem.requestFullScreen) {\n                elem.requestFullScreen();\n            } else if (elem.mozRequestFullScreen) {\n                elem.mozRequestFullScreen();\n            } else if (elem.webkitRequestFullScreen) {\n                elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n            } else if (elem.webkitEnterFullscreen) {\n                elem.webkitEnterFullscreen();\n            }\n        } else {\n            if (document.cancelFullScreen) {\n                document.cancelFullScreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitCancelFullScreen) {\n                document.webkitCancelFullScreen();\n            }\n        }\n        this.setState({fullscreen: !this.state.fullscreen});\n    }\n\n    getDurationText() {\n        return secondsToTime(parseInt(this.duration));\n    }\n\n    getCurrentTimeText() {\n        return secondsToTime(parseInt(this.state.time));\n    }\n\n    renderPlayNext() {\n        if (!this.props.nextInfo) return;\n        return (\n            <PlayNext\n                title={this.props.nextInfo.title}\n                url={this.props.nextInfo.url}\n            />    \n        )\n    }\n\n    volumeChange(volume) {\n        this.volume = volume;\n        if (this.video)\n            this.video.volume = volume;\n    }\n\n    audioChange(lang) {\n        if (this.props.onAudioChange)\n            this.props.onAudioChange(lang);\n        this.changeVideoState({\n            audio: lang,\n            startTime: this.state.time,\n        });\n    }\n\n    subtitleChange(lang) {\n        if (this.props.onSubtitleChange)\n            this.props.onSubtitleChange(lang);\n        this.changeVideoState({\n            subtitle: lang,\n            startTime: this.state.time,\n        });\n    }\n\n    sliderNewTime(newTime) {\n        this.video.pause();        \n        clearTimeout(this.hideControlsTimer);\n        this.hideControlsTimer = null;\n        this.changeVideoState({\n            time: newTime,\n            startTime: newTime,\n        });\n    }\n\n    sliderReturnCurrentTime() {\n        return this.state.time;\n    }\n\n    showControlsVisibility() {\n        return this.state.showControls?'visible':'hidden';\n    }\n\n    renderControlsTop() {\n        return (\n            <div \n                className=\"controls controls-top\" \n                style={{visibility: this.showControlsVisibility()}}\n            >\n                <div className=\"control\">\n                    <a \n                        className=\"fa fa-times\" \n                        href={this.props.backToInfo.url}\n                        title={this.props.backToInfo.title}\n                    />\n                </div>\n                <div className=\"control-text control-text-title\">\n                    {this.props.currentInfo.title}\n                </div>\n                <div className=\"control-spacer\" />\n                <div className=\"control\">\n                    <ChromecastIcon />\n                </div>\n                <div className=\"control\">\n                    <AudioSubBar \n                        metadata={this.props.metadata} \n                        onAudioChange={this.onAudioChange}\n                        onSubtitleChange={this.onSubtitleChange}\n                    />\n                </div>\n                <div className=\"control\">\n                    <VolumeBar onChange={this.onVolumeChange} />\n                </div>\n                <div className=\"control\">\n                    {this.renderPlayNext()}\n                </div>\n            </div>\n        )\n    }\n\n    renderControlsBottom() {\n        let playPause = ClassNames({\n            fa: true,\n            'fa-pause': this.state.playing,\n            'fa-play': !this.state.playing,\n        });\n        let fullscreen = ClassNames({\n            fa: true,\n            'fa-expand': this.state.fullscreen,\n            'fa-arrows-alt': !this.state.fullscreen,\n        });\n        return (\n            <div \n                className=\"controls\" \n                style={{visibility: this.showControlsVisibility()}}\n            >\n                <div className=\"control\">\n                    <span \n                        className={playPause}\n                        onClick={this.onPlayPauseClick}\n                    >\n                    </span>\n                </div>\n                <div className=\"control-text\">\n                    {this.getCurrentTimeText()}\n                </div>\n                <Slider \n                    duration={this.duration}\n                    onReturnCurrentTime={this.onSliderReturnCurrentTime}\n                    onNewTime={this.onSliderNewTime}\n                />\n                <div className=\"control-text\" title=\"Timeleft\">\n                    {this.getDurationText()}\n                </div>\n                <div className=\"control\">\n                    <span \n                        className={fullscreen}\n                        onClick={this.onFullscreenClick}\n                    >\n                    </span>\n                </div>\n            </div>\n        )\n    }\n\n    renderLoading() {\n        if (!this.state.loading)\n            return null;\n        return <Loader hcenter={true} />\n    }\n\n    render() {\n        return (\n            <div id=\"player\">  \n                <div className=\"overlay\">\n                    <video \n                        className=\"video\" \n                        preload=\"none\" \n                        autoPlay={false}\n                        controls={false}\n                        ref={(ref) => this.video = ref}\n                    />\n                    {this.renderControlsTop()}\n                    {this.renderControlsBottom()}\n                    {this.renderLoading()}\n                </div>\n            </div>\n        )\n    }\n}\nPlayer.propTypes = propTypes;\nPlayer.defaultProps = defaultProps;\nexport default Player;\n\nexport function getPlayServer(url) {\n    /* `url` must be a url to the play servers. \n        Example: /1/shows/1/episodes/1/play-servers.\n        Returns a promise.\n    */\n    return new Promise((resolve, reject) => {\n        request(\n            url\n        ).done(playServers => {\n            var selected = false;\n            var i = 0;\n            if (playServers.length == 0) {\n                reject({code: 1, message: 'No play servers.'});\n                return;\n            }\n            for (var s of playServers) {\n                i += 1;\n                request(s.play_url+'/metadata', {\n                    query: {\n                        play_id: s.play_id,\n                    }\n                }).done(metadata => {\n                    if (selected) \n                        return;\n                    selected = true;\n                    resolve({\n                        playServer: s, \n                        metadata: metadata,\n                    });\n                }).always(() => {\n                    i -= 1;\n                    if ((i == 0) && (selected == false)) {\n                        reject({code: 2, message: 'This episode is not on any of your play servers.'});\n                    }\n                });\n            }\n        });\n    });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    url: PropTypes.string,\n}\n\nclass PlayNext extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onNextClick = this.nextClick.bind(this);\n    }\n\n    nextClick(e) {\n        location.href = this.props.url;\n    }\n\n    render() {\n        return (\n            <a \n                className=\"fa fa-step-forward\"\n                title={this.props.title}\n                href={this.props.url}\n            />\n        )\n    }\n\n}\nPlayNext.propTypes = propTypes;\n\nexport default PlayNext;","import React from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './AudioSubBar.scss';\n\nconst propTypes = {\n    metadata: PropTypes.object,\n    onAudioChange: PropTypes.func,\n    onSubtitleChange: PropTypes.func,\n    bottom: PropTypes.bool,\n}\n\nclass AudioSubBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n        }\n        this.audio = [];\n        this.subtitles = [];\n        this.parseMetadata();\n\n        this.onClick = this.click.bind(this);\n\n        this.onAudioClick = this.audioClick.bind(this);\n        this.onSubtitleClick = this.subtitleClick.bind(this);\n        this.onDocumentClick = this.documentClick.bind(this);\n    }\n\n    componentDidMount() {    \n        document.addEventListener('click', this.onDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onDocumentClick);\n    }\n    \n    documentClick(e) {\n        if (this.icon == undefined) return;\n        if (!this.icon.contains(e.target)) {\n            this.setState({show: false});\n        }\n    }\n\n    parseMetadata() {\n        for (let stream of this.props.metadata.streams) {\n            if (!('tags' in stream))\n                continue;\n            if (!('language' in stream.tags))\n                continue;\n            let s = {\n                language: stream.tags.language,\n                title: stream.tags.title || stream.tags.language,\n                index: stream.index,\n            }\n            switch(stream.codec_type) {\n                case 'subtitle': this.subtitles.push(s); break;\n                case 'audio': this.audio.push(s); break;\n            }\n        }\n    }\n\n    click(event) {\n        this.setState({show: !this.state.show});\n    }\n\n    subtitleClick(event) {\n        event.preventDefault();\n        this.setState({show: false});\n        if (this.props.onSubtitleChange)\n            this.props.onSubtitleChange(\n                event.target.getAttribute('data-data')\n            );\n    }\n\n    audioClick(event) {\n        event.preventDefault();\n        this.setState({show: false});\n        if (this.props.onAudioChange)\n            this.props.onAudioChange(\n                event.target.getAttribute('data-data')\n            );\n    }\n\n    renderSubtitles() {\n        if (this.subtitles.length == 0)\n            return;\n        return (\n            <span>\n                <p className=\"title\">Subtitles</p>\n                <p><a href=\"#\" onClick={this.onSubtitleClick} data-data=\"\">None</a></p>\n                {this.subtitles.map(l => (\n                    <p key={l.index}>\n                        <a \n                            href=\"#\" \n                            onClick={this.onSubtitleClick}\n                            data-data={`${l.language}:${l.index}`}\n                        >\n                            {l.title}\n                        </a>\n                    </p>\n                ))}\n            </span>\n        )\n    }\n\n    renderAudio() {\n        if (this.audio.length <= 1)\n            return;\n        return (\n            <span>\n                <p className=\"title\">Audio</p>\n                {this.audio.map(l => (\n                    <p key={l.index}>                        \n                        <a \n                            href=\"#\" \n                            onClick={this.onAudioClick}\n                            data-data={`${l.language}:${l.index}`}\n                        >\n                            {l.title}\n                        </a>\n                    </p>\n                ))}\n            </span>\n        )\n    }\n\n    renderAudioSubtitles() {\n        if (!this.state.show)\n            return null;\n        let cls = ClassNames({\n            'audio-subtitles': true,\n            'audio-subtitles-bottom': this.props.bottom,\n        });\n        return (\n            <div \n                className={cls} \n                ref={(ref) => this.audioSubtitlesElem = ref}\n            >\n                {this.renderSubtitles()}\n                {this.renderAudio()}\n            </div>\n        )\n    }\n\n    render() {\n        if ((this.audio.length <= 1) && (this.subtitles.length == 0))\n            return null;\n        return (\n            <span\n                ref={(ref) => this.icon = ref}\n            >\n                <span className=\"fa fa-cc\" onClick={this.onClick} />\n                {this.renderAudioSubtitles()}\n            </span>\n        )\n    }\n}\nAudioSubBar.propTypes = propTypes;\n\nexport default AudioSubBar;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Slider.scss';\n\nconst propTypes = {\n    duration: PropTypes.number.isRequired,\n    onReturnCurrentTime: PropTypes.func.isRequired,\n    onNewTime: PropTypes.func.isRequired,\n}\n\nclass Slider extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentTime: 0,\n        }\n        this.onSliderClick = this.sliderClick.bind(this);\n        this.timerGetCurrentTime = null;\n    }\n\n    componentDidMount() {\n        this.getCurrentTime();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timerGetCurrentTime);\n        this.timerGetCurrentTime = null;\n    }\n\n    sliderClick(event) {\n        let x = this.getEventXOffset(event);\n        let norm = this.props.duration / this.slider.offsetWidth;\n        var newTime = Math.trunc(norm*x);\n        this.setState({\n            currentTime: newTime,\n        });\n        this.props.onNewTime(newTime);\n    }\n\n    getCurrentTime() {\n        this.setState({\n            currentTime: this.props.onReturnCurrentTime(),\n        });\n        this.timerGetCurrentTime = setTimeout(() => {\n            this.getCurrentTime();\n        }, 1000);\n    }\n\n    progressPercent() {\n        return ((this.state.currentTime / this.props.duration) * 100).toString() + '%';\n    }\n\n    getEventXOffset(event) {\n        if (event.type.match('^touch')) {\n            event = event.originalEvent.touches[0] || \n                event.originalEvent.changedTouches[0];\n        }\n        \n        var offsetLeft = 0;\n        var elem = this.slider;\n        do {\n            if (!isNaN( elem.offsetLeft)) {\n                offsetLeft += elem.offsetLeft;\n            }\n        } while(elem = elem.offsetParent);\n\n        let x = event.clientX - offsetLeft;\n        if (x > this.slider.offsetWidth)\n            x = this.slider.offsetWidth;\n        return x;\n    }\n\n    render() {\n        return (\n            <div className=\"player-slider-wrapper\" onClick={this.onSliderClick}>\n                <div \n                    className=\"slider\"\n                    ref={(ref) => this.slider = ref}\n                >\n                    <div \n                        className=\"progress\" \n                        style={{width: this.progressPercent()}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\nSlider.propTypes = propTypes;\n\nexport default Slider;","import React from 'react';\nimport Chromecast from './Chromecast';\n\nimport './ChromecastIcon.scss';\n\nclass ChromecastIcon extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            connected: false,\n            available: false,\n        }\n    }\n\n    componentDidMount() {\n        this.onConnected = this.connected.bind(this);\n        this.onDeviceAvailable = this.deviceAvailable.bind(this);\n        this.cast = new Chromecast();\n        this.cast.load(this.onCastInit.bind(this));\n        this.iconClick = this.castIconClick.bind(this);\n    }\n\n    componentWillUnmount() {\n        this.cast.removeEventListener('isConnected', this.onConnected)\n    }\n\n    onCastInit() {\n        this.cast.addEventListener('isConnected', this.onConnected);\n        this.cast.addEventListener('isAvailable', this.onDeviceAvailable);\n    }\n\n    deviceAvailable(e) {\n        this.setState({available: e.value});        \n    }\n\n    connected(e) {\n        this.setState({connected: e.value});\n    }\n\n    castIconClick(event) {\n        this.cast.requestSession();\n    }\n\n    render() {\n        if (!this.state.available)\n            return null;\n        let icon = '/static/img/chromecast.svg';\n        if (this.state.connected)\n            icon = '/static/img/chromecast_connected.svg';\n        return (\n            <img \n                onClick={this.iconClick}\n                title=\"Chromecast\"\n                className=\"castbutton\"\n                src={icon}\n            />\n        );\n    }\n}\n\nexport default ChromecastIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditAlternativeTitles from './EditAlternativeTitles';\nimport {request} from 'api';\n\nconst propTypes = {\n    show: PropTypes.object,\n}\n\nconst externals = [\n    {\n        'key': 'imdb',\n        'title': 'IMDb',\n        'required': true,\n        'importer_info': false,\n        'importer_episodes': false,\n    },\n    {\n        'key': 'tvmaze',\n        'title': 'TVMaze',\n        'required': false,\n        'importer_info': true,\n        'importer_episodes': true,\n    },\n    {\n        'key': 'thetvdb',\n        'title': 'TheTVDB',\n        'required': false,\n        'importer_info': true,\n        'importer_episodes': true,\n    },\n]\n\nconst importerTypes = [\n    'info',\n    'episodes',\n]\n\nclass EditFields extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onImporterSelected = this.importerSelected.bind(this);\n        this.onInputChange = this.inputChanged.bind(this);\n        let show = props.show || {};\n        let showexternals = show.externals || {};\n        let importers = show.importers || {};\n        // Fill state\n        this.state = {\n            'importers.info': importers.info || '',\n            'importers.episodes': importers.episodes || '',\n            alternative_titles: show.alternative_titles?show.alternative_titles.slice():[],\n            episode_type: show.episode_type || 2,\n        }\n        for (let external of externals) {\n            this.state[`externals.${external.key}`] = showexternals[external.key] || '';\n        }\n    }\n\n    importerSelected(e) {\n        let s = {}\n        s[e.target.name] = e.target.value;\n        for (let type of importerTypes) {\n            if (`importers.${type}` == e.target.name)\n                continue;\n            if (this.state[`importers.${type}`] === '') {\n                s[`importers.${type}`] = e.target.value;\n            }\n        }\n        this.setState(s);\n    }\n\n    inputChanged(e) {\n        let s = {};\n        let name = e.target.name;\n        let value = e.target.value;\n        s[name] = value;\n        this.setState(s);\n        if ((name.startsWith('externals.')) && (value != '')) {\n            let query = {};\n            query[name.substring(name.indexOf('.')+1, name.length)] = value;\n            this.lookupExternals(query);\n        }\n    }\n\n    lookupExternals(query) {\n        request('/api/tvmaze-show-lookup', {\n            localRequest:true,\n            query: query,\n        }).done(data => {\n            let s = {'externals.tvmaze': data.id}\n            for (let key in data.externals) {\n                if (`externals.${key}` in this.state) {\n                    s[`externals.${key}`] = data.externals[key];\n                }\n            }\n            this.setState(s);\n        })\n    }\n\n    renderImporter(type) {\n        let importers = [];\n        for (let external of externals) {\n            if (external['importer_'+type]) {\n                importers.push(external);\n            }\n        }\n        return (\n            <fieldset className=\"form-group\" key={type}>\n                <label>Import {type} from</label>\n                <select \n                    name={'importers.'+type} \n                    className=\"form-control importers\" \n                    onChange={this.onImporterSelected}\n                    value={this.state[`importers.${type}`]}\n                >\n                    <option value=\"\"></option>\n                    {importers.map((external) => (\n                        <option key={external.key} value={external.key}>\n                            {external.title}\n                        </option>\n                    ))}\n                </select>\n            </fieldset>\n        )\n    }\n\n    renderExternals() {\n        return (\n            externals.map((external) => (\n                <fieldset key={external.key} className=\"form-group\">\n                    <label>{external.title} ID {external.required?<b>*</b>:''}</label>                    \n                    <input \n                        name={`externals.${external.key}`} \n                        className=\"form-control\" \n                        required={external.required}\n                        value={this.state[`externals.${external.key}`]}\n                        onChange={this.onInputChange}\n                    />\n                    {external.required?\n                        <small className=\"text-muted\"> Required to prevent show duplication.</small>:\n                        ''\n                    }\n                </fieldset>\n            ))\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <h3>Externals</h3>\n                    {this.renderExternals()}\n\n                    <h3>Importers</h3>\n                    {importerTypes.map((type) => (\n                        this.renderImporter(type)\n                    ))}\n                </div>\n\n                <div className=\"col-md-6\">\n                    <h3>General</h3>\n                    <fieldset className=\"form-group\">\n                        <label>Alternative titles</label>\n                        <EditAlternativeTitles \n                            options={this.state.alternative_titles} \n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <label>Episode type</label>\n                        <select \n                            name=\"episode_type\"\n                            className=\"form-control\"\n                            defaultValue={this.state.episode_type}\n                        >\n                            <option value=\"1\">Absolute number</option>\n                            <option value=\"2\">Season episode</option>\n                            <option value=\"3\">Air date</option>\n                        </select>\n                    </fieldset>\n                </div>\n            </div>\n        )\n    }\n}\nEditFields.propTypes = propTypes;\n\nexport default EditFields;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nimport './List.scss';\n\nconst propTypes = {\n    shows: PropTypes.array.isRequired,\n    mobile_xscroll: PropTypes.bool,\n}\n\nconst defaultProps = {\n    mobile_xscroll: false,\n}\n\nclass List extends React.Component {\n\n    renderShow(show) {\n        return (\n            <div key={show.id} className=\"col-4 col-sm-4 col-md-3 col-lg-2 col-margin\">\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n            </div>\n        )\n    }\n\n    render() {\n        let c = ClassNames({\n            row: true,\n            'slider': this.props.mobile_xscroll,\n        });\n        return (\n            <div className={c}>\n                {this.props.shows.map(show => (\n                    this.renderShow(show)\n                ))}\n            </div>\n        );\n    }\n}\nList.propTypes = propTypes;\nList.defaultProps = defaultProps;\n\nexport default List;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getUserId, episodeNumber} from 'utils';\nimport {request} from 'api';\n\nimport './List.scss';\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass RecentlyAired extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            items: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData();\n        } else {\n            this.setState({items: this.props.items});\n        }\n    }\n\n    getData() {\n        getRecentlyAired(this.props.perPage, this.props.page).then((data) => {\n            this.setState({items: data.items});\n        });\n    }\n\n    renderItem(item) {\n        let show = item.show;\n        let episode = item.episode;\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.items.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    No recently aired episodes from shows you are a fan of.\n                </div>\n            );\n        return (\n            <div className=\"row\">\n                {this.state.items.map(item => (\n                    this.renderItem(item)\n                ))}\n            </div>\n        )\n    }\n}\nRecentlyAired.propTypes = propTypes;\nRecentlyAired.defaultProps = defaultProps;\n\nexport default RecentlyAired;\n\nexport function getRecentlyAired(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-recently-aired`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR});\n        }).fail((e) => {\n            reject(e);\n        })\n    })\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getUserId, episodeNumber} from 'utils';\nimport {request} from 'api';\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass Watched extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            shows: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData();\n        } else {\n            this.setState({shows: this.props.items});\n        }\n    }\n\n    getData() {\n        getWatched(this.props.perPage, this.props.page).then((data) => {\n            this.setState({shows: data.items});\n        });\n    }\n\n    renderShow(show, episode) {\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.shows.length == 0) \n            return (\n                <div className=\"alert alert-info\">\n                    You have not watched any shows yet!\n                </div>\n            );\n        return (\n            <div className=\"row\">\n                {this.state.shows.map(item => (\n                    this.renderShow(item, item.user_watching.episode)\n                ))}\n            </div>\n        )\n    }\n}\nWatched.propTypes = propTypes;\nWatched.defaultProps = defaultProps;\n\nexport default Watched;\n\nexport function getWatched(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-watched`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR});\n        }).fail((e) => {\n            reject(e);\n        })\n    })\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getUserId, dateInDays, episodeNumber} from 'utils';\nimport {request} from 'api';\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass Countdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            items: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData();\n        } else {\n            this.setState({items: this.props.items});\n        }\n    }\n\n    getData() {\n        getCountdown(this.props.perPage, this.props.page).then((data) => {\n            this.setState({items: data.items});\n        });\n    }\n\n    renderShow(show, episode) {\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <div className=\"black-box\">In {dateInDays(episode.air_datetime)}</div>\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.items.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    None of the shows you follow have episodes airing! :(\n                </div>\n            );\n        return (\n            <div className=\"row\">\n                {this.state.items.map(item => (\n                    this.renderShow(item.show, item.episode)\n                ))}\n            </div>\n        )\n    }\n}\nCountdown.propTypes = propTypes;\nCountdown.defaultProps = defaultProps;\n\nexport default Countdown;\n\nexport function getCountdown(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-countdown`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR});\n        }).fail((e) => {\n            reject(e);\n        })\n    })\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getUserId, episodeNumber} from 'utils';\nimport {request} from 'api';\n\nconst propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    items: PropTypes.array,\n}\n\nconst defaultProps = {\n    perPage: 6,\n    page: 1,\n    items: null,\n}\n\nclass EpisodesToWatch extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            items: [],\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.items) {\n            this.getData();\n        } else {\n            this.setState({items: this.props.items});\n        }\n    }\n\n    getData() {\n        getEpisodesToWatch(this.props.perPage, this.props.page).then((data) => {\n            this.setState({items: data.items});\n        });\n    }\n\n    renderItem(item) {\n        let show = item.show;\n        let episode = item.episode;\n        return (\n            <div key={show.id} className=\"col-4 col-md-3 col-lg-2 col-margin\">\n                <a href={`/show/${show.id}`}>\n                    <img \n                        title={show.title}\n                        alt={show.title}\n                        src={show.poster_image!=null?show.poster_image.url + '@SX180':''} \n                        className=\"img-fluid\"\n                    />\n                </a>\n                <div className=\"black-box\">{episodeNumber(show, episode)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.items.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    You have zero episodes to watch! :(\n                </div>\n            );\n        return (\n            <div className=\"row\">\n                {this.state.items.map(item => (\n                    this.renderItem(item)\n                ))}\n            </div>\n        )\n    }\n}\nEpisodesToWatch.propTypes = propTypes;\nEpisodesToWatch.defaultProps = defaultProps;\n\nexport default EpisodesToWatch;\n\nexport function getEpisodesToWatch(perPage, page) {\n    return new Promise((resolve, reject) => {\n        request(`/1/users/${getUserId()}/shows-etw`, {\n            query: {\n                'per_page': perPage,\n                page: page,\n            },\n        }).done((data, textStatus, jqXHR) => {\n            resolve({items: data, jqXHR: jqXHR});\n        }).fail((e) => {\n            reject(e);\n        })\n    })\n}","import './styles/Base.scss';\nimport './styles/FormBase.scss';\n\nimport {apiClientSettings} from './api.jsx';\nimport Chromecast from 'components/player/Chromecast';\n\nexport default{\n    React: require('react'),\n    ReactDOM: require('react-dom'),\n    $: require('jquery'),\n    seplis: {\n        Routes: require('./Routes.jsx'),\n        apiClientSettings: apiClientSettings,\n        Navbar: require('./components/Navbar.jsx'),\n        Chromecast: Chromecast,\n    }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nimport './VolumeBar.scss';\n\nconst propTypes = {\n    onChange: PropTypes.func,\n}\n\nclass VolumeBar extends React.Component {\n\n    constructor(props) {\n        super(props);        \n        this.onSliderMouseMove = this.sliderMouseMove.bind(this);\n        this.onSliderClick = this.sliderClick.bind(this);\n        this.onIconClick = this.iconClick.bind(this);\n\n        this.state = {\n            percent: (localStorage.getItem('volume') || 1)*100,\n            show: false,\n            muted: false,\n        }\n        this.onDocumentClick = this.documentClick.bind(this);\n    }\n\n    componentDidMount() {\n        let volume = localStorage.getItem('volume') || 1;\n        if (this.props.onChange)\n            this.props.onChange(volume);\n        document.addEventListener('click', this.onDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onDocumentClick);\n    }\n    \n    documentClick(e) {\n        if (!this.icon.contains(e.target)) {\n            this.setState({show: false});\n        }\n    }\n\n    sliderMouseMove(event) {\n        if (event.buttons != 1) return;\n        this.onSliderClick(event);\n    }\n\n    sliderClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        let scrubber = event.target.querySelector('.scrubber');\n        let y = event.clientY;\n        y -= event.target.offsetTop + scrubber.offsetTop;\n        y = scrubber.offsetHeight - y;\n        if (y > scrubber.offsetHeight)\n            y = scrubber.offsetHeight;\n        if (y < 0)\n            y = 0;\n        let norm = 1 / scrubber.offsetHeight;\n        let volume = norm*y;\n        if (volume < 0)\n            volume = 0;\n        this.setState({percent: volume*100});\n        if (this.props.onChange)\n            this.props.onChange(volume);\n        localStorage.setItem('volume', volume);\n    }\n\n    iconClick(event) {\n        this.setState({show: !this.state.show});\n    }\n\n    renderBar() {\n        if (!this.state.show) return;\n        return (\n            <div \n                className=\"volume-slider\"\n                onMouseMove={this.onSliderMouseMove}\n                onClick={this.onSliderClick}\n            >\n                <div className=\"scrubber\">\n                    <div \n                        className=\"scrubber-percentage\" \n                        style={{height: this.state.percent+'%'}}\n                    />\n                    <div \n                        className=\"scrubber-head\"\n                        style={{bottom: this.state.percent+'%'}}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        let volume = ClassNames({\n            fa: true,\n            'fa-volume-up': (this.state.percent >= 50) && !this.state.muted,\n            'fa-volume-down': (this.state.percent < 50) && \n                (this.state.percent >= 1) && !this.state.muted,\n            'fa-volume-off': (this.state.percent < 1) || this.state.muted,\n        });\n        return (\n            <span \n                className={volume} \n                onClick={this.onIconClick}\n                ref={(ref) => this.icon = ref}\n            >\n                {this.renderBar()}\n            </span>\n        )\n    }\n\n}\nVolumeBar.propTypes = propTypes;\n\nexport default VolumeBar;","import React from 'react';\nimport {Router, Route, browserHistory, IndexRedirect} from 'react-router';\n\nimport Show from './views/show/Show';\nimport ShowMain from './views/show/Main';\nimport ShowSeasons from './views/show/Seasons';\nimport ShowStats from './views/show/Stats';\nimport ShowInfo from './views/show/Info';\nimport ShowEdit from './views/show/Edit';\nimport PlayEpisode from './views/show/PlayEpisode';\n\nimport ShowNew from './views/show/New';\n\nimport SignIn from './views/SignIn';\nimport SignOut from './views/SignOut';\nimport CreateUser from './views/CreateUser';\n\nimport FanOf from './views/FanOf';\nimport RecentlyAired from './views/RecentlyAired';\nimport ShowsWatched from './views/ShowsWatched';\nimport Countdown from './views/Countdown';\nimport EpisodesToWatch from './views/EpisodesToWatch';\nimport Main from './views/Main';\nimport AirDates from './views/AirDates';\nimport Account from './views/Account';\nimport Password from './views/Password';\nimport PlayServers from './views/PlayServers';\nimport PlayServer from './views/PlayServer';\nimport UserShowsStats from './views/UserShowsStats';\n\nexport default (\n    <Router history={browserHistory}>\n        <Route path=\"/sign-in\" component={SignIn} />\n        <Route path=\"/sign-out\" component={SignOut} />\n        <Route path=\"/create-user\" component={CreateUser} />\n        <Route path=\"/show/:showId\" component={Show}>\n            <IndexRedirect to=\"/show/:showId/main\" />\n            <Route path=\"main\" component={ShowMain} />\n            <Route path=\"info\" component={ShowInfo} />\n            <Route path=\"seasons\" component={ShowSeasons} />\n            <Route path=\"stats\" component={ShowStats} />\n            <Route path=\"edit\" component={ShowEdit} />\n        </Route>\n        <Route path=\"/show/:showId/episode/:number/play\" component={PlayEpisode} />\n        <Route path=\"/show-new\" component={ShowNew} />\n        <Route path=\"/fan-of\" component={FanOf} />\n        <Route path=\"/recently-aired\" component={RecentlyAired} />\n        <Route path=\"/shows-watched\" component={ShowsWatched} />\n        <Route path=\"/countdown\" component={Countdown} />\n        <Route path=\"/episodes-to-watch\" component={EpisodesToWatch} />\n        <Route path=\"/main\" component={Main} />\n        <Route path=\"/air-dates\" component={AirDates} />\n        <Route path=\"/account\" component={Account} />\n        <Route path=\"/password\" component={Password} />\n        <Route path=\"/play-servers\" component={PlayServers} />\n        <Route path=\"/play-server\" component={PlayServer} />\n        <Route path=\"/user-shows-stats\" component={UserShowsStats} />\n      </Router>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {request} from 'api';\nimport {isAuthed, getUserId} from 'utils';\n\nimport Loader from 'components/Loader';\nimport FanButton from 'components/shows/FanButton';\nimport ShowNav from 'components/shows/ShowNav';\n\nimport './Show.scss';\n\nconst propTypes = {\n    params: PropTypes.object.isRequired,\n}\n\nclass Show extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: document.seplis_tv_show,\n        };\n    }\n\n    renderShow() {\n        let show = this.state.show;\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12 show-header\">\n                        <div className=\"btn-fan__pull-left\">\n                            <FanButton showId={show.id} />\n                        </div>\n                        <div className=\"title\">\n                            {show.title}\n                            &nbsp;\n                            <small className=\"text-muted\">{show.premiered!=null?show.premiered.substring(0,4):''}</small>\n                        </div>\n                    </div> \n\n                    <div className=\"col-4 col-sm-4 col-md-4 col-margin d-none d-sm-block\">\n                        <img \n                            src={show.poster_image!=null?show.poster_image.url + '@SX360':''} \n                            width=\"100%\" \n                        />\n                    </div>\n                    <div className=\"col-4 d-sm-none\" />\n\n                    <div className=\"col-12 col-sm-8\">\n                        <ShowNav showId={parseInt(this.state.show.id)} />\n                        {React.cloneElement(this.props.children, {show: show})}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderShowImporting() {\n        setTimeout(() => {\n            location.reload();\n        }, 5000);\n        return (\n            <center>\n                <h1>The show is currently in the import queue</h1>\n                <h2>Check back later!</h2>\n                <a \n                    className=\"btn btn-warning\" \n                    href={`/show/${this.state.show.id}/edit`}\n                >\n                    Edit show\n                </a>\n                <Loader />\n            </center>\n        )\n    }\n\n    render() {\n        if (!this.state.show) {\n            return (\n                <Loader />\n            )\n        } \n        else if (\n            (this.state.show.status == 0)\n            && !(this.props.location.pathname.endsWith('/edit'))\n            && (this.state.show.importers.info != null)) {\n            return this.renderShowImporting();\n        }\n        else {\n            return this.renderShow();\n        }\n    }\n}\nShow.propTypes = propTypes;\n\nexport default Show;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport {isAuthed,getUserId} from 'utils';\nimport {request} from 'api';\n\nimport './FanButton.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    isFan: PropTypes.bool,\n}\n\nclass FanButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFan: props.isFan,\n        }\n        this.onClick = this.onClick.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.isFan == undefined)\n            this.getIsFan();\n    }\n\n    onClick(e) {\n        e.preventDefault();\n        this.setState({isFan: !this.state.isFan});\n        request(`/1/users/${getUserId()}/fan-of/${this.props.showId}`, {\n            method: this.state.isFan?'DELETE':'PUT',\n        }).fail(() => {            \n            this.setState({isFan: !this.state.isFan});\n        })\n    }\n\n    getIsFan() {\n        if (!isAuthed()) \n            return;\n        request(\n            `/1/users/${getUserId()}/fan-of/${parseInt(this.props.showId)}`\n        ).done(is_fan => {\n            this.setState({isFan: is_fan.is_fan});\n        });\n    }\n\n    render() {\n        let btnClass = ClassNames({\n            btn: true,\n            'btn-fan': true,\n            'btn-fan__is-fan': this.state.isFan, \n        });\n        return (\n            <button \n                className={btnClass}\n                onClick={this.onClick}\n                title={this.state.isFan?'Unfan':'Become a Fan'}\n                aria-label={this.state.isFan?'Unfan':'Become a Fan'}                \n            >\n                {this.state.isFan?\n                    <span className=\"fa fa-star\"></span>\n                    :\n                    <span className=\"fa fa-star-o\"></span>\n                }\n            </button>\n        );\n    }\n}\nFanButton.propTypes = propTypes;\n\nexport default FanButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router';\n\nimport './ShowNav.scss';\n\nlet propTypes = {\n    showId: PropTypes.number.isRequired,\n}\n\nclass ShowNav extends React.Component {\n\n    render() {\n        return (\n            <ul className=\"nav nav-tabs col-margin nav-seplis\">\n                <li className=\"nav-item\">\n                    <Link \n                        className=\"nav-link\"                        \n                        to={`/show/${this.props.showId}/main`}\n                        activeClassName=\"active\"\n                    >\n                        Main\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link \n                        className=\"nav-link\" \n                        to={`/show/${this.props.showId}/info`}\n                        activeClassName=\"active\"\n                    >\n                        Info\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link \n                        className=\"nav-link\" \n                        to={`/show/${this.props.showId}/seasons`}\n                        activeClassName=\"active\"\n                    >\n                        Seasons\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link \n                        className=\"nav-link\" \n                        to={`/show/${this.props.showId}/stats`}\n                        activeClassName=\"active\"\n                    >\n                        Stats\n                    </Link>\n                </li>\n                <li className=\"nav-item ml-auto\">\n                    <Link \n                        className=\"nav-link\" \n                        to={`/show/${this.props.showId}/edit`}\n                        activeClassName=\"active\"\n                    >\n                        <i className=\"fa fa-cog\"></i>\n                    </Link>\n                </li>\n            </ul>\n        );\n    }\n}\nShowNav.propTypes = propTypes;\n\nexport default ShowNav;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NextToWatch from 'components/shows/episodes/NextToWatch';\nimport LatestEpisodesSideBar from 'components/shows/episodes/LatestEpisodesSideBar';\nimport EpisodeLastWatched from 'components/shows/episodes/EpisodeLastWatched'\n\nconst propTypes = {\n    show: PropTypes.object.isRequired,\n}\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n    } \n\n    renderAirDates() {\n        if (this.props.show.status > 1) {\n            return;\n        }\n        return (\n            <div className=\"col-12 col-lg-4 col-margin\">\n                <h4 className=\"header\">\n                    Next to air\n                </h4>\n                <LatestEpisodesSideBar\n                    showId={parseInt(this.props.show.id)}\n                />\n            </div>\n        );\n    }\n\n    renderNextToWatch() {\n        return (\n            <div className=\"col-12 col-lg-8 col-margin\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-margin\">\n                    <h4 className=\"header\">\n                        To watch\n                    </h4>\n                    <NextToWatch\n                        showId={parseInt(this.props.show.id)}\n                        numberOfEpisodes={2}\n                    />                \n                    </div>\n                    <div className=\"col-12\">\n                    <h4 className=\"header\">\n                        Previous watched\n                    </h4>\n                    <EpisodeLastWatched showId={parseInt(this.props.show.id)} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                {this.renderNextToWatch()}\n                {this.renderAirDates()}\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {request} from 'api';\nimport {isAuthed} from 'utils';\nimport EpisodeListItem from './EpisodeListItem';\nimport {EVENT_EPISODE_WATCHED_STATUS} from 'seplis/events';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n}\n\nclass NextToWatch extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episode: null,\n        }\n        this.eventGet = this.get.bind(this);\n        document.addEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.addEventListener('visibilitychange', this.eventGet);\n    }\n    \n    componentDidMount() {\n        this.get();        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.removeEventListener('visibilitychange', this.eventGet);\n    }\n\n    get(event={}) {\n        if (document.hidden) return;\n        if (!isAuthed()) {\n            request(\n                `/1/shows/${this.props.showId}/episodes/1`\n            ).done(episode => {\n                this.setState({episode: episode});\n            });\n            return;\n        }\n\n        request(\n            `/1/shows/${this.props.showId}/episodes/to-watch`\n        ).done(episode => {\n            this.setState({episode: episode});\n        });\n    }\n\n    render() {\n        if (this.state.episode == null) {\n            return <p className=\"text-muted\">No episodes to watch</p>;\n        }\n        return (\n            <EpisodeListItem \n                key={this.state.episode.number}\n                showId={this.props.showId}\n                episode={this.state.episode}\n                displaySeason={true}\n            />\n        )\n    }\n}\nNextToWatch.propTypes = propTypes;\n\nexport default NextToWatch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames'; \nimport {getUserId} from 'utils';\nimport {request} from 'api';\nimport {trigger_episode_watched_status} from 'seplis/events';\n\nimport 'bootstrap/js/src/dropdown';\nimport './WatchedButton.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    episodeNumber: PropTypes.number.isRequired,\n    watched: PropTypes.object,\n}\n\nclass WatchedButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.setWatchedState();\n        this.onWatchedIncr = this.onWatchedIncr.bind(this);\n        this.onWatchedDecr = this.onWatchedDecr.bind(this);\n        this.onWatchedClick = this.onWatchedClick.bind(this);\n    }\n\n    setWatchedState() {\n        if (this.props.watched) {\n            this.state = this.props.watched;\n        } else {            \n            this.state = {\n                times: 0,\n                position: 0,\n            }\n        }\n    }\n\n    watchedApiEndpoint() {\n        let id = this.props.showId;\n        let n = this.props.episodeNumber;\n        return `/1/shows/${id}/episodes/${n}/watched`;\n    }\n    onWatchedIncr(e) {\n        this.setState({times: ++this.state.times});\n        request(this.watchedApiEndpoint(), {\n            method: 'PUT', \n        }).done((data) => {\n            trigger_episode_watched_status(\n                'incr', \n                this.props.showId, \n                this.props.episodeNumber\n            );\n            this.setState(data);\n        }).fail(() => {            \n            this.setState({times: --this.state.times});\n        });\n    }    \n    onWatchedDecr(e) {\n        if (this.state.position > 0) {\n            request(this.watchedApiEndpoint()\n                .replace('watched', 'position'), {\n                method: 'DELETE', \n            }).done((data) => {\n                trigger_episode_watched_status(\n                    'decr', \n                    this.props.showId, \n                    this.props.episodeNumber\n                );\n                this.setState({position: 0});\n            });\n        } else if (this.state.times > 0) { \n            this.setState({times: --this.state.times});\n            request(this.watchedApiEndpoint(), {\n                data: {times: -1},\n                method: 'PUT', \n            }).done((data) => {\n                trigger_episode_watched_status(\n                    'decr', \n                    this.props.showId, \n                    this.props.episodeNumber\n                );\n                if (data) {\n                    this.setState(data);\n                } else {\n                    this.setState({\n                        times: 0,\n                        position: 0,\n                    });\n                }\n            }).fail(() => {            \n                this.setState({times: ++this.state.times});\n            });\n        }\n    }\n    onWatchedClick(e) {\n        if ((this.state.times > 0) || (this.state.position > 0))\n            return;\n        this.onWatchedIncr(e);\n    }\n\n    renderDropdown() {\n        return (\n            <ul \n                className=\"dropdown-menu dropdown-menu-right\" \n                role=\"menu\"\n            >\n                <li onClick={this.onWatchedIncr}>\n                    <i className=\"fa fa-plus\"></i>\n                </li>\n                <li onClick={this.onWatchedDecr}>\n                    <i className=\"fa fa-minus\"></i>\n                </li>\n            </ul>\n        )\n    }\n\n    render() {\n        let dropdown = (this.state.times>0) || (this.state.position>0);\n        let btnClass = ClassNames({\n            btn: true,\n            'btn-watched': true,\n            watched: this.state.times>0,\n            watching: this.state.position>0,\n            'watching-watched': this.state.position>0 && this.state.times>0,\n        });\n        return (\n            <div className=\"btn-group btn-episode-watched-group dropdown\">\n                {this.renderDropdown()}\n                <button \n                    className={btnClass}\n                    data-toggle={dropdown?'dropdown':'none'}\n                    onClick={this.onWatchedClick}\n                >\n                    Watched\n                </button>\n                <button className=\"btn btn-times\">\n                    {this.state.times} \n                </button>\n            </div>\n        );\n    }\n}\n\nWatchedButton.propTypes = propTypes;\n\nexport default WatchedButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Fecha from 'fecha';\nimport {request} from 'api';\nimport {dateInDays} from 'utils';\n\nimport './LatestEpisodesSideBar.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    numberOfEpisodes: PropTypes.number,\n}\n\nconst defaultProps = {\n    numberOfEpisodes: 3,\n}\n\nclass LatestEpisodesSideBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episodes: [],\n        }\n        this.getEpisodes();\n    }\n\n    renderEpisodeNumber(episode) {\n        if (episode.episode) {\n            return (\n                <span>\n                    S{episode.season} · E{episode.episode}\n                    &nbsp;\n                    ({episode.number})\n                </span>\n            )\n        } else {\n            return (\n                <span>Episode {episode.number}</span>\n            )   \n        }\n    }\n\n    getEpisodes() {\n        let dateUTC = Fecha.format(new Date().getTime(), 'YYYY-MM-DD');\n        request(`/1/shows/${this.props.showId}/episodes`, {\n            query: {\n                q: `air_date:[${dateUTC} TO *]`,\n                per_page: this.props.numberOfEpisodes,\n                sort: 'number:asc',\n            }\n        }).done((episodes) => {\n            this.setState({episodes:episodes});\n        });\n    }\n\n    renderCountdown(episode) {\n        if (!episode.air_datetime)\n            return '';\n        let dt = new Date(episode.air_datetime);\n        let m = dt-new Date().getTime();\n        if (m > 0) {\n            return ' · In '+dateInDays(episode.air_datetime);\n        } else {\n            return ' · '+dateInDays(episode.air_datetime)+' ago';     \n        }\n    }\n\n    render() {\n        if (this.state.episodes.length == 0) {\n            return (\n                <p className=\"text-muted\">No ETA for new episodes.</p>\n            )\n        }\n        return (\n            <div className=\"latest-episodes-side-bar\">\n                {this.state.episodes.map((item, i) => (\n                    <div key={item.number} className=\"item\">\n                        <p>{item.title}</p>\n                        <p>{this.renderEpisodeNumber(item)}</p>\n                        <p>{item.air_date} {this.renderCountdown(item)}</p>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\nLatestEpisodesSideBar.propTypes = propTypes;\nLatestEpisodesSideBar.defaultProps = defaultProps;\n\nexport default LatestEpisodesSideBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {request} from 'api'\nimport {isAuthed} from 'utils';\nimport EpisodeListItem from './EpisodeListItem';\nimport {EVENT_EPISODE_WATCHED_STATUS} from 'seplis/events';\n\nconst propTypes = {\n    'showId': PropTypes.number.isRequired,\n}\n\nclass EpisodeLastWatched extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episode: null,\n        }\n        this.eventGet = this.get.bind(this);\n        document.addEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.addEventListener('visibilitychange', this.eventGet);\n    }\n\n    componentDidMount() {\n        this.get();        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(EVENT_EPISODE_WATCHED_STATUS, this.eventGet);\n        document.removeEventListener('visibilitychange', this.eventGet);\n    }\n\n    get(event={}) {\n        if (document.hidden) return;\n        if (!isAuthed())\n            return;\n        request(\n            `/1/shows/${this.props.showId}/episodes/last-watched`\n        ).done(episode => {\n            this.setState({episode: episode});\n        })\n    }\n\n    render() {\n        if (!this.state.episode)\n            return <p className=\"text-muted\">No episodes has been watched</p>;\n        \n        return (\n            <EpisodeListItem \n                key={this.state.episode.number}\n                showId={this.props.showId}\n                episode={this.state.episode}\n                displaySeason={true}\n            />\n        );\n    }\n\n}\nEpisodeLastWatched.propTypes = propTypes;\n\nexport default EpisodeLastWatched;","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport SeasonList from 'components/shows/episodes/SeasonList';\n\nclass Seasons extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onSeasonChange = this.seasonChange.bind(this);\n        let season = parseInt(this.props.location.query.season) || null;\n        if (!season) {\n            if (this.props.show.seasons.length > 0)\n                season = this.props.show.seasons.slice(-1)[0].season;\n        }\n        this.state = {\n            season: season,\n        }\n    }\n\n    seasonChange(season) {\n        this.setState({\n            season: season,\n        });\n        browserHistory.push({\n            pathname: this.props.location.pathname,\n            query: { \n                season: season,\n            },\n        });\n    }\n\n    render() {\n        return (\n            <SeasonList\n                key={this.state.season}\n                showId={this.props.show.id}\n                seasons={this.props.show.seasons}\n                seasonNumber={this.state.season}\n                onSeasonChange={this.onSeasonChange}\n            />\n        );\n    }\n}\n\nexport default Seasons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport {request} from 'api';\nimport {isAuthed} from 'utils';\nimport $ from 'jquery';\n\nimport EpisodeListItem from './EpisodeListItem';\nimport WatchedProgression from './WatchedProgression';\nimport SelectSeason from './SelectSeason';\n\nconst propTypes = {\n    'showId': PropTypes.number.isRequired,\n    'seasons': PropTypes.array.isRequired,\n    'seasonNumber': PropTypes.number.isRequired,\n    onSeasonChange: PropTypes.func,\n}\n\nclass SeasonList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            episodes: [],\n            seasonNumber: this.props.seasonNumber,\n        }\n        this.onSeasonChange = this.onSeasonChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getEpisodes();        \n    }\n\n    getEpisodes() {\n        if (this.props.seasons.length < 1) \n            return;\n        var position = $(window).scrollTop();\n        this.setState({episodes: []});\n        let season = this.seasonEpisodeNumbers(this.state.seasonNumber);\n        let query = {}\n        query.q = `number:[${season.from} TO ${season.to}]`;\n        query.per_page = season.total;\n        if (isAuthed()) {\n            query.append = 'user_watched';\n        }\n        request(`/1/shows/${this.props.showId}/episodes`, {\n            query: query,\n        }).done((episodes) => {\n            this.setState({episodes: episodes}, () => {\n                $(window).scrollTop(position);\n            });            \n        });\n    }\n\n    seasonEpisodeNumbers(seasonNumber) {\n        for (var s of this.props.seasons) {\n            if (s.season == seasonNumber) {\n                return s;\n            }\n        }\n        return null;\n    }\n\n    onSeasonChange(e) {\n        var seasonNum = parseInt(e.target.value);\n        this.setState(\n            {seasonNumber: seasonNum}, \n            ()=> {\n                if (this.props.onSeasonChange) {\n                    this.props.onSeasonChange(seasonNum);\n                }\n                else {\n                    this.getEpisodes();\n                }\n            }\n        );\n    }\n\n    render() {\n        if (this.props.seasons.length < 1) \n            return (\n                <div className=\"alert alert-warning\">\n                    <strong>This show has 0 episodes.</strong>  \n                </div>\n            );\n        return (\n            <span>\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-auto ml-auto order-md-12 mb-2 mb-md-0\">\n                    <div className=\"float-right\">\n                        <WatchedProgression \n                            showId={this.props.showId}\n                            seasons={this.props.seasons}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-4\">\n                    <SelectSeason                    \n                        seasons={this.props.seasons}\n                        selectedSeason={this.state.seasonNumber}\n                        onChange={this.onSeasonChange}\n                    />\n                </div>\n            </div>\n            <div className=\"row show-season-list\">\n                <div className=\"col-12 d-md-none col-margin\" />\n                <div className=\"col-12\">\n                    <div className=\"row\">\n                        {this.state.episodes.map((item, index) => (\n                            <div                            \n                                key={item.number} \n                                className=\"col-12 col-md-6 col-lg-4\"\n                            >\n                                <div className=\"d-none d-md-block col-margin\" />\n                                <EpisodeListItem \n                                    showId={this.props.showId}\n                                    episode={item} \n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            </span>\n        );\n    }\n}\n\nSeasonList.propTypes = propTypes;\n\nexport default SeasonList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectSeasonEpisode from './SelectSeasonEpisode';\nimport {request} from 'api';\nimport {getUserId} from 'utils';\n\nimport 'popper.js';\nimport 'bootstrap/js/src/dropdown';\nimport './WatchedProgression.scss';\n\nconst propTypes = {\n    showId: PropTypes.number.isRequired,\n    seasons: PropTypes.array.isRequired,\n}\n\nclass WatchedProgression extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showForm: false,\n            fromNumber: 1,\n            toNumber: 1,\n            saving: false,\n        }\n        this.dropdownButtonClick = this.dropdownButtonClick.bind(this);\n        this.selectChange = this.selectChange.bind(this);\n        this.formSubmit = this.formSubmit.bind(this);\n    }\n\n    selectChange(e) {\n        this.state[e.target.name] = parseInt(e.target.value);\n        if (this.state.fromNumber > this.state.toNumber)\n            this.state.toNumber = this.state.fromNumber;\n        this.setState(this.state);\n    }\n\n    dropdownButtonClick(e) {\n        this.getNextToWatch();\n    }\n\n    getNextToWatch() {\n        request(\n            `/1/shows/${this.props.showId}/episodes/to-watch`\n        ).done(episode => {\n            if (this.state.showForm === false)\n                // Render the form and it's options before \n                // setting the selected value. Otherwise it will not work.\n                this.setState({showForm:true});\n            this.setState({\n                fromNumber: episode.number,\n                toNumber: episode.number,\n            });\n        }).fail(error => {\n            if (error.responseJSON.code === 1301) {\n                this.setState({showForm:true});\n            }\n        });\n    }\n\n    formSubmit(e) {\n        e.preventDefault();\n        this.setState({'saving': true})\n        let id = this.props.showId;\n        let fromN = this.state.fromNumber;\n        let toN = this.state.toNumber;\n        request(\n            `/1/shows/${id}/episodes/${fromN}-${toN}/watched`,\n            {method: 'PUT'}\n        ).fail(() => {\n            this.setState({'saving': false});\n        }).done(() => {\n            location.reload();\n        });\n    }\n\n    renderForm() {\n        return (\n            <form onSubmit={this.formSubmit}>\n                <div className=\"form-group\">                    \n                    <label>From episode</label>\n                    <SelectSeasonEpisode\n                        seasons={this.props.seasons}\n                        name=\"fromNumber\"\n                        onChange={this.selectChange}\n                        selectedNumber={this.state.fromNumber}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>To episode</label>\n                    <SelectSeasonEpisode\n                        seasons={this.props.seasons}\n                        name=\"toNumber\"\n                        onChange={this.selectChange}\n                        selectedNumber={this.state.toNumber}\n                    />\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={this.state.saving}\n                >\n                    {this.state.saving?'Please wait...':'Watched'}\n                </button>\n            </form>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"dropdown watched-progression\">\n                <button \n                    className=\"btn btn-dark btn-transparent dropdown-toggle\" \n                    data-toggle=\"dropdown\"\n                    onClick={this.dropdownButtonClick}\n                >\n                    Set progression\n                </button>\n                <div className=\"dropdown-menu dropdown-menu-right\">                    \n                    {this.state.showForm?this.renderForm():''}\n                </div>\n            </div>\n        )\n    }\n\n}\nWatchedProgression.propTypes = propTypes;\n\nexport default WatchedProgression;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    seasons: PropTypes.array.isRequired,\n    selectedNumber: PropTypes.number,\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n}\n\nclass SelectSeasonEpisode extends React.Component {\n\n    renderSeason(item) {\n        let rows = [];\n        for (let i = item.from; i <= item.to; i++) {\n            rows.push(\n                <option \n                    key={i} \n                    value={i}\n                >\n                    S{item.season}: Episode {i-item.from+1}\n                </option>\n            )\n        }\n        return (\n            <optgroup key={item.season} label={`Season ${item.season}`}>\n                {rows}\n            </optgroup>\n        )\n    }\n\n    render() {\n        return (\n            <select \n                name={this.props.name}\n                className=\"form-control\"\n                onChange={this.props.onChange}\n                value={this.props.selectedNumber}\n            >\n                {this.props.seasons.map((item, index) => (\n                    this.renderSeason(item)\n                ))}\n            </select>\n        )\n    }\n}\nSelectSeasonEpisode.propTypes = propTypes;\n\nexport default SelectSeasonEpisode;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    seasons: PropTypes.array.isRequired,\n    selectedSeason: PropTypes.number,\n    onChange: PropTypes.func,\n}\n\nclass SelectSeason extends React.Component {\n\n    render() {\n        return (\n            <select \n                className=\"form-control\" \n                value={this.props.selectedSeason}\n                onChange={this.props.onChange}\n            >\n                {this.props.seasons.map((item, key) => (\n                    <option \n                        key={item.season}\n                        value={item.season}\n                    >\n                        Season {item.season}\n                    </option>\n                ))}\n            </select>\n        )\n    }\n\n}\nSelectSeason.propTypes = propTypes;\n\nexport default SelectSeason;","import React from 'react';\nimport {request} from 'api';\nimport {isAuthed, secondsToPretty} from 'utils';\n\nclass Stats extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userStats: null,\n        }\n    }\n\n    componentDidMount() {\n        if (isAuthed()) \n            this.getUserStats();\n    }\n\n    getUserStats() {\n        request(`/1/shows/${this.props.show.id}/user-stats`).done((stats) => {\n            this.setState({\n                userStats: stats,\n            });\n        });\n    }\n\n    countEpisodes() {\n        if (!this.props.show.seasons)\n            return 0;\n        let totalEpisodes = 0;\n        for (let season of this.props.show.seasons) {\n            totalEpisodes += season.total;\n        }\n        return totalEpisodes;\n    }\n\n    renderUserStats() {\n        if (!this.state.userStats)\n            return null;\n        return (\n            <span>\n                <h2 className=\"mb-1 mt-3\">Your stats</h2>\n                <table className=\"table table-striped\">\n                    <tbody>\n                    <tr><th width=\"200px\">Episodes watched</th><td>{this.state.userStats.episodes_watched}</td></tr>\n                    <tr><th>Time spent watching</th>\n                        <td>{secondsToPretty(this.state.userStats.episodes_watched_minutes*60, true)}</td></tr>\n                    </tbody>\n                </table>\n            </span>\n        )\n    }\n\n    render() {\n        let episodeCount = this.countEpisodes();\n        return (\n            <span>\n                {this.renderUserStats()}\n                \n                <h2 className=\"header\">Show stats</h2>\n                <table className=\"table table-striped\">\n                    <tbody>\n                    <tr><th width=\"200px\">Total episodes</th><td>{episodeCount}</td></tr>\n                    <tr><th>Total watchtime</th>\n                        <td>{secondsToPretty(this.props.show.runtime*episodeCount*60, true)}</td></tr>\n                    </tbody>\n                </table>\n            </span>\n        )\n    }\n\n}\n\nexport default Stats;","import React from 'react';\n\n\nclass Info extends React.Component {\n    \n    statusToText(status) {\n        switch (status) {\n            case 1: return 'Running';\n            case 2: return 'Ended';\n            default: return 'Unknown';\n        }\n    }\n\n    renderGeneral() {\n        let show = this.props.show;\n        return (\n            <div className=\"col-12\">\n                <table className=\"table table-sm borderless\">\n                    <tbody>\n                    <tr><th>Status</th><td>{this.statusToText(show.status)}</td></tr>\n                    <tr><th width=\"100\">Premiered</th><td>{show.premiered || 'unknown'}</td></tr>\n                    <tr><th>Runtime</th><td>{show.runtime?show.runtime + ' minutes':'Unknown'}</td></tr>\n                    <tr><th>Genres</th><td>{show.genres.join(', ')}</td></tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    renderDescription() {\n        let desc = this.props.show.description;\n        return (\n            <div className=\"col-12 col-md-12\">\n                <p className=\"text-justify\">\n                    {desc.text}\n                    <br />\n                    <font className=\"text-muted\">Source:</font> \n                    &nbsp;<a href={desc.url} target=\"_blank\">{desc.title}</a>\n                </p>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                {this.renderGeneral()}\n                \n                {this.renderDescription()}\n            </div>\n        )\n    }\n}\n\nexport default Info;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditFields from 'components/shows/EditFields';\nimport Serialize from 'form-serialize';\nimport {unflatten} from 'flat';\nimport {request} from 'api';\n\nconst propTypes = {\n    show: PropTypes.object,\n}\n\nclass Edit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.submit.bind(this);\n        this.state = {\n            error: null,\n            success: null,\n            loading: false,\n        }\n    }\n\n    submit(e) {\n        e.preventDefault();\n        this.setState({\n            success: null,\n            error: null,\n            loading: true,\n        })\n        let data = unflatten(\n            Serialize(e.target, {hash: true})\n        );\n        request(`/1/shows/${this.props.show.id}`, {\n            data: data,\n            method: 'PUT',\n        }).done(show => {\n            this.setState({success: show});\n            request(`/1/shows/${this.props.show.id}/update`, {\n                method: 'POST',\n            });\n        }).fail(e => {\n            this.setState({error: e.responseJSON});\n        }).always(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    renderError() {\n        if (!this.state.error) return '';\n        return (\n            <div className=\"alert alert-danger\">\n                {this.state.error.message}\n            </div>\n        )\n    }\n\n    renderSuccess() {\n        if (!this.state.success) return '';\n        return (\n            <div className=\"alert alert-success\">\n                The show was successfully updated.\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <form method=\"post\" onSubmit={this.onSubmit}>\n                <EditFields show={this.props.show} />\n                {this.renderError()}\n                {this.renderSuccess()}\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={this.state.loading}\n                >\n                    {this.state.loading?'Saving...':'Save'}\n                </button>\n            </form>\n        )\n    }\n}\nEdit.propTypes = propTypes;\n\nexport default Edit;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport $ from 'jquery';\nimport 'select2';\nimport 'select2/dist/css/select2.css';\n\nconst propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string),\n}\n\nconst defaultProps = {\n    options: [],\n}\n\nclass EditAlternativeTitles extends React.Component {\n\n    componentDidMount() {\n        $('select#alternative-titles').select2({\n            tags: true,\n        });\n    }\n\n    render() {\n        return (\n            <span style={{color:'#000000'}}>\n                <select \n                    name=\"alternative_titles\"\n                    id=\"alternative-titles\"\n                    className=\"form-control\"\n                    defaultValue={this.props.options}\n                    multiple\n                >\n                    {this.props.options.map((title) => (\n                        <option key={title} value={title}>{title}</option>\n                    ))}\n                </select>\n            </span>\n        );\n    }\n}\nEditAlternativeTitles.propTypes = propTypes;\nEditAlternativeTitles.defaultProps = defaultProps;\n\nexport default EditAlternativeTitles;","import React from 'react';\nimport Player, {getPlayServer} from 'components/player/Player';\nimport Loader from 'components/Loader';\nimport Chromecast from 'components/player/Chromecast';\nimport {request} from 'api';\nimport {apiClientSettings} from 'api.jsx';\nimport {pad, episodeTitle, guid} from 'utils';\n \nclass PlayEpisode extends React.Component {\n \n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingPlayServers: true,\n            loadingShow: true,\n            loadingEpisode: true,\n            loadingNextEpisode: true,\n            loadingLang: true,\n            loadingStartTime: true,\n            playServer: null,\n            playServerError: null,\n            show: null,\n            episode: null,\n            nextEpisode: null,\n            audio_lang: null,\n            subtitle_lang: null,\n            metadata: null,\n            startTime: 0,\n        }        \n        this.onAudioChange = this.audioChange.bind(this);\n        this.onSubtitleChange = this.subtitleChange.bind(this);\n        this.onTimeUpdate = this.timeUpdate.bind(this);\n \n        this.showId = this.props.params.showId;\n        this.number = this.props.params.number;\n        this.session = guid();\n        this.lastPos = 0;\n        this.cast = null;\n        this.markedAsWatched = false;\n    }\n \n    componentDidMount() {\n        this.getShow();\n        this.getEpisode();\n        this.getPlayServers();\n        this.getNextEpisode();\n        this.getLanguage();\n        this.getStartTime();\n    }\n \n    timeUpdate(time) {\n        time = Math.floor(time);\n        if (time == this.lastPos) \n            return;\n        this.lastPos = time;\n        if (time < 10)\n            return;\n        if ((time % 10) != 0) \n            return;\n        let duration = parseInt(this.state.metadata['format']['duration']);\n        let watched = (((time / 100) * 10) > (duration-time));\n        if (watched) {\n            if (!this.markedAsWatched) {\n                request(`/1/shows/${this.showId}/episodes/${this.number}/watched`, {\n                    method: 'PUT',\n                }).done(() => {\n                    this.markedAsWatched = true;\n                });\n            }\n        } else {\n            this.markedAsWatched = false;\n            request(`/1/shows/${this.showId}/episodes/${this.number}/position`, {\n                method: 'PUT',\n                data: {\n                    'position': time,\n                }\n            });\n        }\n    }\n \n    getPlayServers() {\n        let url = `/1/shows/${this.showId}/episodes/${this.number}/play-servers`;\n        getPlayServer(url).then((obj) => {\n            this.setState({\n                loadingPlayServers: false,\n                playServer: obj.playServer,\n                metadata: obj.metadata,\n            });\n        }).catch((error) => {\n            this.setState({\n                loadingPlayServers: false,\n                playServerError: error,\n            })\n        });\n    }\n \n    getShow() {\n        request(\n            `/1/shows/${this.showId}`\n        ).done(data => {\n            this.setState({show: data});\n        }).always(() => {\n            this.setState({loadingShow: false});\n        });        \n    }\n \n    getEpisode() {\n        let number = parseInt(this.number);\n        request(\n            `/1/shows/${this.showId}/episodes/${number}`\n        ).done(data => {\n            this.setState({episode: data});\n        }).always(() => {\n            this.setState({loadingEpisode: false});\n        });\n    }    \n \n    getNextEpisode() {\n        let number = parseInt(this.number) + 1;\n        request(\n            `/1/shows/${this.showId}/episodes/${number}`\n        ).done(data => {\n            this.setState({nextEpisode: data});\n        }).always(() => {\n            this.setState({loadingNextEpisode: false});\n        });\n    }\n \n    getLanguage() {\n        request(\n            `/1/shows/${this.showId}/user-subtitle-lang`\n        ).done(data => {\n            if (!data)\n                data = {};\n            this.setState({\n                audio_lang: data.audio_lang || null,\n                subtitle_lang: data.subtitle_lang || null,\n            });\n        }).always(() => {\n            this.setState({loadingLang: false});\n        });\n    }\n \n    getStartTime() {\n        request(\n            `/1/shows/${this.showId}/episodes/${this.number}/watched`\n        ).done(data => {\n            if (data) {\n                this.setState({\n                    startTime: data.position,\n                });\n            } else {\n                this.setState({\n                    startTime: 0,\n                });                \n            }\n        }).always(() => {\n            this.setState({loadingStartTime: false});\n        });\n    }\n \n    audioChange(lang) {\n        if (lang == '') \n            lang = null;\n        this.saveSub({\n            audio_lang: lang,\n        });\n    } \n \n    subtitleChange(lang) {\n        if (lang == '') \n            lang = null;\n        this.saveSub({\n            subtitle_lang: lang,\n        });\n    }\n \n    saveSub(data) {\n        request(`/1/shows/${this.showId}/user-subtitle-lang`, {\n            method: 'PATCH',\n            data: data,\n        })\n    }\n \n    getInfo() {\n        if (!this.state.show) return null;\n        return {\n            title: this.state.show.title,\n        }\n    }\n \n    episodeTitle(show, episode) {\n        return episodeTitle(show, episode);\n    }\n \n    getPlayNextInfo() {\n        if (!this.state.show || !this.state.nextEpisode) return null;\n        let show = this.state.show;\n        let episode = this.state.nextEpisode;\n        let title = this.episodeTitle(show, episode);\n        return {\n            title: title,\n            url: `/show/${show.id}/episode/${episode.number}/play`\n        }\n    }\n \n    getBackToInfo() {\n        if (!this.state.show) return null;\n        return {\n            title: `Back to: ${this.state.show.title}`,\n            url: `/show/${this.showId}`\n        }\n    }\n \n    getCurrentInfo() {\n        if (!this.state.show || !this.state.episode) return null;\n        let show = this.state.show;\n        let title = `${show.title} - `;\n        title += this.episodeTitle(show, this.state.episode);\n        return {\n            title: title,\n        }\n    }\n  \n    initCast() {\n        this.cast.addEventListener(\n            'isConnected',\n            (e) => {\n                if (!e.value) \n                    return;\n                if (!confirm(`Play ${this.getCurrentInfo().title} on ${this.cast.getFriendlyName()}?`))\n                    return;\n                request(this.getPlayUrl()+'&action=cancel');\n                this.cast.playEpisode(this.showId, this.number).then(() => {\n                    location.href = `/show/${this.showId}`;\n                });\n            },\n        );\n    }\n \n    loadCast() {\n        if (this.cast)\n            return;    \n        this.cast = new Chromecast();\n        this.cast.load(this.initCast.bind(this));\n    }    \n \n    getPlayUrl() {\n        return `${this.state.playServer.play_url}/play`+\n            `?play_id=${this.state.playServer.play_id}`+\n            `&session=${this.session}`\n    }\n\n    renderPlayServerErrorMessage() {\n        if (this.state.playServerError.code == 2) {\n            return (\n                <span>\n                    <b>\n                    {this.state.show.title} {episodeTitle(this.state.show, this.state.episode)}\n                    </b> is not on any of your play servers.\n                </span>\n            )\n        }\n        return this.state.playServerError.message;\n    }\n\n    renderPlayServerError() {\n        return (\n            <div \n                className=\"alert alert-warning\" \n                style={{width: '75%', margin: 'auto', marginTop: '100px'}}\n            >\n                <h3>{this.renderPlayServerErrorMessage()}</h3>\n\n                Go back to <a href={`/show/${this.showId}`}>\n                    {this.state.show.title}\n                </a>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.loadingPlayServers || this.state.loadingShow ||\n            this.state.loadingEpisode || this.state.loadingNextEpisode ||\n            this.state.loadingLang || this.state.loadingStartTime)\n            return <Loader />;\n        if (this.state.playServerError) {\n            return this.renderPlayServerError();\n        }\n        this.loadCast();\n        return <Player \n            playServerUrl={`${this.state.playServer.play_url}`}\n            playId={this.state.playServer.play_id}\n            metadata={this.state.metadata}\n            info={this.getInfo()}\n            nextInfo={this.getPlayNextInfo()}\n            backToInfo={this.getBackToInfo()}\n            currentInfo={this.getCurrentInfo()}\n            onAudioChange={this.onAudioChange}\n            onSubtitleChange={this.onSubtitleChange}\n            audio_lang={this.state.audio_lang}\n            subtitle_lang={this.state.subtitle_lang}\n            onTimeUpdate={this.onTimeUpdate}\n            startTime={this.state.startTime}\n            session={this.session}\n        />;\n    }\n}\nexport default PlayEpisode;","import React from 'react';\nimport EditFields from 'components/shows/EditFields';\nimport Serialize from 'form-serialize';\nimport {unflatten} from 'flat';\nimport {request} from 'api';\n\nclass New extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.submit.bind(this);\n        this.state = {\n            success: null,\n            error: null,\n            loading: false,\n        }\n    }\n\n    submit(e) {\n        e.preventDefault();\n        this.setState({\n            success: null,\n            error: null,\n            loading: true,\n        })\n        let data = unflatten(\n            Serialize(e.target, {hash: true})\n        );\n        request('/1/shows', {\n            data: data,\n            method: 'POST',\n        }).done(show => {\n            this.setState({success: show})\n        }).fail(e => {\n            this.setState({error: e.responseJSON});\n        }).always(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    renderError() {\n        if (!this.state.error) return '';\n        switch (this.state.error.code) {\n            case 1403:\n                let title = this.state.error.extra.show.title || 'the show';\n                return (\n                    <div className=\"alert alert-danger\">\n                        {this.state.error.message}.<br />\n                        <a href={`/show/${this.state.error.extra.show.id}`}>\n                            Go to {title}\n                        </a>.\n                    </div>\n                )\n               break;\n            default: \n                return (\n                    <div className=\"alert alert-danger\">\n                        {this.state.error.message}\n                    </div>\n                )\n                break;\n        }\n    }\n\n    renderSuccess() {\n        return (\n            <span>\n            <h1>Show successfully created</h1>\n            <div className=\"alert alert-success\">\n                The show has been created. It will be imported shortly.\n                <ul>\n                    <li><a href={`/show/${this.state.success.id}`}>Go to the show</a></li>\n                    <li><a href=\"/show-new\">Create another show</a></li>\n                </ul>\n            </div>\n            </span>\n        )        \n    }\n\n    render() {\n        if (this.state.success != null)\n            return this.renderSuccess();\n\n        return (\n            <form method=\"post\" onSubmit={this.onSubmit}>\n                <h1>New show</h1>\n                <EditFields />\n                {this.renderError()}\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={this.state.loading}\n                >\n                    {this.state.loading?'Creating...':'Create'}\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default New;","import React from 'react';\nimport $ from 'jquery';\nimport {request, apiClientSettings} from 'api';\n\nimport 'styles/StandardForm.scss';\n\nclass SignIn extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: '',\n            email: '',\n            password: '',\n        }\n        this.onSignIn = this.onSignIn.bind(this);\n        this.onDataChange = this.onDataChange.bind(this);\n    }\n\n    onSignIn(e) {\n        e.preventDefault();\n        request('/1/token', {\n            data: {\n                client_id: apiClientSettings.clientId,\n                grant_type: 'password',\n                email: this.state.email,\n                password: this.state.password,\n            }\n        }).fail(e => {\n            this.setState({\n                error: e.responseJSON.message,\n                password: '',\n            });\n        }).done(data => {\n            localStorage.setItem('access_token', data.access_token);\n            this.saveUserIdAndRedirect();\n        });\n    }\n\n    saveUserIdAndRedirect() {\n        request('/1/users/current').done(user => {\n            localStorage.setItem('user_id', user.id);\n            localStorage.setItem('user_level', user.level);\n            location.href = '/';\n        });\n    }\n\n    onDataChange(e) {\n        this.state[e.target.name] = e.target.value;\n        this.setState({error:''});\n    }\n\n    renderForm() {\n        return (\n            <form onSubmit={this.onSignIn}>\n                <div className=\"form-group\">\n                    <input \n                        name=\"email\"\n                        type=\"text\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"Email or name\"\n                        onChange={this.onDataChange}\n                        value={this.state.email}\n                        autoFocus\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"Password\"\n                        onChange={this.onDataChange}\n                        value={this.state.password}\n                        required\n                    />\n                </div>\n                <a className=\"btn\" href=\"/create-user\">Create user</a>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary pull-right\"\n                >\n                    Sign in\n                </button>\n            </form>\n        )\n    }\n\n    renderError() {\n        if (!this.state.error) return;\n        return (\n            <div \n                className=\"alert alert-warning capitalize-first-letter\" \n                role=\"alert\"\n            >\n                <strong>{this.state.error}</strong>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"standard-form\">\n                <div className=\"logo\">SEPLIS</div>\n                <div className=\"title\">Sign in</div>\n                {this.renderError()}\n                {this.renderForm()}\n            </div>            \n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\n\nclass SignOut extends React.Component {\n\n    componentDidMount() {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('accessLevel');\n        location.href = '/sign-in';\n    }\n\n    render() {\n        return null;\n    }\n}\n\nexport default SignOut;","import React from 'react';\nimport {request, apiClientSettings} from 'api';\nimport {withRouter} from 'react-router';\n\nimport 'styles/StandardForm.scss';\n\nclass CreateUser extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            error: null,\n        });\n        var email = e.target.email.value;\n        var password = e.target.password.value;\n        request('/1/users', {\n            data: {\n                name: e.target.name.value,\n                email: email,\n                password: password,\n            }\n        }).fail(e => {\n            this.setState({\n                error: e.responseJSON,\n            });\n        }).done(data => {\n            localStorage.setItem('user_id', data.id);\n            localStorage.setItem('user_level', data.level);\n            this.signin(email, password);\n        });\n    }\n\n    signin(email, password) {\n        request('/1/token', {\n            data: {\n                client_id: apiClientSettings.clientId,\n                grant_type: 'password',\n                email: email,\n                password: password,\n            }\n        }).fail(e => {\n            this.setState({\n                error: e.responseJSON,\n            });\n        }).done(data => {\n            localStorage.setItem('access_token', data.access_token);\n            location.href = '/';\n        });\n    }\n\n    renderForm() {\n        return (\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    {this.renderFieldError('name')}\n                    <input \n                        name=\"name\"\n                        type=\"text\"\n                        className=\"form-control dark-form-control\"\n                        autoFocus\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    {this.renderFieldError('email')}\n                    <input \n                        name=\"email\"\n                        type=\"text\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"test@example.net\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    {this.renderFieldError('password')}\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        className=\"form-control dark-form-control\" \n                        placeholder=\"Minimum 6 chars\"\n                        required\n                    />\n                </div>\n                <a className=\"btn\" href=\"/sign-in\">Sign in</a>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary pull-right\"\n                >\n                    Create user\n                </button>\n            </form>\n        )\n    }\n\n    renderError() {\n        if (!this.state.error) return;\n        return (\n            <div className=\"alert alert-warning capitalize-first-letter\">\n                <strong>{this.state.error.message}</strong>\n            </div>\n        )\n    }\n\n    renderFieldError(field) {\n        if ((!this.state.error) || ((!this.state.error.errors))) return;\n        for (let error of this.state.error.errors) {\n            if (error.field == field) {\n                return (\n                    <p className=\"text-danger\">{error.message}</p>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"standard-form\">\n                <div className=\"logo\">SEPLIS</div>\n                <div className=\"title\">Create user</div>\n                {this.renderError()}\n                {this.renderForm()}\n            </div>            \n        )\n    }\n}\n\nexport default withRouter(CreateUser);","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport {request} from 'api';\nimport {getUserId} from 'utils';\nimport Loader from 'components/Loader';\nimport Pagination from 'components/Pagination';\nimport ShowList from 'components/shows/List.jsx';\nimport {requireAuthed} from 'utils';\n\nclass FanOf extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.onPageChange = this.pageChange.bind(this);\n        this.state = {\n            loading: true,\n            shows: [],\n            jqXHR: null,\n            totalCount: '...',\n            page: this.props.location.query.page || 1,\n        }\n    }\n\n    setBrowserPath() {\n        browserHistory.push({\n            pathname: this.props.location.pathname,\n            query: { \n                page: this.state.page,\n            },\n        });\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath();\n            this.getShows();\n        });\n    }\n\n    componentDidMount() {\n        this.getShows();\n    }\n\n    getShows() {\n        let userId = getUserId();\n        request(`/1/users/${userId}/fan-of`, {\n            query: {\n                page: this.state.page,\n                per_page: 60,\n            }\n        }).done((shows, textStatus, jqXHR) => {\n            this.setState({\n                shows: shows,\n                loading: false,\n                jqXHR: jqXHR,\n                totalCount: jqXHR.getResponseHeader('X-Total-Count'),\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2>Fan of {this.state.totalCount} shows</h2>\n                    <Loader />\n                </span>\n            );\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">\n                        <h2 className=\"header\">\n                            Fan of {this.state.totalCount} shows\n                        </h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <ShowList shows={this.state.shows} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default FanOf;","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport {request} from 'api';\nimport Loader from 'components/Loader';\nimport Pagination from 'components/Pagination';\nimport ShowsRecentlyAired from 'components/shows/RecentlyAired.jsx';\nimport {getRecentlyAired} from 'components/shows/RecentlyAired.jsx';\nimport {requireAuthed} from 'utils';\n\nclass RecentlyAired extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.onPageChange = this.pageChange.bind(this);\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: this.props.location.query.page || 1,\n        }\n    }\n\n    setBrowserPath() {\n        browserHistory.push({\n            pathname: this.props.location.pathname,\n            query: { \n                page: this.state.page,\n            },\n        });\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath();\n            this.getItems();\n        });\n    }\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n    getItems() {\n        getRecentlyAired(60, this.state.page).then((data) => {\n            this.setState({\n                items: data.items,\n                jqXHR: data.jqXHR,\n                loading: false,\n            })\n        });\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2 className=\"header\">Recently aired</h2>\n                    <Loader />\n                </span>\n            );\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">\n                        <h2 className=\"header\">Recently aired</h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <ShowsRecentlyAired items={this.state.items} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default RecentlyAired;","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport {request} from 'api';\nimport Loader from 'components/Loader';\nimport Pagination from 'components/Pagination';\nimport Watched from 'components/shows/Watched.jsx';\nimport {getWatched} from 'components/shows/Watched.jsx';\nimport {requireAuthed} from 'utils';\n\nclass ShowsWatched extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.onPageChange = this.pageChange.bind(this);\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: this.props.location.query.page || 1,\n            totalCount: '...',\n        }\n    }\n\n    setBrowserPath() {\n        browserHistory.push({\n            pathname: this.props.location.pathname,\n            query: { \n                page: this.state.page,\n            },\n        });\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath();\n            this.getItems();\n        });\n    }\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n    getItems() {\n        getWatched(60, this.state.page).then((data) => {\n            this.setState({\n                items: data.items,\n                jqXHR: data.jqXHR,\n                loading: false,\n                totalCount: data.jqXHR.getResponseHeader('X-Total-Count'),\n            })\n        });\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2 className=\"header\">Watched {this.state.totalCount} shows</h2>\n                    <Loader />\n                </span>\n            );\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">                        \n                        <h2 className=\"header\">Watched {this.state.totalCount} shows</h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <Watched items={this.state.items} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default ShowsWatched;","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport {request} from 'api';\nimport Loader from 'components/Loader';\nimport Pagination from 'components/Pagination';\nimport ShowsRecentlyAired from 'components/shows/Countdown.jsx';\nimport {getCountdown} from 'components/shows/Countdown.jsx';\nimport {requireAuthed} from 'utils';\n\nclass Countdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.onPageChange = this.pageChange.bind(this);\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: this.props.location.query.page || 1,\n        }\n    }\n\n    setBrowserPath() {\n        browserHistory.push({\n            pathname: this.props.location.pathname,\n            query: { \n                page: this.state.page,\n            },\n        });\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath();\n            this.getItems();\n        });\n    }\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n    getItems() {\n        getCountdown(60, this.state.page).then((data) => {\n            this.setState({\n                items: data.items,\n                jqXHR: data.jqXHR,\n                loading: false,\n            })\n        });\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2 className=\"header\">Countdown</h2>\n                    <Loader />\n                </span>\n            );\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">\n                        <h2 className=\"header\">Countdown</h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <ShowsRecentlyAired items={this.state.items} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default Countdown;","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport {request} from 'api';\nimport Loader from 'components/Loader';\nimport Pagination from 'components/Pagination';\nimport EpisodesToWatchList from 'components/shows/EpisodesToWatch.jsx';\nimport {getEpisodesToWatch} from 'components/shows/EpisodesToWatch.jsx';\nimport {requireAuthed} from 'utils';\n\nclass EpisodesToWatch extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.onPageChange = this.pageChange.bind(this);\n        this.state = {\n            loading: true,\n            items: [],\n            jqXHR: null,\n            page: this.props.location.query.page || 1,\n        }\n    }\n\n    setBrowserPath() {\n        browserHistory.push({\n            pathname: this.props.location.pathname,\n            query: { \n                page: this.state.page,\n            },\n        });\n    }\n\n    pageChange(e) {\n        this.setState({\n            page: e.target.value,\n            loading: true,\n        }, () => {\n            this.setBrowserPath();\n            this.getItems();\n        });\n    }\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n    getItems() {\n        getEpisodesToWatch(60, this.state.page).then((data) => {\n            this.setState({\n                items: data.items,\n                jqXHR: data.jqXHR,\n                loading: false,\n            })\n        });\n    }\n\n    render() {\n        if (this.state.loading==true)\n            return (\n                <span>\n                    <h2 className=\"header\">Episodes to Watch</h2>\n                    <Loader />\n                </span>\n            );\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-9 col-md-10\">\n                        <h2 className=\"header\">Episodes to Watch</h2>\n                    </div>\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n                <EpisodesToWatchList items={this.state.items} />\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-10\" />\n                    <div className=\"col-sm-3 col-md-2\">\n                        <Pagination \n                            jqXHR={this.state.jqXHR} \n                            onPageChange={this.onPageChange}\n                        />\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default EpisodesToWatch;","import React from 'react';\nimport Loader from 'seplis/components/Loader';\nimport ShowsWatched, {getWatched} from 'components/shows/Watched';\nimport ShowsCountdown, {getCountdown} from 'components/shows/Countdown';\nimport ShowsRecentlyAired, {getRecentlyAired} from 'components/shows/RecentlyAired';\nimport ShowsEpisodesToWatch, {getEpisodesToWatch} from 'components/shows/EpisodesToWatch';\nimport {requireAuthed} from 'utils';\n\nclass Main extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.visChange = this.visibilitychange.bind(this);\n        document.addEventListener('visibilitychange', this.visChange);\n        this.state = {\n            key: 0,\n            loading: true,\n            failed: false,\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('visibilitychange', this.visChange);\n    }\n\n    getData() {\n        this.setState({\n            loading: true,\n            failed: false,\n        });\n        Promise.all([\n            getWatched(6, 1),\n            getCountdown(6, 1),\n            getRecentlyAired(6, 1),\n            getEpisodesToWatch(6, 1),\n        ]).then((result) => {\n            this.setState({\n                'loading': false,\n                'failed': false,\n                'watched': result[0].items,\n                'countdown': result[1].items,\n                'recentlyWatched': result[2].items,\n                'episodesToWatch': result[3].items,\n            })\n        }).catch(() => {\n            this.setState({\n                loading: false,\n                failed: true,\n                key: this.state.key + 1,\n            })\n        });\n    }\n\n    visibilitychange() {\n        if (document.hidden) return;\n        this.getData();\n    }\n\n    render() {\n        if (this.state.failed)\n            return (\n                <div className=\"alert alert-warning\">\n                    Failed to load, try refreshing.\n                </div>\n            )\n        if (this.state.loading)\n            return <Loader />;\n        return (\n            <span>\n            <h2 className=\"header header-border\">\n                <a href=\"/shows-watched\">Recently watched</a>\n            </h2>    \n            <div className=\"slider mb-2\">\n                <ShowsWatched key={`sw-${this.state.key}`} items={this.state.watched} />\n            </div>\n\n            <h2 className=\"header header-border\">\n                <a href=\"/recently-aired\">Recently Aired</a>\n            </h2>\n            <div className=\"slider mb-2\">\n                <ShowsRecentlyAired key={`sra-${this.state.key}`} items={this.state.recentlyWatched} />\n            </div>\n\n            <h2 className=\"header header-border\">\n                <a href=\"/countdown\">Countdown</a>\n            </h2>\n            <div className=\"slider mb-2\">\n                <ShowsCountdown key={`sc-${this.state.key}`} items={this.state.countdown} />\n            </div>            \n\n            <h2 className=\"header header-border\">\n                <a href=\"/episodes-to-watch\">Episodes To Watch</a>\n            </h2>\n            <div className=\"slider mb-2\">\n                <ShowsEpisodesToWatch key={`etw-${this.state.key}`} items={this.state.episodesToWatch} />\n            </div>\n            </span>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport ShowsAirDates from 'components/shows/AirDates';\nimport {requireAuthed} from 'utils';\n\nclass AirDates extends React.Component {    \n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n    }\n\n\n    render() {\n        return (\n            <ShowsAirDates />\n        )\n    }\n}\n\nexport default AirDates;","import React from 'react';\nimport {request} from 'api';\nimport {getUserId} from 'utils';\nimport Loader from 'components/Loader';\nimport ShowList from 'components/shows/List';\n\nconst oneDay = 24*60*60*1000;\nconst weekdays = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n];\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            loading: true,\n            data: [],\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        request(`/1/users/${getUserId()}/air-dates`)\n            .done((data) => {\n                this.setState({\n                    loading: false,\n                    data: data,\n                });\n            });\n    }\n\n    renderWeekday(date) {\n        let d = new Date(date);\n        return weekdays[d.getDay()];\n    }\n\n    renderHeaderDate(date) {\n        let d1 = Date.parse(date);\n        let d2 = Date.now();\n        let days = Math.round(\n            Math.ceil(\n                (d1 - d2) / oneDay\n            )\n        );\n        switch (days) {\n            case -1:\n                return (<span>Yesterday <small className=\"text-muted\">{this.renderWeekday(date)}</small></span>);\n                break;\n            case 0:\n                return (<span>Today <small className=\"text-muted\">{this.renderWeekday(date)}</small></span>);;\n                break;\n            case 1: \n                return (<span>Tomorrow <small className=\"text-muted\">{this.renderWeekday(date)}</small></span>);;\n                break;\n            default:\n                return this.renderWeekday(date);\n                break;\n        }\n    }\n\n    renderMain() {\n        if (this.state.data.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    <h1>There's nothing to watch this week!</h1>\n                    But, how can this be?<br />\n                    Well, you're properly not a fan of any shows that has \n                    episodes airing this week.\n                </div>\n            );\n        else\n            return (\n                <span>\n                    {this.state.data.map(a => (\n                    <span key={a.air_date}>\n                        <h3 className=\"header header-border\" title={a.air_date}>\n                            {this.renderHeaderDate(a.air_date)}\n                        </h3>\n                        <ShowList \n                            shows={a.shows} \n                        />\n                    </span>\n                    ))}\n                </span>\n            );\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loader />;\n        return this.renderMain();\n    }\n}\n\nexport default Main;","import React from 'react';\nimport {requireAuthed} from 'utils';\n\nclass Account extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1>Account</h1>\n                </div>\n                <div className=\"col-12\">\n                    <a href=\"/password\">Change password</a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Account;","import React from 'react';\nimport {requireAuthed} from 'utils';\nimport {request} from 'api';\n\n\nclass Password extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.state = {\n            error: null,\n            success: null,\n            loading: false,\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({error:null, success: null, loading: true});\n        request('/1/users/current/change-password', {\n            data: {\n                'password': this.password.value,\n                'new_password': this.newPassword.value,\n            }\n        }).fail(e => {\n            this.password.focus();\n            this.setState({error: e.responseJSON, loading: false});\n        }).done(() => {\n            this.setState({success: true, loading: false});\n        }).always(() => {            \n            this.password.value = '';\n            this.newPassword.value = '';\n        });\n    }\n\n    renderError() {\n        if (!this.state.error) return;\n        return (\n            <div className=\"alert alert-warning capitalize-first-letter\">\n                <strong>{this.state.error.message}</strong>\n            </div>\n        )\n    }\n\n    renderFieldError(field) {\n        if ((!this.state.error) || ((!this.state.error.errors))) return;\n        for (let error of this.state.error.errors) {\n            if (error.field == field) {\n                return (\n                    <p className=\"text-danger\">{error.message}</p>\n                )\n            }\n        }\n    }\n\n    renderSuccess() {\n        if (!this.state.success) return;\n        return (\n            <div className=\"alert alert-success\">\n                <strong>Your password was successfully changed.</strong>\n            </div>\n        )\n    }\n\n    renderButton() {\n        if (this.state.loading == false)\n            return (\n                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            );\n        if (this.state.loading == true) \n            return (\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={true}>\n                    Changing your password...\n                </button>\n            );        \n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1 className=\"col-margin\">Change password</h1>\n                </div>\n                <div className=\"col-12 col-sm-8 col-md-6\">\n                    {this.renderSuccess()}\n                    {this.renderError()}\n                    <form method=\"post\" onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Current password</label>\n                            {this.renderFieldError('password')}\n                            <input \n                                ref={(ref) => (this.password = ref)}\n                                type=\"password\"\n                                name=\"password\"\n                                className=\"form-control dark-form-control\" \n                            />\n                        </div>                        \n                        <div className=\"form-group\">\n                            <label>New password</label>\n                            {this.renderFieldError('new_password')}\n                            <input \n                                ref={(ref) => (this.newPassword = ref)}\n                                type=\"password\"\n                                name=\"new_password\"\n                                className=\"form-control dark-form-control\"\n                            />\n                        </div>\n                        {this.renderButton()}\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Password;","import React from 'react';\nimport {Link} from 'react-router';\nimport Loader from 'components/Loader';\nimport {requireAuthed} from 'utils';\nimport {request} from 'api';\n\nclass PlayServers extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.state = {\n            loading: true,\n            playServers: [],\n        }\n    }\n\n    componentDidMount() {\n        this.getPlayServers();\n    }\n\n    getPlayServers() {\n        this.setState({loading: true});\n        request(`/1/play-servers`, {\n            body: {\n                per_page: 100,\n            }\n        }).done(data => {\n            this.setState({playServers: data, loading: false});\n        });\n    }\n\n    renderPlayServers() {\n        if (this.state.playServers.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    You have no play servers.\n                </div>\n            );\n        return (\n            <table className=\"table\">\n            <tbody>\n            {this.state.playServers.map(s => (\n                <tr key={s.id}>\n                    <td>{s.name}</td>\n                    <td>{s.url}</td>\n                    <td width=\"10px\">\n                        <Link to={`/play-server?id=${s.id}`}>\n                            <i className=\"fa fa-pencil-square-o\"></i>\n                        </Link>\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n            </table>\n        )\n    }\n\n    render2() {\n        if (this.state.loading)\n            return <Loader />;\n        return (\n            <div className=\"col-12 col-sm-7 col-md-5\">\n                <Link \n                    to=\"/play-server\"\n                    className=\"btn btn-success col-margin\"\n                >\n                    New play server\n                </Link>\n                {this.renderPlayServers()}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1 className=\"col-margin\">Play servers</h1>\n                </div>\n                {this.render2()}\n            </div>\n        )\n    }\n}\n\nexport default PlayServers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router';\nimport Loader from 'components/Loader';\nimport {requireAuthed} from 'utils';\nimport {request} from 'api';\n\nconst propTypes = {\n    location: PropTypes.object.isRequired,\n}\n\nclass PlayServer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.onGiveAccess = this.onGiveAccess.bind(this);\n        this.onRemoveUserAccess = this.onRemoveUserAccess.bind(this);\n        this.state = {\n            loading: 0,\n            error: null,\n            success: false,\n            playServer: {\n                name: '',\n                url: '',\n                secret: '',\n            },\n            users: [],\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.location.query.id) {\n            this.getPlayServer();\n            this.getUsersWithAccess();\n        }\n    }\n\n    incLoading(val) {\n        this.setState((state) => {\n            return {loading: state.loading + val}\n        })\n    }\n\n    getPlayServer() {\n        this.incLoading(1);\n        request(\n            `/1/play-servers/${this.props.location.query.id}`\n        ).fail(e => {\n            // TODO: display the error...\n        }).done(data => {\n            this.setState({playServer: data});\n        }).always(() => {\n            this.incLoading(-1);\n        });\n    }\n\n    getUsersWithAccess() {\n        this.incLoading(1);\n        request(\n            `/1/play-servers/${this.props.location.query.id}/users`\n        ).fail(e => {\n            // TODO: display the error...\n        }).done(data => {\n            this.setState({users: data});\n        }).always(() => {\n            this.incLoading(-1);\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        let url = `/1/play-servers`;\n        if (this.props.location.query.id) {\n            url += `/${this.props.location.query.id}`;\n        }\n        request(url, {\n            method: this.props.location.query.id?'PUT':'POST',\n            data: {\n                name: this.name.value,\n                url: this.url.value,\n                secret: this.secret.value,\n            }\n        }).fail(e => {\n            this.setState({error: e.responseJSON});\n        }).done(data => {\n            this.props.router.push(`/play-server?id=${data.id}`);\n        });\n    }\n\n    onDelete(e) {\n        e.preventDefault();\n        if (!confirm('Are you sure you wan\\'t to delete this play server?'))\n            return;\n        request(`/1/play-servers/${this.props.location.query.id}`, {\n            method: 'DELETE',\n        }).fail(e => {\n            this.setState({error: e.responseJSON});\n        }).done(() => {\n            this.props.router.push('/play-servers');\n        });\n    }\n\n    onGiveAccess(e) {\n        e.preventDefault();\n        var value = e.target.name.value;\n        request('/1/users', {\n            query: {\n                username: value,\n            }\n        }).fail(e => {\n            alert(e.message);\n        }).done(data => {\n            if (data.length != 1) {\n                alert(`Unknown user: ${value}`);\n                return;\n            }\n            let id = this.props.location.query.id;\n            request(`/1/play-servers/${id}/users/${data[0].id}`, {\n               method: 'PUT',\n            }).fail(e => {\n                alert(e.message);\n            }).done(() => {\n                this.getUsersWithAccess();\n            });\n        });\n    }\n\n    onRemoveUserAccess(e) {\n        e.preventDefault();\n        let id = this.props.location.query.id;\n        request(`/1/play-servers/${id}/users/${e.target.userId.value}`, {\n           method: 'DELETE',\n        }).fail(e => {\n            alert(e.message);\n        }).done(() => {\n            this.getUsersWithAccess();\n        });\n    }\n\n    renderUsers() {\n        if (this.state.users.length == 0)\n            return (\n                <div className=\"alert alert-info\">\n                    No one has access to this play server. \n                </div>\n            );\n        return (\n            <table className=\"table table-sm\">\n                <tbody>\n                    {this.state.users.map(u => (\n                        <tr key={u.id}>\n                            <td style={{verticalAlign: 'middle'}}>{u.name}</td>\n                            <td width=\"10px\" className=\"text-xs-right\">\n                                <form onSubmit={this.onRemoveUserAccess}>\n                                    <input \n                                        type=\"hidden\"\n                                        name=\"userId\"\n                                        value={u.id}\n                                    />\n                                    <button type=\"submit\" className=\"btn btn-danger\" title=\"Delete user\">\n                                        <i className=\"fa fa-times\"></i>\n                                    </button>\n                                </form>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        )\n    }\n\n    renderGiveAccessForm() {\n        return (\n            <form className=\"col-margin row\" onSubmit={this.onGiveAccess}>\n                <div className=\"col-6\">\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control dark-form-control\" \n                    placeholder=\"Username\"\n                />\n                </div>\n                <div className=\"col-4\">\n                <button className=\"btn btn-success\">\n                    Give access\n                </button>\n                </div>\n            </form>\n        )\n    }\n\n    renderUsersWithAccess() {\n        if (!this.props.location.query.id) return;\n        return (\n            <span>\n                <h2 className=\"col-margin\">Users with access</h2>\n                {this.renderGiveAccessForm()}\n                {this.renderUsers()}\n            </span>\n        )\n    }\n\n    renderDeleteButton() {\n        if (!this.props.location.query.id) return;\n        return (\n            <button className=\"btn btn-danger\" onClick={this.onDelete}>\n                Delete\n            </button>\n        )\n    }\n\n    renderError() {\n        if (!this.state.error) return;\n        return (\n            <div className=\"alert alert-warning capitalize-first-letter col-margin\">\n                <strong>{this.state.error.message}</strong>\n            </div>\n        )\n    }\n\n    renderFieldError(field) {\n        if ((!this.state.error) || ((!this.state.error.errors))) return;\n        for (let error of this.state.error.errors) {\n            if (error.field == field) {\n                return (\n                    <p className=\"text-danger\">{error.message}</p>\n                )\n            }\n        }\n    }\n\n    render2() {\n        if (this.state.loading > 0)\n            return <Loader />\n        return (\n            <div className=\"col-12 col-sm-8 col-md-6\">\n                {this.renderError()}\n                <form \n                    method=\"post\" \n                    className=\"col-margin\" \n                    onSubmit={this.onSubmit}\n                >\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        {this.renderFieldError('name')}\n                        <input\n                            ref={(ref) => (this.name = ref)}\n                            type=\"text\"\n                            className=\"form-control dark-form-control\"\n                            defaultValue={this.state.playServer.name}\n                            placeholder=\"My play server\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>URL</label>\n                        {this.renderFieldError('url')}\n                        <input\n                            ref={(ref) => (this.url = ref)}\n                            type=\"text\"\n                            className=\"form-control dark-form-control\"\n                            defaultValue={this.state.playServer.url}\n                            placeholder=\"https://example.net\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Secret</label>\n                        {this.renderFieldError('secret')}\n                        <input\n                            ref={(ref) => (this.secret = ref)}\n                            type=\"text\"\n                            className=\"form-control dark-form-control\"\n                            defaultValue={this.state.playServer.secret}\n                            placeholder=\"A super long secret\"\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary m-r-1\">\n                        Save\n                    </button> \n                    {this.renderDeleteButton()}\n                </form>\n\n                {this.renderUsersWithAccess()}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1 className=\"col-margin\">Play server</h1>\n                </div>\n                {this.render2()}\n            </div>\n        )\n    }\n}\nPlayServer.propTypes = propTypes;\n\nexport default withRouter(PlayServer);","import React from 'react';\nimport Loader from 'components/Loader';\nimport {requireAuthed, getUserId, secondsToPretty} from 'utils';\nimport {request} from 'api';\n\nclass UserShowsStats extends React.Component {\n\n    constructor(props) {\n        super(props);\n        requireAuthed();\n        this.state = {\n            loading: true,\n            stats: null,\n        }\n    }\n\n    componentDidMount() {\n        this.getStats();\n    }\n\n    getStats() {\n        let userId = getUserId();\n        request(`/1/users/${userId}/show-stats`).done((stats) => {\n            this.setState({\n                loading: false,\n                stats: stats,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return (\n                <span>\n                    <Loader />\n                    <center><h2>Loading your stats</h2></center>\n                </span>\n            );\n        return (\n            <span>\n            <h2>Your TV show stats</h2>\n            <table className=\"table table-striped\">\n                <tbody>\n                <tr><th width=\"220px\">Fan of</th>\n                    <td>{this.state.stats.fan_of} shows</td></tr>\n                <tr><th>Time spent watching</th>\n                    <td>{secondsToPretty(this.state.stats.episodes_watched_minutes*60, true)}</td></tr>\n                <tr><th>Episodes watched</th>\n                    <td>{this.state.stats.episodes_watched}</td></tr>\n                <tr><th>Watched episodes from</th>\n                    <td>{this.state.stats.shows_watched} shows</td></tr>\n                </tbody>\n            </table>\n            </span>\n        )\n    }\n}\n\nexport default UserShowsStats;","import React from 'react';\nimport {request} from 'api';\nimport {isAuthed, getUserLevel} from 'utils';\nimport Search from './Search';\nimport ChromecastIcon from './player/ChromecastIcon';\nimport ChromecastBar from './player/ChromecastBar';\n\nimport './Navbar.scss';\n\nclass Navbar extends React.Component {\n\n    renderShowDropdown() {\n        return (\n            <span className=\"dropdown\">\n                <a \n                    className=\"link dropdown-toggle\" \n                    data-toggle=\"dropdown\"\n                >\n                    Shows                      \n                </a>\n                <div className=\"dropdown-menu\">\n                    <a className=\"dropdown-item\" href=\"/countdown\">Countdown</a>\n                    <a className=\"dropdown-item\" href=\"/fan-of\">Fan of</a>\n                    <a className=\"dropdown-item\" href=\"/episodes-to-watch\">Episodes to Watch</a>\n                    <a className=\"dropdown-item\" href=\"/recently-aired\">Recently Aired</a>\n                    <a className=\"dropdown-item\" href=\"/shows-watched\">Watched</a>\n                    <a className=\"dropdown-item\" href=\"/user-shows-stats\">Stats</a>\n                    <div className=\"dropdown-divider\"></div>\n                    <a className=\"dropdown-item\" href=\"/show-new\">New show</a>\n                </div>\n            </span>\n        )\n    }\n\n    renderMain() {\n        return (\n            <a \n                className=\"link\" \n                href=\"/main\"\n            >\n                Main\n            </a>\n        )\n    }\n\n    renderAirDates() {\n        return (\n            <a \n                className=\"link\" \n                href=\"/air-dates\"\n            >\n                Air dates\n            </a>\n        )\n    }\n\n    renderUserMenu() {\n        if (!isAuthed())\n            return;\n        return (\n            <span className=\"dropdown\">\n                <a \n                    className=\"link dropdown-toggle\" \n                    data-toggle=\"dropdown\"\n                >\n                    <i className=\"fa fa-user\"></i>                      \n                </a>\n                <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"/account\">Account</a>\n                    <a className=\"dropdown-item\" href=\"/play-servers\">Play servers</a>\n                    <div className=\"dropdown-divider\"></div>\n                    <a className=\"dropdown-item\" href=\"/sign-out\">Sign out</a>\n                </div>\n            </span>\n        )\n    }\n\n    renderChromecast() {\n        if (!isAuthed())\n            return;\n        return (               \n            <span className=\"link\">\n                <ChromecastBar />\n                <ChromecastIcon />\n            </span>\n        )    \n    }\n\n    renderSignIn() {\n        if (isAuthed()) \n            return;\n        return (\n            <a \n                className=\"link\" \n                href=\"/sign-in\"\n            >\n                Sign in\n            </a>\n        )\n    }\n\n    renderCreateUser() {\n        if (isAuthed()) \n            return;\n        return (\n            <a \n                className=\"link\" \n                href=\"/create-user\"\n            >\n                Create user\n            </a>\n        )\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar-seplis\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-auto\">\n                            {this.renderMain()}\n                            {this.renderAirDates()}\n                            {this.renderShowDropdown()}\n                        </div>                        \n\n                        <div className=\"col-auto ml-auto order-sm-2 order-md-12\">\n                            {this.renderChromecast()}                            \n                            {this.renderCreateUser()}\n                            {this.renderSignIn()}\n                            {this.renderUserMenu()}\n                        </div>\n\n                        <div className=\"col-12 col-md-6 m-auto order-sm-12 order-md-2\">\n                            <Search key=\"Search\" />\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {request} from 'api';\n\nimport './Search.scss';\n\nconst KEY_UP = 38;\nconst KEY_DOWN = 40;\nconst KEY_ENTER = 13;\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onInputChanged = this.inputChanged.bind(this);\n        this.onKeyDown = this.keyDown.bind(this);\n        this.onMouseOver = this.mouseOver.bind(this);\n        this.onMouseOut = this.mouseOut.bind(this);\n        this.onSubmit = this.submit.bind(this);\n        this.onClick = this.click.bind(this);\n        this.state = {\n            results: [],\n            show: false,\n            selectedResultId: null,\n        }\n        this.requesting = null;\n        this.selectedResultId = null;\n        this.onDocumentClick = this.documentClick.bind(this);\n    }\n\n    componentDidMount() {        \n        document.addEventListener('click', this.onDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onDocumentClick);\n    }\n\n    documentClick(e) {\n        if (!this.form.contains(e.target)) {\n            this.setState({show: false});\n        }\n    }\n\n    inputChanged(e) {\n        if (this.requesting)\n            this.requesting.abort();\n        let val = e.target.value.trim();\n        if (val == '') {\n            this.setState({\n                results: [],\n                show: false,\n                selectedResultId: null,\n            });\n            return;\n        }\n        this.requesting = request('/1/shows', {\n            query: {\n                title_suggest: e.target.value.trim(),\n                per_page: 10,\n                fields: 'title,premiered,poster_image',\n            }\n        }).done(data => {\n            this.suggestNode.scrollTop = 0;\n            this.setState({\n                results: data,\n                show: true,\n                selectedResultId: null,\n            });\n            this.setNextSelectedId(0);\n        });\n    }\n\n    keyDown(e) {\n        switch (e.keyCode) {\n            case KEY_UP:\n                this.setNextSelectedId(-1);\n                break;\n            case KEY_DOWN: \n                this.setNextSelectedId(1);\n                break;\n            case KEY_ENTER:\n                if (this.state.selectedResultId)\n                    location.href = `/show/${this.state.selectedResultId}`;\n                break;\n        }\n    }\n\n    mouseOver(e) {\n        this.state.selectedResultId = parseInt(e.target.getAttribute('data-id'));\n        this.setNextSelectedId(0, true);\n    }\n\n    mouseOut(e) {\n        this.setState({selectedResultId: null});\n    }\n\n    setNextSelectedId(val, disableScroll) {\n        if (this.state.results.length == 0)\n            return;\n        let i = -1;\n        if (this.state.selectedResultId) {\n            i = 0;\n            for (let result of this.state.results) {\n                if (result.id == this.state.selectedResultId) {\n                    break;\n                }\n                i++;\n            }\n        }\n        i = i + val;\n        if (i < 0)\n            i = 0;\n        if (i > (this.state.results.length - 1))\n            i = this.state.results.length - 1;\n        let id = this.state.results[i].id;\n        this.setState({\n            selectedResultId: id,\n        });\n        if (disableScroll) \n            return;\n        let height = document.getElementById('sresult-'+id).offsetHeight;\n        if (((i+1) * height) > this.suggestNode.offsetHeight) {\n            let p = Math.floor(this.suggestNode.offsetHeight / height);\n            let g = (i-p+1);\n            let l = this.suggestNode.offsetHeight % height;\n            this.suggestNode.scrollTop = (g*height)+l;\n        } else {\n            this.suggestNode.scrollTop = 0;\n        }\n    }\n\n    submit(e) {\n        e.preventDefault();\n    }\n\n    click(e) {\n        if (this.state.selectedResultId)\n            location.href = `/show/${this.state.selectedResultId}`;\n    }\n\n    resultClassName(result) {\n        let className = 'result';\n        if (result.id == this.state.selectedResultId)\n            className += ' selected';\n        return className;\n    }\n\n    render() {\n        return (\n            <form \n                id=\"search\" \n                className=\"form-inline\" \n                onSubmit={this.onSubmit}                \n                ref={(ref) => this.form = ref}\n            >\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    placeholder=\"Search\" \n                    onChange={this.onInputChanged}\n                    onKeyDown={this.onKeyDown}\n                />\n                <div \n                    className=\"suggest\"\n                    ref={(ref) => this.suggestNode = ref}\n                    style={{display:this.state.show?'block':'none'}}\n                >\n                    {this.state.results.map(r => (\n                        <div \n                            key={r.id}\n                            id={`sresult-${r.id}`}\n                            data-id={r.id}\n                            href={`/show/${r.id}`} \n                            className={this.resultClassName(r)}\n                            onMouseOver={this.onMouseOver}\n                            onMouseOut={this.onMouseOut}\n                            onClick={this.onClick}\n                        >\n                            <div className=\"img\">\n                                <img \n                                    src={r.poster_image!=null?r.poster_image.url + '@SY100':''} \n                                />\n                            </div>\n                            <div className=\"title\">\n                                {r.title} ({r.premiered?r.premiered.substring(0, 4):''})\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport ClassNames from 'classnames';\nimport Chromecast from './Chromecast';\nimport Slider from './Slider';\nimport AudioSubBar from './AudioSubBar.jsx';\nimport PlayNext from './PlayNext';\nimport {episodeTitle, secondsToTime} from 'utils';\nimport {request} from 'api';\nimport {trigger_episode_watched_status} from 'seplis/events';\n\nimport './ChromecastBar.scss';\n\nclass ChromecastBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            connected: false,\n            deviceName: \"\",\n            playerState: '',\n            info: null,\n            currentTime: 0,\n            loading: false,\n            changingTime: false,\n        }\n        this.cast = null;\n\n        this.onSliderReturnCurrentTime = this.sliderReturnCurrentTime.bind(this);\n        this.onSliderNewTime = this.sliderNewTime.bind(this);\n        this.onPlayPauseClick = this.playPauseClick.bind(this);\n        this.onAudioChange = this.audioChange.bind(this);\n        this.onSubtitleChange = this.subtitleChange.bind(this);\n        this.clickPlayNextEpisode = this.playNextEpisode.bind(this);\n    }\n\n    componentDidMount() {\n        this.cast = new Chromecast();\n        this.cast.load(this.initCast.bind(this));\n    }\n\n    componentWillUnmount() {\n        this.cast.removeEventListener(\n            'anyChanged',\n            this.castStateChanged.bind(this)\n        );\n\n        var session = this.cast.getSession();\n        if (session) {\n            session.removeMessageListener(\n                'urn:x-cast:net.seplis.cast.info',\n                this.receiveCastInfo.bind(this),\n            );\n        }\n    }\n\n    audioChange(lang) {\n        if (lang == '')\n            lang = null;\n        this.subAudioSubSave({audio_lang: lang});\n    }    \n\n    subtitleChange(lang) {\n        if (lang == '')\n            lang = null;\n        this.subAudioSubSave({subtitle_lang: lang});\n    }\n\n    subAudioSubSave(data) {\n        var show = this.state.info.show;\n        var episode = this.state.info.episode;\n        request(`/1/shows/${show.id}/user-subtitle-lang`, {\n            method: 'PATCH',\n            data: data,\n        }).done(() => {\n            this.cast.playEpisode(show.id, episode.number, this.state.currentTime);\n        });\n    }\n\n    initCast() {\n        this.cast.addEventListener(\n            'anyChanged',\n            this.castStateChanged.bind(this),\n        )\n    }\n\n    playPauseClick(event) {\n        this.cast.playOrPause();\n    }\n\n    castStateChanged(event) {\n        switch (event.field) {\n            case 'playerState':\n                this.playerStateChanged(event);\n                break;\n            case 'isConnected':\n                this.connectedChanged();\n                break;\n            case 'currentTime':\n                this.currentTimeChanged(event);\n                break;\n        }\n    }\n\n    connectedChanged() {\n        let connected = this.cast.isConnected();\n        this.setState({\n            connected: connected,\n            deviceName: (connected)?this.cast.getFriendlyName():'',\n        });\n        if (connected) {\n            this.setState({loading: false});\n            this.cast.getSession().addMessageListener(\n                'urn:x-cast:net.seplis.cast.info',\n                this.receiveCastInfo.bind(this),\n            );\n            this.cast.getSession().sendMessage(\n                'urn:x-cast:net.seplis.cast.sendinfo', \n                {}\n            );\n        } else {\n            this.setState({info: null});\n        }\n    }\n\n    receiveCastInfo(namespace, message) {\n        this.setState({\n            info: JSON.parse(message),\n            playNextEpisode: null,\n        }, () => {\n            if (this.cast.getMediaSession()) {\n                this.currentTimeChanged({\n                    value: this.cast.getMediaSession().getEstimatedTime()\n                });\n            }\n            this.getPlayNextEpisode();\n        });\n    }\n\n    playerStateChanged(event) {\n        this.setState({\n            playerState: event.value,\n            loading: (event.value == 'BUFFERING') || this.changingTime,\n        });\n        if (!this.state.info)\n            this.cast.getSession().sendMessage(\n                'urn:x-cast:net.seplis.cast.sendinfo', \n                {}\n            );\n        if (event.value == 'IDLE') {\n            trigger_episode_watched_status('refresh', 0, 0);\n        }\n    }\n\n    getPlayNextEpisode() {\n        if (!this.state.info)\n            return;\n        let number = parseInt(this.state.info.episode.number) + 1;\n        let showId = this.state.info.show.id;\n        request(\n            `/1/shows/${showId}/episodes/${number}`\n        ).done(data => {\n            this.setState({nextEpisode: data});\n        });\n    }\n\n    playNextEpisode() {\n        if ((!this.state.nextEpisode) || (!this.state.info))\n            return;\n        let info = this.state.info;\n        info['episode'] = this.state.nextEpisode;\n        info['startTime'] = 0;\n        this.setState({\n            nextEpisode: null,\n            info: info,\n            playerState: '',\n            loading: true,\n            changingTime: true,\n            currentTime: 0,\n        });\n        this.cast.playEpisode(\n            this.state.info.show.id,\n            this.state.nextEpisode.number,\n            0,\n        ).catch(() => {\n            this.setState({changingTime: false});\n        }).then(() => {\n            // iOS fix\n            this.cast.getSession().sendMessage(\n                'urn:x-cast:net.seplis.cast.sendinfo', \n                {}\n            );\n            this.setState({changingTime: false});\n        }); \n    }\n\n    currentTimeChanged(event) {\n        let time = event.value;\n        if (!this.cast.getMediaSession())\n            return;     \n        if (!this.cast.getMediaSession().items)\n            return;\n        if (this.cast.getMediaSession().items.length != 1)\n            return;\n        let startTime = this.cast.getMediaSession().items[0].startTime;\n        if (startTime == 0 && this.state.info)\n            time += this.state.info.startTime;\n        this.setState({currentTime: time});\n    }\n\n    sliderNewTime(newTime) {\n        this.cast.pause(() => {\n            this.state.info['startTime'] = newTime;\n            this.setState({\n                loading: true,\n                currentTime: newTime,\n                changingTime: true,\n            });\n            this.cast.playEpisode(\n                this.state.info.show.id,\n                this.state.info.episode.number,\n                newTime,\n            ).catch(() => {\n                this.setState({changingTime: false});\n            }).then(() => {\n                // iOS fix\n                this.cast.getSession().sendMessage(\n                    'urn:x-cast:net.seplis.cast.sendinfo', \n                    {}\n                );\n                this.setState({changingTime: false});\n            });            \n        });\n    }\n\n    sliderReturnCurrentTime() {\n        return this.state.currentTime;\n    }\n\n    renderPlayControl() {\n        if (this.state.loading) {\n            return (\n                <div className=\"control\">\n                    <img src=\"/static/img/spinner.svg\" />\n                </div>\n            )\n        }\n        let playPause = ClassNames({\n            fa: true,\n            'fa-pause': this.state.playerState == 'PLAYING',\n            'fa-play': this.state.playerState != 'PLAYING',\n        });\n        return (\n            <div className=\"control\">\n                <span \n                    className={playPause}\n                    onClick={this.onPlayPauseClick}\n                >\n                </span>\n            </div>\n        )\n    }\n\n    getDuration() {\n        if (!this.state.info)\n            return 0;\n        return parseInt(\n            this.state.info.metadata.format.duration\n        );\n    }\n\n    getPlayNextInfo() {\n        if (!this.state.info || !this.state.info.show || !this.state.nextEpisode) \n            return null;\n        let show = this.state.info.show;\n        let episode = this.state.nextEpisode;\n        let title = episodeTitle(show, episode);\n        return {\n            title: title,\n            url: `/show/${show.id}/episode/${episode.number}/play`\n        }\n    }\n\n    renderPlayNext() {\n        let info = this.getPlayNextInfo();\n        if (!info) return;\n        return <div className=\"control\">\n            <span \n                className=\"fa fa-step-forward\"\n                onClick={this.clickPlayNextEpisode}\n            />\n        </div>\n    }\n\n    renderPlaying() {\n        let show = this.state.info.show;\n        let episode = this.state.info.episode;\n        return (\n            <div id=\"castbar\">\n            <div className=\"container\">\n                <div className=\"text\">\n                    <b>\n                    &nbsp;{show.title} - {episodeTitle(show, episode)}\n                    </b>\n                    &nbsp;on {this.state.deviceName}\n                </div>\n                <div className=\"controls\">\n                </div>\n                <div className=\"controls\">\n                    {this.renderPlayControl()}\n                    <div className=\"control-text\">\n                        {secondsToTime(this.state.currentTime)}\n                    </div>\n                    <Slider\n                        duration={this.getDuration()}\n                        onReturnCurrentTime={this.onSliderReturnCurrentTime}\n                        onNewTime={this.onSliderNewTime}\n                    />\n                    <div className=\"control-text\">\n                        {secondsToTime(this.getDuration())}\n                    </div>\n                    <div className=\"control\">\n                        <AudioSubBar \n                            metadata={this.state.info.metadata}\n                            bottom={true}\n                            onAudioChange={this.onAudioChange}\n                            onSubtitleChange={this.onSubtitleChange}\n                        />\n                    </div>\n                    {this.renderPlayNext()}\n                </div>\n            </div>\n            </div>\n        )\n    }\n\n    renderFinished() {\n        let show = this.state.info.show;\n        let episode = this.state.info.episode;\n        let playNext = this.getPlayNextInfo();\n        if (!playNext) return null;\n        return (\n            <div id=\"castbar\">\n            <div className=\"container\">\n                <div className=\"text\">\n                    <b>{this.state.deviceName}</b>\n                    <br />\n                    <b>Play next episode:</b> \n                    &nbsp;<a onClick={this.clickPlayNextEpisode}>\n                        {show.title} - {playNext['title']}\n                    </a>\n                </div>\n            </div>\n            </div>\n        )\n    }\n\n    renderLoading() {\n        if (!this.state.loading)\n            return;\n        return <img src=\"/static/img/spinner.svg\" />;\n    }\n\n    renderReadyToPlay() {\n        return (\n            <div id=\"castbar\">\n            <div className=\"container\">\n            <div className=\"text\">\n                <b>Ready to cast on {this.state.deviceName}</b> <br />\n                {this.renderLoading()}\n                {this.renderPlayNext()}\n            </div>\n            </div>\n            </div>\n        )\n    }\n\n    render() {\n        if ((!this.cast) || (!this.state.connected)) {\n            return null;\n        }\n        if (this.state.info && (this.state.playerState == 'IDLE') && \n            !this.state.changingTime)\n            return this.renderFinished();\n        if (this.state.info)\n            return this.renderPlaying();\n        return this.renderReadyToPlay();\n    }\n}\n\nexport default ChromecastBar;"],"sourceRoot":""}